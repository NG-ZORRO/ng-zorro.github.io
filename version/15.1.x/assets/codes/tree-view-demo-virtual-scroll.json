{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FlatTreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/cdk/tree'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTreeFlatDataSource<span class=\"token punctuation\">,</span> NzTreeFlattener <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/tree-view'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FoodNode</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\n  children<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> FoodNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> FoodNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> list<span class=\"token punctuation\">:</span> FoodNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> `$<span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> treeNode<span class=\"token punctuation\">:</span> FoodNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      name\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      treeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> level <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> TREE_DATA<span class=\"token punctuation\">:</span> FoodNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Flat node with expandable and level information */</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ExampleFlatNode</span> <span class=\"token punctuation\">{</span>\n  expandable<span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-tree-view-virtual-scroll'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-virtual-scroll-view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>virtual-scroll-tree<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzTreeControl]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>treeControl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzDataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">*nzTreeNodeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTreeNodePadding</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-toggle</span> <span class=\"token attr-name\">nzTreeNodeNoopToggle</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n        {{ node.name }}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">*nzTreeNodeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node; when: hasChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTreeNodePadding</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">nz-icon</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>caret-down<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTreeNodeToggleRotateIcon</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n        {{ node.name }}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-virtual-scroll-view</span><span class=\"token punctuation\">></span></span>\n  `</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token styles-string\">styles: [\n    <span class=\"token css\"><span class=\"token selector\">`\n      <span class=\"token class\">.virtual-scroll-tree</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    `</span>\n  ]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoTreeViewVirtualScrollComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> transformer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">:</span> FoodNode<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ExampleFlatNode <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    expandable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    level\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  treeControl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlatTreeControl</span><span class=\"token operator\">&lt;</span>ExampleFlatNode<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  treeFlattener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NzTreeFlattener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>children\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NzTreeFlatDataSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeFlattener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>TREE_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">.</span><span class=\"token function\">expandAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  hasChild <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> ExampleFlatNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ExampleFlatNode <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">.</span>dataNodes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span><span class=\"token operator\">></span> n<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n\nfunction dig(path: string = '0', level: number = 3): FoodNode[] {\n  const list: FoodNode[] = [];\n  for (let i = 0; i < 10; i += 1) {\n    const name = `${path}-${i}`;\n    const treeNode: FoodNode = {\n      name\n    };\n\n    if (level > 0) {\n      treeNode.children = dig(name, level - 1);\n    }\n\n    list.push(treeNode);\n  }\n  return list;\n}\n\nconst TREE_DATA: FoodNode[] = dig();\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-virtual-scroll',\n  template: `\n    <nz-tree-virtual-scroll-view class=\"virtual-scroll-tree\" [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        {{ node.name }}\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <span nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></span>\n        </nz-tree-node-toggle>\n        {{ node.name }}\n      </nz-tree-node>\n    </nz-tree-virtual-scroll-view>\n  `,\n  styles: [\n    `\n      .virtual-scroll-tree {\n        height: 200px;\n      }\n    `\n  ]\n})\nexport class NzDemoTreeViewVirtualScrollComponent {\n  private transformer = (node: FoodNode, level: number): ExampleFlatNode => ({\n    expandable: !!node.children && node.children.length > 0,\n    name: node.name,\n    level\n  });\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n    this.treeControl.expandAll();\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode): boolean => node.expandable;\n\n  getNode(name: string): ExampleFlatNode | null {\n    return this.treeControl.dataNodes.find(n => n.name === name) || null;\n  }\n}\n"}
