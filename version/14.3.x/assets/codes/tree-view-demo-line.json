{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FlatTreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/cdk/tree'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AfterViewInit<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTreeFlatDataSource<span class=\"token punctuation\">,</span> NzTreeFlattener <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/tree-view'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\n  children<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> TreeNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> TREE_DATA<span class=\"token punctuation\">:</span> TreeNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'parent 1'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'parent 1-0'</span><span class=\"token punctuation\">,</span>\n        children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'parent 1-1'</span><span class=\"token punctuation\">,</span>\n        children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'parent 1-1-0'</span><span class=\"token punctuation\">,</span>\n            children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'parent 2'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'leaf'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlatNode</span> <span class=\"token punctuation\">{</span>\n  expandable<span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-tree-view-line'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    Show Leaf Icon:\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-switch</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>showLeafIcon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-switch</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-view</span> <span class=\"token attr-name\">[nzTreeControl]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>treeControl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzDataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">*nzTreeNodeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTreeNodeIndentLine</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-toggle</span> <span class=\"token attr-name\">nzTreeNodeNoopToggle</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>showLeafIcon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">nz-icon</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTheme</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>outline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-option</span><span class=\"token punctuation\">></span></span>\n          {{ node.name }}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-option</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">*nzTreeNodeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node; when: hasChild<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTreeNodeIndentLine</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span>\n            <span class=\"token attr-name\">nz-icon</span>\n            <span class=\"token attr-name\">[nzType]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>treeControl.isExpanded(node) ? <span class=\"token punctuation\">'</span>minus-square<span class=\"token punctuation\">'</span> : <span class=\"token punctuation\">'</span>plus-square<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">nzTheme</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>outline<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-toggle</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node-option</span><span class=\"token punctuation\">></span></span>\n          {{ node.name }}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node-option</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-view</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoTreeViewLineComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AfterViewInit</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> transformer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">:</span> TreeNode<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> FlatNode <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    expandable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    level\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  treeControl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlatTreeControl</span><span class=\"token operator\">&lt;</span>FlatNode<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  treeFlattener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NzTreeFlattener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable<span class=\"token punctuation\">,</span>\n    node <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>children\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NzTreeFlatDataSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeFlattener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  showLeafIcon <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>TREE_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  hasChild <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> FlatNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> node<span class=\"token punctuation\">.</span>expandable<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">ngAfterViewInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">.</span><span class=\"token function\">expandAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> FlatNode <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>treeControl<span class=\"token punctuation\">.</span>dataNodes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span><span class=\"token operator\">></span> n<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface TreeNode {\n  name: string;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: 'parent 1',\n    children: [\n      {\n        name: 'parent 1-0',\n        children: [{ name: 'leaf' }, { name: 'leaf' }]\n      },\n      {\n        name: 'parent 1-1',\n        children: [\n          { name: 'leaf' },\n          {\n            name: 'parent 1-1-0',\n            children: [{ name: 'leaf' }, { name: 'leaf' }]\n          },\n          { name: 'leaf' }\n        ]\n      }\n    ]\n  },\n  {\n    name: 'parent 2',\n    children: [{ name: 'leaf' }, { name: 'leaf' }]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-line',\n  template: `\n    Show Leaf Icon:\n    <nz-switch [(ngModel)]=\"showLeafIcon\"></nz-switch>\n\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodeIndentLine>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle *ngIf=\"showLeafIcon\">\n          <span nz-icon nzType=\"file\" nzTheme=\"outline\"></span>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodeIndentLine>\n        <nz-tree-node-toggle>\n          <span\n            nz-icon\n            [nzType]=\"treeControl.isExpanded(node) ? 'minus-square' : 'plus-square'\"\n            nzTheme=\"outline\"\n          ></span>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewLineComponent implements AfterViewInit {\n  private transformer = (node: TreeNode, level: number): FlatNode => ({\n    expandable: !!node.children && node.children.length > 0,\n    name: node.name,\n    level\n  });\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  showLeafIcon = false;\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n  }\n\n  hasChild = (_: number, node: FlatNode): boolean => node.expandable;\n\n  ngAfterViewInit(): void {\n    this.treeControl.expandAll();\n  }\n\n  getNode(name: string): FlatNode | null {\n    return this.treeControl.dataNodes.find(n => n.name === name) || null;\n  }\n}\n"}
