import{Cc as ie,Dc as oe,Rc as E,Sc as se,Yc as re,ad as ce,nd as ae,p as k,pb as g,pd as le,va as M}from"./chunk-KK7CC6GQ.js";import{Aa as j,Ac as Q,Bc as K,Cc as X,Ga as A,Hc as q,Ja as D,Jb as m,Jc as J,Ka as R,Kb as $,Na as d,Oa as p,Qa as T,Sc as F,Vb as W,Wb as y,Yb as C,aa as l,ab as P,f as V,ga as u,gc as B,hc as L,ia as G,ic as b,id as Y,jc as h,ka as I,kc as Z,md as a,na as r,oc as U,od as _,pd as ee,qd as ne,rc as H,rd as te,sb as v,tc as N,uc as f,vc as z,yb as c,za as S}from"./chunk-PXCXDVYP.js";var O=["*"],de=["inputElement"],pe=["nz-checkbox",""],me=(i,s)=>s.value;function Ce(i,s){if(i&1&&(b(0,"label",0),q(1),h()),i&2){let e=s.$implicit,t=N(2);y("nzValue",e.value)("nzName",t.nzName())("nzDisabled",e.disabled||t.finalDisabled()),v(),J(" ",e.label," ")}}function be(i,s){if(i&1&&B(0,Ce,2,4,"label",0,me),i&2){let e=N();L(e.normalizedOptions())}}var fe=(()=>{class i{nzOnChange=new D;checkboxList=[];addCheckbox(e){this.checkboxList.push(e)}removeCheckbox(e){this.checkboxList.splice(this.checkboxList.indexOf(e),1)}onChange(){let e=this.checkboxList.filter(t=>t.nzChecked).map(t=>t.nzValue);this.nzOnChange.emit(e)}static \u0275fac=function(t){return new(t||i)};static \u0275cmp=m({type:i,selectors:[["nz-checkbox-wrapper"]],hostAttrs:[1,"ant-checkbox-group"],outputs:{nzOnChange:"nzOnChange"},exportAs:["nzCheckboxWrapper"],ngContentSelectors:O,decls:1,vars:0,template:function(t,n){t&1&&(f(),z(0))},encapsulation:2,changeDetection:0})}return i})(),he=new I("NZ_CHECKBOX_GROUP"),ue=(()=>{class i{ngZone;elementRef;cdr;focusMonitor;directionality;dir="ltr";destroy$=new V;isNzDisableFirstChange=!0;onChange=()=>{};onTouched=()=>{};inputElement;nzCheckedChange=new D;nzValue=null;nzAutoFocus=!1;nzDisabled=!1;nzIndeterminate=!1;nzChecked=!1;nzId=null;nzName=null;innerCheckedChange(e){!this.nzDisabled&&!this.checkboxGroupComponent?.finalDisabled()&&(this.setValue(e),this.nzCheckboxWrapperComponent?.onChange(),this.checkboxGroupComponent?.onCheckedChange(this.nzValue,e))}writeValue(e){this.nzChecked=e,this.cdr.markForCheck()}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this.nzDisabled=this.isNzDisableFirstChange&&this.nzDisabled||e,this.isNzDisableFirstChange=!1,this.cdr.markForCheck()}focus(){this.focusMonitor.focusVia(this.inputElement,"keyboard")}blur(){this.inputElement.nativeElement.blur()}nzCheckboxWrapperComponent=r(fe,{optional:!0});checkboxGroupComponent=r(he,{optional:!0});nzFormStatusService=r(le,{optional:!0});constructor(e,t,n,o,w){this.ngZone=e,this.elementRef=t,this.cdr=n,this.focusMonitor=o,this.directionality=w,this.checkboxGroupComponent&&ne(()=>{let x=this.checkboxGroupComponent.value()||[];this.setValue(x.includes(this.nzValue)),this.cdr.markForCheck()})}ngOnInit(){this.focusMonitor.monitor(this.elementRef,!0).pipe(l(this.destroy$)).subscribe(e=>{e||Promise.resolve().then(()=>this.onTouched())}),this.nzCheckboxWrapperComponent?.addCheckbox(this),this.directionality.change.pipe(l(this.destroy$)).subscribe(e=>{this.dir=e,this.cdr.detectChanges()}),this.dir=this.directionality.value,M(this.elementRef.nativeElement,"click").pipe(l(this.destroy$)).subscribe(e=>{e.preventDefault(),this.focus(),!this.nzDisabled&&this.ngZone.run(()=>{this.innerCheckedChange(!this.nzChecked),this.cdr.markForCheck()})}),M(this.inputElement.nativeElement,"click").pipe(l(this.destroy$)).subscribe(e=>e.stopPropagation())}ngAfterViewInit(){this.nzAutoFocus&&this.focus()}ngOnDestroy(){this.focusMonitor.stopMonitoring(this.elementRef),this.nzCheckboxWrapperComponent?.removeCheckbox(this),this.destroy$.next(),this.destroy$.complete()}setValue(e){this.nzChecked=e,this.onChange(e),this.nzCheckedChange.emit(e)}static \u0275fac=function(t){return new(t||i)(c(R),c(p),c(Y),c(g),c(k))};static \u0275cmp=m({type:i,selectors:[["","nz-checkbox",""]],viewQuery:function(t,n){if(t&1&&Q(de,7),t&2){let o;K(o=X())&&(n.inputElement=o.first)}},hostAttrs:[1,"ant-checkbox-wrapper"],hostVars:10,hostBindings:function(t,n){t&2&&C("ant-checkbox-group-item",!!n.checkboxGroupComponent)("ant-checkbox-wrapper-in-form-item",!!n.nzFormStatusService)("ant-checkbox-wrapper-checked",n.nzChecked)("ant-checkbox-wrapper-disabled",n.nzDisabled||(n.checkboxGroupComponent==null?null:n.checkboxGroupComponent.finalDisabled()))("ant-checkbox-rtl",n.dir==="rtl")},inputs:{nzValue:"nzValue",nzAutoFocus:[2,"nzAutoFocus","nzAutoFocus",a],nzDisabled:[2,"nzDisabled","nzDisabled",a],nzIndeterminate:[2,"nzIndeterminate","nzIndeterminate",a],nzChecked:[2,"nzChecked","nzChecked",a],nzId:"nzId",nzName:"nzName"},outputs:{nzCheckedChange:"nzCheckedChange"},exportAs:["nzCheckbox"],features:[F([{provide:E,useExisting:u(()=>i),multi:!0}])],attrs:pe,ngContentSelectors:O,decls:6,vars:12,consts:[["inputElement",""],[1,"ant-checkbox"],["type","checkbox",1,"ant-checkbox-input",3,"ngModelChange","checked","ngModel","disabled"],[1,"ant-checkbox-inner"]],template:function(t,n){if(t&1){let o=U();f(),b(0,"span",1)(1,"input",2,0),H("ngModelChange",function(x){return S(o),j(n.innerCheckedChange(x))}),h(),Z(3,"span",3),h(),b(4,"span"),z(5),h()}if(t&2){let o;C("ant-checkbox-checked",n.nzChecked&&!n.nzIndeterminate)("ant-checkbox-disabled",n.nzDisabled||(n.checkboxGroupComponent==null?null:n.checkboxGroupComponent.finalDisabled()))("ant-checkbox-indeterminate",n.nzIndeterminate),v(),y("checked",n.nzChecked)("ngModel",n.nzChecked)("disabled",n.nzDisabled||((o=n.checkboxGroupComponent==null?null:n.checkboxGroupComponent.finalDisabled())!==null&&o!==void 0?o:!1)),W("autofocus",n.nzAutoFocus?"autofocus":null)("id",n.nzId)("name",n.nzName||(n.checkboxGroupComponent==null?null:n.checkboxGroupComponent.nzName()))}},dependencies:[ae,se,re,ce],encapsulation:2,changeDetection:0})}return i})(),ze=(()=>{class i{onChange=()=>{};onTouched=()=>{};isDisabledFirstChange=!0;directionality=r(k);nzName=d(null);nzDisabled=d(!1,{transform:a});nzOptions=d([]);value=T(null);finalDisabled=te(()=>this.nzDisabled());dir=oe(this.directionality.change,{initialValue:this.directionality.value});normalizedOptions=ee(()=>ke(this.nzOptions()));constructor(){let e=r(p),t=r(g),n=r(A);P(()=>{t.monitor(e,!0).pipe(ie(n)).subscribe(o=>{o||this.onTouched()}),n.onDestroy(()=>{t.stopMonitoring(e)})})}writeValue(e){_(()=>{this.value.set(e)})}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){_(()=>{this.finalDisabled.set(this.isDisabledFirstChange&&this.nzDisabled()||e)}),this.isDisabledFirstChange=!1}onCheckedChange(e,t){this.finalDisabled()||(this.value.update(n=>t?n?.concat(e)||[e]:n?.filter(o=>o!==e)||[]),this.onChange(this.value()))}static \u0275fac=function(t){return new(t||i)};static \u0275cmp=m({type:i,selectors:[["nz-checkbox-group"]],hostAttrs:[1,"ant-checkbox-group"],hostVars:2,hostBindings:function(t,n){t&2&&C("ant-checkbox-group-rtl",n.dir()==="rtl")},inputs:{nzName:[1,"nzName"],nzDisabled:[1,"nzDisabled"],nzOptions:[1,"nzOptions"]},exportAs:["nzCheckboxGroup"],features:[F([{provide:E,useExisting:u(()=>i),multi:!0},{provide:he,useExisting:u(()=>i)}])],ngContentSelectors:O,decls:2,vars:0,consts:[["nz-checkbox","",3,"nzValue","nzName","nzDisabled"]],template:function(t,n){t&1&&(f(),z(0,0,null,be,2,0))},dependencies:[ue],encapsulation:2,changeDetection:0})}return i})();function ke(i){return i.map(s=>typeof s=="string"||typeof s=="number"?{label:`${s}`,value:s}:s)}var Pe=(()=>{class i{static \u0275fac=function(t){return new(t||i)};static \u0275mod=$({type:i});static \u0275inj=G({imports:[ue,ze]})}return i})();export{fe as a,ue as b,ze as c,Pe as d};
