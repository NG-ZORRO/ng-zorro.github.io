{"version":3,"sources":["./publish/components/pipes/nz-aggregate.pipe.ts","./publish/components/pipes/nz-bytes.pipe.ts","./publish/components/pipes/nz-css-unit.pipe.ts","./publish/components/pipes/nz-ellipsis.pipe.ts","./publish/components/pipes/nz-safe-null.pipe.ts","./publish/components/pipes/nz-sanitizer.pipe.ts","./publish/components/pipes/nz-trim.pipe.ts","./publish/components/pipes/nz-pipes.module.ts","./publish/components/pipes/public-api.ts","./publish/components/pipes/ng-zorro-antd-pipes.ts"],"names":[],"mappings":"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","file":"cascader-index-module~image-index-module~modal-index-module~pipes-index-module~tabs-index-module~upl~e114efde.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { sum } from 'ng-zorro-antd/core/util';\n\nexport type AggregateMethod = 'sum' | 'max' | 'min' | 'avg';\n\n@Pipe({\n  name: 'nzAggregate'\n})\nexport class NzAggregatePipe implements PipeTransform {\n  transform(value: number[], method: AggregateMethod): undefined | number {\n    if (!Array.isArray(value)) {\n      return value;\n    }\n\n    if (value.length === 0) {\n      return undefined;\n    }\n\n    switch (method) {\n      case 'sum':\n        return sum(value);\n      case 'avg':\n        return sum(value) / value.length;\n      case 'max':\n        return Math.max(...value);\n      case 'min':\n        return Math.min(...value);\n      default:\n        throw Error(`Invalid Pipe Arguments: Aggregate pipe doesn't support this type`);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { isNumberFinite, toDecimal } from 'ng-zorro-antd/core/util';\n\nexport type ByteUnit = 'B' | 'kB' | 'KB' | 'MB' | 'GB' | 'TB';\n\n@Pipe({\n  name: 'nzBytes'\n})\nexport class NzBytesPipe implements PipeTransform {\n  static formats: { [key: string]: { max: number; prev?: ByteUnit } } = {\n    B: { max: 1024 },\n    kB: { max: Math.pow(1024, 2), prev: 'B' },\n    KB: { max: Math.pow(1024, 2), prev: 'B' },\n    MB: { max: Math.pow(1024, 3), prev: 'kB' },\n    GB: { max: Math.pow(1024, 4), prev: 'MB' },\n    TB: { max: Number.MAX_SAFE_INTEGER, prev: 'GB' }\n  };\n\n  transform(input: NzSafeAny, decimal: number = 0, from: ByteUnit = 'B', to?: ByteUnit): NzSafeAny {\n    if (!(isNumberFinite(input) && isNumberFinite(decimal) && decimal % 1 === 0 && decimal >= 0)) {\n      return input;\n    }\n\n    let bytes = input;\n    let unit = from;\n    while (unit !== 'B') {\n      bytes *= 1024;\n      unit = NzBytesPipe.formats[unit].prev!;\n    }\n\n    if (to) {\n      const format = NzBytesPipe.formats[to];\n\n      const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n\n      return NzBytesPipe.formatResult(result, to);\n    }\n\n    for (const key in NzBytesPipe.formats) {\n      if (NzBytesPipe.formats.hasOwnProperty(key)) {\n        const format = NzBytesPipe.formats[key];\n        if (bytes < format.max) {\n          const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n\n          return NzBytesPipe.formatResult(result, key);\n        }\n      }\n    }\n  }\n\n  static formatResult(result: number, unit: string): string {\n    return `${result} ${unit}`;\n  }\n\n  static calculateResult(format: { max: number; prev?: ByteUnit }, bytes: number): number {\n    const prev = format.prev ? NzBytesPipe.formats[format.prev] : undefined;\n    return prev ? bytes / prev.max : bytes;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nzToCssUnit'\n})\nexport class NzToCssUnitPipe implements PipeTransform {\n  transform(value: number | string, defaultUnit: string = 'px'): string {\n    const absoluteLengthUnit = ['cm', 'mm', 'Q', 'in', 'pc', 'pt', 'px'];\n    const relativeLengthUnit = ['em', 'ex', 'ch', 'rem', '1h', 'vw', 'vh', 'vmin', 'vmax'];\n    const percentagesUnit = ['%'];\n    const listOfUnit = [...absoluteLengthUnit, ...relativeLengthUnit, ...percentagesUnit];\n    let unit = 'px';\n    if (listOfUnit.some(u => u === defaultUnit)) {\n      unit = defaultUnit;\n    }\n    return typeof value === 'number' ? `${value}${unit}` : `${value}`;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Pipe({\n  name: 'nzEllipsis'\n})\nexport class NzEllipsisPipe implements PipeTransform {\n  transform(value: NzSafeAny, length?: number, suffix: string = ''): NzSafeAny {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    const len = typeof length === 'undefined' ? value.length : length;\n\n    if (value.length <= len) {\n      return value;\n    }\n\n    return value.substring(0, len) + suffix;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { isNil } from 'ng-zorro-antd/core/util';\n\n@Pipe({\n  name: 'nzSafeNull'\n})\nexport class NzSafeNullPipe implements PipeTransform {\n  transform<T>(value: T, replace: string = ''): T | string {\n    if (isNil(value)) {\n      return replace;\n    }\n    return value;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeStyle, SafeUrl } from '@angular/platform-browser';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\ntype DomSanitizerType = 'html' | 'style' | 'url' | 'resourceUrl';\n\n@Pipe({\n  name: 'nzSanitizer'\n})\nexport class NzSanitizerPipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  transform(value: NzSafeAny, type: 'html'): SafeHtml;\n  transform(value: NzSafeAny, type: 'style'): SafeStyle;\n  transform(value: NzSafeAny, type: 'url'): SafeUrl;\n  transform(value: NzSafeAny, type: 'resourceUrl'): SafeResourceUrl;\n  transform(value: NzSafeAny, type: DomSanitizerType = 'html'): SafeHtml | SafeStyle | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'url':\n        return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`Invalid safe type specified`);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nzTrim'\n})\nexport class NzTrimPipe implements PipeTransform {\n  // TODO(chensimeng) trimEnd, trimStart\n  transform(text: string): string {\n    return text.trim();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAggregatePipe } from './nz-aggregate.pipe';\nimport { NzBytesPipe } from './nz-bytes.pipe';\nimport { NzToCssUnitPipe } from './nz-css-unit.pipe';\nimport { NzEllipsisPipe } from './nz-ellipsis.pipe';\nimport { NzSafeNullPipe } from './nz-safe-null.pipe';\nimport { NzSanitizerPipe } from './nz-sanitizer.pipe';\nimport { NzTrimPipe } from './nz-trim.pipe';\n\nconst pipes = [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [pipes],\n  declarations: [pipes]\n})\nexport class NzPipesModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-pipes.module';\nexport * from './nz-css-unit.pipe';\nexport * from './nz-bytes.pipe';\nexport * from './nz-ellipsis.pipe';\nexport * from './nz-aggregate.pipe';\nexport * from './nz-safe-null.pipe';\nexport * from './nz-sanitizer.pipe';\nexport * from './nz-trim.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}