{"version":3,"sources":["./publish/components/form/form.directive.ts","./publish/components/form/form-item.component.ts","./publish/components/form/form-control.component.ts","./publish/components/form/form-label.component.ts","./publish/components/form/form-split.component.ts","./publish/components/form/form-text.component.ts","./publish/components/form/form.module.ts","./publish/components/form/public-api.ts","./publish/components/form/ng-zorro-antd-form.ts"],"names":[],"mappings":"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","file":"comment-index-module~drawer-index-module~form-index-module~input-index-module~mention-index-module~r~bc9fd475.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { Directive, ElementRef, Input, OnChanges, OnDestroy, Optional, Renderer2, SimpleChange, SimpleChanges } from '@angular/core';\nimport { ThemeType } from '@ant-design/icons-angular';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, InputObservable } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'form';\n\nexport type NzFormLayoutType = 'horizontal' | 'vertical' | 'inline';\n\nexport const DefaultTooltipIcon = {\n  type: 'question-circle',\n  theme: 'outline'\n} as const;\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`,\n    '[class.ant-form-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  @Input() nzLayout: NzFormLayoutType = 'horizontal';\n  @Input() @WithConfig() @InputBoolean() nzNoColon: boolean = false;\n  @Input() @WithConfig() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() @InputBoolean() nzDisableAutoTips = false;\n  @Input() @WithConfig() nzTooltipIcon: string | { type: string; theme: ThemeType } = DefaultTooltipIcon;\n\n  dir: Direction = 'ltr';\n  destroy$ = new Subject();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private directionality: Directionality\n  ) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.inputChanges$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | null;\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  status: NzFormControlStatusType = null;\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n} as const;\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div [ngClass]=\"['ant-form-item-explain', 'ant-form-item-explain-' + status]\" *ngIf=\"innerTip\">\n      <div @helpMotion>\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{ innerTip }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n})\nexport class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  static ngAcceptInputType_nzHasFeedback: BooleanInput;\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private destroyed$ = new Subject<void>();\n  private localeId!: string;\n  private autoErrorTip?: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  status: NzFormControlStatusType = null;\n  validateControl: AbstractControl | NgModel | null = null;\n  iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null = null;\n  innerTip: string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl?: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzWarningTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzErrorTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzValidatingTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() nzDisableAutoTips: boolean | 'default' = 'default';\n\n  @Input()\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = toBoolean(value);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(_ => {\n        if (!this.disableAutoTips) {\n          this.updateAutoErrorTip();\n        }\n        this.setStatus();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.innerTip = this.getInnerTip(this.status);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = null;\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n    }\n  }\n\n  private getInnerTip(status: NzFormControlStatusType): string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n      case 'validating':\n        return this.nzValidatingTip || null;\n      case 'success':\n        return this.nzSuccessTip || null;\n      case 'warning':\n        return this.nzWarningTip || null;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key]?.[this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzAutoTips.default?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips.default?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    @Optional() @Host() private nzFormItemComponent: NzFormItemComponent,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2,\n    i18n: NzI18nService,\n    @Optional() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective?.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default'))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl!;\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SkipSelf,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ThemeType } from '@ant-design/icons-angular';\nimport { BooleanInput, NzTSType } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DefaultTooltipIcon, NzFormDirective } from './form.directive';\n\nexport interface NzFormTooltipIcon {\n  type: NzTSType;\n  theme: ThemeType;\n}\n\nfunction toTooltipIcon(value: string | NzFormTooltipIcon): Required<NzFormTooltipIcon> {\n  const icon = typeof value === 'string' ? { type: value } : value;\n  return { ...DefaultTooltipIcon, ...icon };\n}\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      <span *ngIf=\"nzTooltipTitle\" class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n        <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n          <i nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></i>\n        </ng-container>\n      </span>\n    </label>\n  `\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n\n  @Input() nzFor?: string;\n  @Input() @InputBoolean() nzRequired = false;\n  @Input()\n  set nzNoColon(value: boolean) {\n    this.noColon = toBoolean(value);\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : this.nzFormDirective?.nzNoColon;\n  }\n\n  private noColon: boolean | 'default' = 'default';\n\n  @Input() nzTooltipTitle?: NzTSType;\n  @Input()\n  set nzTooltipIcon(value: string | NzFormTooltipIcon) {\n    this._tooltipIcon = toTooltipIcon(value);\n  }\n  // due to 'get' and 'set' accessor must have the same type, so it was renamed to `tooltipIcon`\n  get tooltipIcon(): NzFormTooltipIcon {\n    return this._tooltipIcon !== 'default' ? this._tooltipIcon : toTooltipIcon(this.nzFormDirective?.nzTooltipIcon || DefaultTooltipIcon);\n  }\n  private _tooltipIcon: NzFormTooltipIcon | 'default' = 'default';\n\n  private destroy$ = new Subject();\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    @Optional() @SkipSelf() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzTooltipIcon')\n        .pipe(\n          filter(() => this._tooltipIcon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormSplitComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormTextComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  declarations: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  imports: [BidiModule, CommonModule, NzGridModule, NzIconModule, NzToolTipModule, LayoutModule, PlatformModule, NzOutletModule]\n})\nexport class NzFormModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './form.module';\nexport * from './form.directive';\nexport * from './form-item.component';\nexport * from './form-label.component';\nexport * from './form-control.component';\nexport * from './form-text.component';\nexport * from './form-split.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}