{"version":3,"sources":["./publish/components/core/highlight/highlight.pipe.ts","./publish/components/core/highlight/highlight.module.ts","./publish/components/core/highlight/public-api.ts","./publish/components/core/highlight/ng-zorro-antd-core-highlight.ts","./publish/components/core/tree/nz-tree-base-node.ts","./publish/components/core/tree/nz-tree-base.definitions.ts","./publish/components/core/tree/nz-tree-base-util.ts","./publish/components/core/tree/nz-tree-base.service.ts","./publish/components/core/tree/nz-tree-service.resolver.ts","./publish/components/core/tree/nz-tree-base.ts","./publish/components/core/tree/public-api.ts","./publish/components/core/tree/ng-zorro-antd-core-tree.ts","./publish/components/tree/tree-drop-indicator.component.ts","./publish/components/tree/tree-indent.component.ts","./publish/components/tree/tree-node-checkbox.component.ts","./publish/components/tree/tree-node-switcher.component.ts","./publish/components/tree/tree-node-title.component.ts","./publish/components/tree/tree-node.component.ts","./publish/components/tree/tree.service.ts","./publish/components/tree/tree.component.ts","./publish/components/tree/tree.module.ts","./publish/components/tree/public-api.ts","./publish/components/tree/ng-zorro-antd-tree.ts"],"names":[],"mappings":"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","file":"empty-index-module~transfer-index-module~tree-index-module~tree-select-index-module.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\nfunction encodeEntities(value: string): string {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(SURROGATE_PAIR_REGEXP, (match: string) => {\n      const hi = match.charCodeAt(0);\n      const low = match.charCodeAt(1);\n      return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n    })\n    .replace(NON_ALPHANUMERIC_REGEXP, (match: string) => `&#${match.charCodeAt(0)};`)\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n\n@Pipe({\n  name: 'nzHighlight',\n  pure: true\n})\nexport class NzHighlightPipe implements PipeTransform {\n  private UNIQUE_WRAPPERS: [string, string] = ['##==-open_tag-==##', '##==-close_tag-==##'];\n\n  transform(value: string, highlightValue: string, flags?: string, klass?: string): string | null {\n    if (!highlightValue) {\n      return value;\n    }\n\n    // Escapes regex keyword to interpret these characters literally\n    const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n    const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n    return encodeEntities(wrapValue)\n      .replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>')\n      .replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightPipe } from './highlight.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzHighlightPipe],\n  declarations: [NzHighlightPipe]\n})\nexport class NzHighlightModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './highlight.pipe';\nexport * from './highlight.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNodeBaseComponent } from './nz-tree-base.definitions';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport type NzTreeNodeKey = string | number;\n\nexport interface FlattenNode {\n  parent: FlattenNode | null;\n  children: FlattenNode[];\n  pos: string;\n  data: NzTreeNode;\n  isStart: boolean[];\n  isEnd: boolean[];\n}\n\nexport interface NzTreeNodeOptions {\n  title: string;\n  key: string;\n  icon?: string;\n  isLeaf?: boolean;\n  checked?: boolean;\n  selected?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  disableCheckbox?: boolean;\n  expanded?: boolean;\n  children?: NzTreeNodeOptions[];\n\n  [key: string]: NzSafeAny;\n}\n\nexport class NzTreeNode {\n  private _title: string = '';\n  key!: string;\n  level: number = 0;\n  origin!: NzTreeNodeOptions;\n  // Parent Node\n  parentNode: NzTreeNode | null = null;\n  private _icon: string = '';\n  private _children: NzTreeNode[] = [];\n  private _isLeaf: boolean = false;\n  private _isChecked: boolean = false;\n  private _isSelectable: boolean = false;\n  private _isDisabled: boolean = false;\n  private _isDisableCheckbox: boolean = false;\n  private _isExpanded: boolean = false;\n  private _isHalfChecked: boolean = false;\n  private _isSelected: boolean = false;\n  private _isLoading: boolean = false;\n  canHide: boolean = false;\n  isMatched: boolean = false;\n\n  service: NzTreeBaseService | null = null;\n  component!: NzTreeNodeBaseComponent;\n\n  /** New added in Tree for easy data access */\n  isStart?: boolean[];\n  isEnd?: boolean[];\n\n  get treeService(): NzTreeBaseService | null {\n    return this.service || (this.parentNode && this.parentNode.treeService);\n  }\n\n  /**\n   * Init nzTreeNode\n   * @param option: user's input\n   * @param parent\n   * @param service: base nzTreeService\n   */\n  constructor(option: NzTreeNodeOptions | NzTreeNode, parent: NzTreeNode | null = null, service: NzTreeBaseService | null = null) {\n    if (option instanceof NzTreeNode) {\n      return option;\n    }\n    this.service = service || null;\n    this.origin = option;\n    this.key = option.key;\n    this.parentNode = parent;\n    this._title = option.title || '---';\n    this._icon = option.icon || '';\n    this._isLeaf = option.isLeaf || false;\n    this._children = [];\n    // option params\n    this._isChecked = option.checked || false;\n    this._isSelectable = option.disabled || option.selectable !== false;\n    this._isDisabled = option.disabled || false;\n    this._isDisableCheckbox = option.disableCheckbox || false;\n    this._isExpanded = option.isLeaf ? false : option.expanded || false;\n    this._isHalfChecked = false;\n    this._isSelected = (!option.disabled && option.selected) || false;\n    this._isLoading = false;\n    this.isMatched = false;\n\n    /**\n     * parent's checked status will affect children while initializing\n     */\n    if (parent) {\n      this.level = parent.level + 1;\n    } else {\n      this.level = 0;\n    }\n    if (typeof option.children !== 'undefined' && option.children !== null) {\n      option.children.forEach(nodeOptions => {\n        const s = this.treeService;\n        if (s && !s.isCheckStrictly && option.checked && !option.disabled && !nodeOptions.disabled && !nodeOptions.disableCheckbox) {\n          nodeOptions.checked = option.checked;\n        }\n        this._children.push(new NzTreeNode(nodeOptions, this));\n      });\n    }\n  }\n\n  /**\n   * auto generate\n   * get\n   * set\n   */\n  get title(): string {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value;\n    this.update();\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n    this.update();\n  }\n\n  get children(): NzTreeNode[] {\n    return this._children;\n  }\n\n  set children(value: NzTreeNode[]) {\n    this._children = value;\n    this.update();\n  }\n\n  get isLeaf(): boolean {\n    return this._isLeaf;\n  }\n\n  set isLeaf(value: boolean) {\n    this._isLeaf = value;\n    this.update();\n  }\n\n  get isChecked(): boolean {\n    return this._isChecked;\n  }\n\n  set isChecked(value: boolean) {\n    this._isChecked = value;\n    this.origin.checked = value;\n    this.afterValueChange('isChecked');\n  }\n\n  get isHalfChecked(): boolean {\n    return this._isHalfChecked;\n  }\n\n  set isHalfChecked(value: boolean) {\n    this._isHalfChecked = value;\n    this.afterValueChange('isHalfChecked');\n  }\n\n  get isSelectable(): boolean {\n    return this._isSelectable;\n  }\n\n  set isSelectable(value: boolean) {\n    this._isSelectable = value;\n    this.update();\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this.update();\n  }\n\n  get isDisableCheckbox(): boolean {\n    return this._isDisableCheckbox;\n  }\n\n  set isDisableCheckbox(value: boolean) {\n    this._isDisableCheckbox = value;\n    this.update();\n  }\n\n  get isExpanded(): boolean {\n    return this._isExpanded;\n  }\n\n  set isExpanded(value: boolean) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n    this.afterValueChange('reRender');\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  set isSelected(value: boolean) {\n    this._isSelected = value;\n    this.origin.selected = value;\n    this.afterValueChange('isSelected');\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n\n  set isLoading(value: boolean) {\n    this._isLoading = value;\n    this.update();\n  }\n\n  public setSyncChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.setChecked(checked, halfChecked);\n    if (this.treeService && !this.treeService.isCheckStrictly) {\n      this.treeService.conduct(this);\n    }\n  }\n\n  public setChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.origin.checked = checked;\n    this.isChecked = checked;\n    this.isHalfChecked = halfChecked;\n  }\n\n  public setExpanded(value: boolean): void {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n  }\n\n  public getParentNode(): NzTreeNode | null {\n    return this.parentNode;\n  }\n\n  public getChildren(): NzTreeNode[] {\n    return this.children;\n  }\n\n  /**\n   * Support appending child nodes by position. Leaf node cannot be appended.\n   */\n  public addChildren(children: NzSafeAny[], childPos: number = -1): void {\n    if (!this.isLeaf) {\n      children.forEach(node => {\n        const refreshLevel = (n: NzTreeNode) => {\n          n.getChildren().forEach(c => {\n            c.level = c.getParentNode()!.level + 1;\n            // flush origin\n            c.origin.level = c.level;\n            refreshLevel(c);\n          });\n        };\n        let child = node;\n        if (child instanceof NzTreeNode) {\n          child.parentNode = this;\n        } else {\n          child = new NzTreeNode(node, this);\n        }\n        child.level = this.level + 1;\n        child.origin.level = child.level;\n        refreshLevel(child);\n        try {\n          childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n          // flush origin\n        } catch (e) {}\n      });\n      this.origin.children = this.getChildren().map(v => v.origin);\n      // remove loading state\n      this.isLoading = false;\n    }\n    this.afterValueChange('addChildren');\n    this.afterValueChange('reRender');\n  }\n\n  public clearChildren(): void {\n    // refresh checked state\n    this.afterValueChange('clearChildren');\n    this.children = [];\n    this.origin.children = [];\n    this.afterValueChange('reRender');\n  }\n\n  public remove(): void {\n    const parentNode = this.getParentNode();\n    if (parentNode) {\n      parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n      parentNode.origin.children = parentNode.origin.children!.filter(v => v.key !== this.key);\n      this.afterValueChange('remove');\n      this.afterValueChange('reRender');\n    }\n  }\n\n  public afterValueChange(key: string): void {\n    if (this.treeService) {\n      switch (key) {\n        case 'isChecked':\n          this.treeService.setCheckedNodeList(this);\n          break;\n        case 'isHalfChecked':\n          this.treeService.setHalfCheckedNodeList(this);\n          break;\n        case 'isExpanded':\n          this.treeService.setExpandedNodeList(this);\n          break;\n        case 'isSelected':\n          this.treeService.setNodeActive(this);\n          break;\n        case 'clearChildren':\n          this.treeService.afterRemove(this.getChildren());\n          break;\n        case 'remove':\n          this.treeService.afterRemove([this]);\n          break;\n        case 'reRender':\n          this.treeService.flattenTreeData(\n            this.treeService.rootNodes,\n            this.treeService.getExpandedNodeList().map(v => v.key!)\n          );\n          break;\n      }\n    }\n    this.update();\n  }\n\n  public update(): void {\n    if (this.component) {\n      this.component.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzTreeNode } from './nz-tree-base-node';\n\nexport interface NzFormatEmitEvent {\n  eventName: string;\n  node?: NzTreeNode | null;\n  event?: MouseEvent | DragEvent | null;\n  dragNode?: NzTreeNode;\n  selectedKeys?: NzTreeNode[];\n  checkedKeys?: NzTreeNode[];\n  matchedKeys?: NzTreeNode[];\n  nodes?: NzTreeNode[];\n  keys?: string[];\n}\n\nexport interface NzFormatBeforeDropEvent {\n  dragNode: NzTreeNode;\n  node: NzTreeNode;\n  pos: number;\n}\n\nexport interface NzTreeNodeBaseComponent {\n  markForCheck(): void;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { FlattenNode, NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\n\nexport function isCheckDisabled(node: NzTreeNode): boolean {\n  const { isDisabled, isDisableCheckbox } = node;\n  return !!(isDisabled || isDisableCheckbox);\n}\n\nexport function isInArray(needle: NzSafeAny, haystack: NzSafeAny[]): boolean {\n  return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\n\nexport function getPosition(level: string | number, index: number): string {\n  return `${level}-${index}`;\n}\n\nexport function getKey(key: NzTreeNodeKey, pos: string): NzTreeNodeKey {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\n\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nexport function flattenTreeData(treeNodeList: NzTreeNode[] = [], expandedKeys: NzTreeNodeKey[] | true = []): FlattenNode[] {\n  const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  const flattenList: FlattenNode[] = [];\n\n  function dig(list: NzTreeNode[], parent: FlattenNode | null = null): FlattenNode[] {\n    return list.map((treeNode, index) => {\n      const pos: string = getPosition(parent ? parent.pos : '0', index);\n      const mergedKey = getKey(treeNode.key, pos);\n      treeNode.isStart = [...(parent ? parent.isStart : []), index === 0];\n      treeNode.isEnd = [...(parent ? parent.isEnd : []), index === list.length - 1];\n      // Add FlattenDataNode into list\n      // TODO: only need data here.\n      const flattenNode: FlattenNode = {\n        parent,\n        pos,\n        children: [],\n        data: treeNode,\n        isStart: [...(parent ? parent.isStart : []), index === 0],\n        isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n      };\n\n      flattenList.push(flattenNode);\n\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey) || treeNode.isExpanded) {\n        flattenNode.children = dig(treeNode.children || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n\n      return flattenNode;\n    });\n  }\n\n  dig(treeNodeList);\n  return flattenList;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\nimport { flattenTreeData, isCheckDisabled, isInArray } from './nz-tree-base-util';\nimport { NzFormatEmitEvent } from './nz-tree-base.definitions';\n\n@Injectable()\nexport class NzTreeBaseService {\n  DRAG_SIDE_RANGE = 0.25;\n  DRAG_MIN_GAP = 2;\n\n  isCheckStrictly: boolean = false;\n  isMultiple: boolean = false;\n  selectedNode!: NzTreeNode;\n  rootNodes: NzTreeNode[] = [];\n  flattenNodes$ = new BehaviorSubject<NzTreeNode[]>([]);\n  selectedNodeList: NzTreeNode[] = [];\n  expandedNodeList: NzTreeNode[] = [];\n  checkedNodeList: NzTreeNode[] = [];\n  halfCheckedNodeList: NzTreeNode[] = [];\n  matchedNodeList: NzTreeNode[] = [];\n\n  /**\n   * reset tree nodes will clear default node list\n   */\n  initTree(nzNodes: NzTreeNode[]): void {\n    this.rootNodes = nzNodes;\n    this.expandedNodeList = [];\n    this.selectedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.checkedNodeList = [];\n    this.matchedNodeList = [];\n  }\n\n  flattenTreeData(nzNodes: NzTreeNode[], expandedKeys: NzTreeNodeKey[] | true = []): void {\n    this.flattenNodes$.next(flattenTreeData(nzNodes, expandedKeys).map(item => item.data));\n  }\n\n  getSelectedNode(): NzTreeNode | null {\n    return this.selectedNode;\n  }\n\n  /**\n   * get some list\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('select');\n  }\n\n  /**\n   * return checked nodes\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('check');\n  }\n\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('halfCheck');\n  }\n\n  /**\n   * return expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('expand');\n  }\n\n  /**\n   * return search matched nodes\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('match');\n  }\n\n  isArrayOfNzTreeNode(value: NzSafeAny[]): boolean {\n    return value.every(item => item instanceof NzTreeNode);\n  }\n\n  /**\n   * set drag node\n   */\n  setSelectedNode(node: NzTreeNode): void {\n    this.selectedNode = node;\n  }\n\n  /**\n   * set node selected status\n   */\n  setNodeActive(node: NzTreeNode): void {\n    if (!this.isMultiple && node.isSelected) {\n      this.selectedNodeList.forEach(n => {\n        if (node.key !== n.key) {\n          // reset other nodes\n          n.isSelected = false;\n        }\n      });\n      // single mode: remove pre node\n      this.selectedNodeList = [];\n    }\n    this.setSelectedNodeList(node, this.isMultiple);\n  }\n\n  /**\n   * add or remove node to selectedNodeList\n   */\n  setSelectedNodeList(node: NzTreeNode, isMultiple: boolean = false): void {\n    const index = this.getIndexOfArray(this.selectedNodeList, node.key);\n    if (isMultiple) {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList.push(node);\n      }\n    } else {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList = [node];\n      }\n    }\n    if (!node.isSelected) {\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n    }\n  }\n\n  /**\n   * merge checked nodes\n   */\n  setHalfCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.halfCheckedNodeList, node.key);\n    if (node.isHalfChecked && index === -1) {\n      this.halfCheckedNodeList.push(node);\n    } else if (!node.isHalfChecked && index > -1) {\n      this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  setCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.checkedNodeList, node.key);\n    if (node.isChecked && index === -1) {\n      this.checkedNodeList.push(node);\n    } else if (!node.isChecked && index > -1) {\n      this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  /**\n   * conduct checked/selected/expanded keys\n   */\n  conductNodeState(type: string = 'check'): NzTreeNode[] {\n    let resultNodesList: NzTreeNode[] = [];\n    switch (type) {\n      case 'select':\n        resultNodesList = this.selectedNodeList;\n        break;\n      case 'expand':\n        resultNodesList = this.expandedNodeList;\n        break;\n      case 'match':\n        resultNodesList = this.matchedNodeList;\n        break;\n      case 'check':\n        resultNodesList = this.checkedNodeList;\n        const isIgnore = (node: NzTreeNode): boolean => {\n          const parentNode = node.getParentNode();\n          if (parentNode) {\n            if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n              return true;\n            } else {\n              return isIgnore(parentNode);\n            }\n          }\n          return false;\n        };\n        // merge checked\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n        }\n        break;\n      case 'halfCheck':\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.halfCheckedNodeList;\n        }\n        break;\n    }\n    return resultNodesList;\n  }\n\n  /**\n   * set expanded nodes\n   */\n  setExpandedNodeList(node: NzTreeNode): void {\n    if (node.isLeaf) {\n      return;\n    }\n    const index = this.getIndexOfArray(this.expandedNodeList, node.key);\n    if (node.isExpanded && index === -1) {\n      this.expandedNodeList.push(node);\n    } else if (!node.isExpanded && index > -1) {\n      this.expandedNodeList.splice(index, 1);\n    }\n  }\n\n  setMatchedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.matchedNodeList, node.key);\n    if (node.isMatched && index === -1) {\n      this.matchedNodeList.push(node);\n    } else if (!node.isMatched && index > -1) {\n      this.matchedNodeList.splice(index, 1);\n    }\n  }\n\n  /**\n   * check state\n   * @param isCheckStrictly\n   */\n  refreshCheckState(isCheckStrictly: boolean = false): void {\n    if (isCheckStrictly) {\n      return;\n    }\n    this.checkedNodeList.forEach(node => {\n      this.conduct(node, isCheckStrictly);\n    });\n  }\n\n  // reset other node checked state based current node\n  conduct(node: NzTreeNode, isCheckStrictly: boolean = false): void {\n    const isChecked = node.isChecked;\n    if (node && !isCheckStrictly) {\n      this.conductUp(node);\n      this.conductDown(node, isChecked);\n    }\n  }\n\n  /**\n   * 1、children half checked\n   * 2、children all checked, parent checked\n   * 3、no children checked\n   */\n  conductUp(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      if (!isCheckDisabled(parentNode)) {\n        if (parentNode.children.every(child => isCheckDisabled(child) || (!child.isHalfChecked && child.isChecked))) {\n          parentNode.isChecked = true;\n          parentNode.isHalfChecked = false;\n        } else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = true;\n        } else {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = false;\n        }\n      }\n      this.setCheckedNodeList(parentNode);\n      this.setHalfCheckedNodeList(parentNode);\n      this.conductUp(parentNode);\n    }\n  }\n\n  /**\n   * reset child check state\n   */\n  conductDown(node: NzTreeNode, value: boolean): void {\n    if (!isCheckDisabled(node)) {\n      node.isChecked = value;\n      node.isHalfChecked = false;\n      this.setCheckedNodeList(node);\n      this.setHalfCheckedNodeList(node);\n      node.children.forEach(n => {\n        this.conductDown(n, value);\n      });\n    }\n  }\n\n  /**\n   * flush after delete node\n   */\n  afterRemove(nodes: NzTreeNode[]): void {\n    // to reset selectedNodeList & expandedNodeList\n    const loopNode = (node: NzTreeNode) => {\n      // remove selected node\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n      // remove expanded node\n      this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n      // remove checked node\n      this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n      if (node.children) {\n        node.children.forEach(child => {\n          loopNode(child);\n        });\n      }\n    };\n    nodes.forEach(n => {\n      loopNode(n);\n    });\n    this.refreshCheckState(this.isCheckStrictly);\n  }\n\n  /**\n   * drag event\n   */\n  refreshDragNode(node: NzTreeNode): void {\n    if (node.children.length === 0) {\n      // until root\n      this.conductUp(node);\n    } else {\n      node.children.forEach(child => {\n        this.refreshDragNode(child);\n      });\n    }\n  }\n\n  // reset node level\n  resetNodeLevel(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    } else {\n      node.level = 0;\n    }\n    for (const child of node.children) {\n      this.resetNodeLevel(child);\n    }\n  }\n\n  calcDropPosition(event: DragEvent): number {\n    const { clientY } = event;\n    // to fix firefox undefined\n    const { top, bottom, height } = (event.target as Element).getBoundingClientRect();\n    const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n\n    if (clientY <= top + des) {\n      return -1;\n    } else if (clientY >= bottom - des) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  /**\n   * drop\n   * 0: inner -1: pre 1: next\n   */\n  dropAndApply(targetNode: NzTreeNode, dragPos: number = -1): void {\n    if (!targetNode || dragPos > 1) {\n      return;\n    }\n    const treeService = targetNode.treeService;\n    const targetParent = targetNode.getParentNode();\n    const isSelectedRootNode = this.selectedNode.getParentNode();\n    // remove the dragNode\n    if (isSelectedRootNode) {\n      isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n    } else {\n      this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n    }\n    switch (dragPos) {\n      case 0:\n        targetNode.addChildren([this.selectedNode]);\n        this.resetNodeLevel(targetNode);\n        break;\n      case -1:\n      case 1:\n        const tIndex = dragPos === 1 ? 1 : 0;\n        if (targetParent) {\n          targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n          const parentNode = this.selectedNode.getParentNode();\n          if (parentNode) {\n            this.resetNodeLevel(parentNode);\n          }\n        } else {\n          const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n          // Insert root node.\n          this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n          this.rootNodes[targetIndex].parentNode = null;\n          this.resetNodeLevel(this.rootNodes[targetIndex]);\n        }\n        break;\n    }\n    // flush all nodes\n    this.rootNodes.forEach(child => {\n      if (!child.treeService) {\n        child.service = treeService;\n      }\n      this.refreshDragNode(child);\n    });\n  }\n\n  /**\n   * emit Structure\n   * eventName\n   * node\n   * event: MouseEvent / DragEvent\n   * dragNode\n   */\n  formatEvent(eventName: string, node: NzTreeNode | null, event: MouseEvent | DragEvent | null): NzFormatEmitEvent {\n    const emitStructure: NzFormatEmitEvent = {\n      eventName: eventName,\n      node: node,\n      event: event\n    };\n    switch (eventName) {\n      case 'dragstart':\n      case 'dragenter':\n      case 'dragover':\n      case 'dragleave':\n      case 'drop':\n      case 'dragend':\n        Object.assign(emitStructure, { dragNode: this.getSelectedNode() });\n        break;\n      case 'click':\n      case 'dblclick':\n        Object.assign(emitStructure, { selectedKeys: this.selectedNodeList });\n        Object.assign(emitStructure, { nodes: this.selectedNodeList });\n        Object.assign(emitStructure, { keys: this.selectedNodeList.map(n => n.key) });\n        break;\n      case 'check':\n        const checkedNodeList = this.getCheckedNodeList();\n        Object.assign(emitStructure, { checkedKeys: checkedNodeList });\n        Object.assign(emitStructure, { nodes: checkedNodeList });\n        Object.assign(emitStructure, { keys: checkedNodeList.map(n => n.key) });\n        break;\n      case 'search':\n        Object.assign(emitStructure, { matchedKeys: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { nodes: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { keys: this.getMatchedNodeList().map(n => n.key) });\n        break;\n      case 'expand':\n        Object.assign(emitStructure, { nodes: this.expandedNodeList });\n        Object.assign(emitStructure, { keys: this.expandedNodeList.map(n => n.key) });\n        break;\n    }\n    return emitStructure;\n  }\n\n  /**\n   * New functions for flatten nodes\n   */\n\n  getIndexOfArray(list: NzTreeNode[], key: string): number {\n    return list.findIndex(v => v.key === key);\n  }\n\n  /**\n   * Render by nzCheckedKeys\n   * When keys equals null, just render with checkStrictly\n   * @param keys\n   * @param checkStrictly\n   */\n  conductCheck(keys: NzTreeNodeKey[] | null, checkStrictly: boolean): void {\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        if (keys === null) {\n          // render tree if no default checked keys found\n          node.isChecked = !!node.origin.checked;\n        } else {\n          if (isInArray(node.key, keys || [])) {\n            node.isChecked = true;\n            node.isHalfChecked = false;\n          } else {\n            node.isChecked = false;\n            node.isHalfChecked = false;\n          }\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n    this.refreshCheckState(checkStrictly);\n  }\n\n  conductExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    const expandedKeySet = new Set(keys === true ? [] : keys);\n    this.expandedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        node.setExpanded(keys === true || expandedKeySet.has(node.key) || node.isExpanded === true);\n        if (node.isExpanded) {\n          this.setExpandedNodeList(node);\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  conductSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.selectedNodeList.forEach(node => (node.isSelected = false));\n    this.selectedNodeList = [];\n    const calc = (nodes: NzTreeNode[]): boolean => {\n      return nodes.every(node => {\n        if (isInArray(node.key, keys)) {\n          node.isSelected = true;\n          this.setSelectedNodeList(node);\n          if (!isMulti) {\n            // if not support multi select\n            return false;\n          }\n        } else {\n          node.isSelected = false;\n        }\n        if (node.children.length > 0) {\n          // Recursion\n          return calc(node.children);\n        }\n        return true;\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  /**\n   * Expand parent nodes by child node\n   * @param node\n   */\n  expandNodeAllParentBySearch(node: NzTreeNode): void {\n    const calc = (n: NzTreeNode | null): void => {\n      if (n) {\n        n.canHide = false;\n        n.setExpanded(true);\n        this.setExpandedNodeList(n);\n        if (n.getParentNode()) {\n          return calc(n.getParentNode());\n        }\n      }\n    };\n    calc(node.getParentNode());\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport const NzTreeHigherOrderServiceToken = new InjectionToken<NzTreeBaseService>('NzTreeHigherOrder');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNode } from './nz-tree-base-node';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport class NzTreeBase {\n  constructor(public nzTreeService: NzTreeBaseService) {}\n\n  /**\n   * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n   */\n  coerceTreeNodes(value: NzSafeAny[]): NzTreeNode[] {\n    let nodes: NzTreeNode[] = [];\n    if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n      // has not been new NzTreeNode\n      nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n    } else {\n      nodes = value.map((item: NzTreeNode) => {\n        item.service = this.nzTreeService;\n        return item;\n      });\n    }\n    return nodes;\n  }\n\n  /**\n   * Get all nodes({@link NzTreeNode})\n   */\n  getTreeNodes(): NzTreeNode[] {\n    return this.nzTreeService.rootNodes;\n  }\n\n  /**\n   * Get {@link NzTreeNode} with key\n   */\n  getTreeNodeByKey(key: string): NzTreeNode | null {\n    // flat tree nodes\n    const nodes: NzTreeNode[] = [];\n    const getNode = (node: NzTreeNode): void => {\n      nodes.push(node);\n      node.getChildren().forEach(n => {\n        getNode(n);\n      });\n    };\n    this.getTreeNodes().forEach(n => {\n      getNode(n);\n    });\n    return nodes.find(n => n.key === key) || null;\n  }\n\n  /**\n   * Get checked nodes(merged)\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getCheckedNodeList();\n  }\n\n  /**\n   * Get selected nodes\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getSelectedNodeList();\n  }\n\n  /**\n   * Get half checked nodes\n   */\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getHalfCheckedNodeList();\n  }\n\n  /**\n   * Get expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getExpandedNodeList();\n  }\n\n  /**\n   * Get matched nodes(if nzSearchValue is not null)\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getMatchedNodeList();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-tree-base-node';\nexport * from './nz-tree-base.definitions';\nexport * from './nz-tree-base.service';\nexport * from './nz-tree-service.resolver';\nexport * from './nz-tree-base';\nexport * from './nz-tree-base-util';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-tree-drop-indicator',\n  exportAs: 'NzTreeDropIndicator',\n  template: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-tree-drop-indicator]': 'true',\n    '[style]': 'style'\n  }\n})\nexport class NzTreeDropIndicatorComponent implements OnChanges {\n  @Input() dropPosition?: number;\n  @Input() level: number = 1;\n  @Input() direction: string = 'ltr';\n  style: NgStyleInterface = {};\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.renderIndicator(this.dropPosition!, this.direction);\n  }\n\n  renderIndicator(dropPosition: number, direction: string = 'ltr'): void {\n    const offset = 4;\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\n    const style: NgStyleInterface = {\n      [startPosition]: `${offset}px`,\n      [endPosition]: '0px'\n    };\n    switch (dropPosition) {\n      case -1:\n        style.top = `${-3}px`;\n        break;\n      case 1:\n        style.bottom = `${-3}px`;\n        break;\n      case 0:\n        // dropPosition === 0\n        style.bottom = `${-3}px`;\n        style[startPosition] = `${offset + 24}px`;\n        break;\n      default:\n        style.display = 'none';\n        break;\n    }\n    this.style = style;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-indent',\n  exportAs: 'nzTreeIndent',\n  template: `\n    <span\n      [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n      [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n      [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n      [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n      [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n      [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      *ngFor=\"let _ of listOfUnit; let i = index\"\n    ></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.aria-hidden]': 'true',\n    '[class.ant-tree-indent]': '!nzSelectMode',\n    '[class.ant-select-tree-indent]': 'nzSelectMode'\n  }\n})\nexport class NzTreeIndentComponent implements OnInit, OnChanges {\n  @Input() nzTreeLevel = 0;\n  @Input() nzIsStart: boolean[] = [];\n  @Input() nzIsEnd: boolean[] = [];\n  @Input() nzSelectMode = false;\n\n  listOfUnit: number[] = [];\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTreeLevel } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-node-checkbox[builtin]',\n  template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n  }\n})\nexport class NzTreeNodeBuiltinCheckboxComponent {\n  @Input() nzSelectMode = false;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisabled?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-switcher',\n  template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n    '[class.ant-tree-switcher]': '!nzSelectMode',\n    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n  }\n})\nexport class NzTreeNodeSwitcherComponent {\n  @Input() nzShowExpand?: boolean;\n  @Input() nzShowLine?: boolean;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzSelectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() isLeaf?: boolean;\n  @Input() isLoading?: boolean;\n  @Input() isExpanded?: boolean;\n\n  get isShowLineIcon(): boolean {\n    return !this.isLeaf && !!this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return !!this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-title',\n  template: `\n    <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"></ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"></span>\n      <nz-tree-drop-indicator *ngIf=\"showIndicator\" [dropPosition]=\"dragPosition\" [level]=\"context.level\"></nz-tree-drop-indicator>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.title]': 'title',\n    '[attr.draggable]': 'canDraggable',\n    '[attr.aria-grabbed]': 'canDraggable',\n    '[class.draggable]': 'canDraggable',\n    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n  }\n})\nexport class NzTreeNodeTitleComponent implements OnChanges {\n  @Input() searchValue!: string;\n  @Input() treeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() draggable!: boolean;\n  @Input() showIcon!: boolean;\n  @Input() selectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() icon!: string;\n  @Input() title!: string;\n  @Input() isLoading!: boolean;\n  @Input() isSelected!: boolean;\n  @Input() isDisabled!: boolean;\n  @Input() isMatched!: boolean;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  // Drag indicator\n  @Input() showIndicator = true;\n  @Input() dragPosition?: number;\n\n  get canDraggable(): boolean | null {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n\n  get matchedValue(): string {\n    return this.isMatched ? this.searchValue : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { showIndicator, dragPosition } = changes;\n    if (showIndicator || dragPosition) {\n      this.cdr.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  TemplateRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-tree-node[builtin]',\n  exportAs: 'nzTreeBuiltinNode',\n  template: `\n    <nz-tree-indent [nzTreeLevel]=\"nzTreeNode.level\" [nzSelectMode]=\"nzSelectMode\" [nzIsStart]=\"isStart\" [nzIsEnd]=\"isEnd\"></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      builtin\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n    '[class.ant-tree-treenode]': `!nzSelectMode`,\n    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n    '[style.display]': 'displayStyle',\n    '(mousedown)': 'onMousedown($event)'\n  }\n})\nexport class NzTreeNodeBuiltinComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n\n  /**\n   * for global property\n   */\n  @Input() icon: string = '';\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Input() isDisabled: boolean = false;\n  @Input() isMatched: boolean = false;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n  @Input() isSelectable?: boolean;\n  @Input() canHide?: boolean;\n  @Input() isStart: boolean[] = [];\n  @Input() isEnd: boolean[] = [];\n  @Input() nzTreeNode!: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine?: boolean;\n  @Input() @InputBoolean() nzShowExpand?: boolean;\n  @Input() @InputBoolean() nzCheckable?: boolean;\n  @Input() @InputBoolean() nzAsyncData?: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzSearchValue = '';\n  @Input() nzDraggable: boolean = false;\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    '0': 'drag-over',\n    '1': 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n  showIndicator = false;\n  /**\n   * default set\n   */\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * collapse node\n   * @param event\n   */\n  clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n\n  clickSelect(event: MouseEvent): void {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n\n  dblClick(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n\n  contextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n\n  /**\n   * check node\n   * @param event\n   */\n  clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n\n  /**\n   * drag event\n   * @param e\n   */\n  handleDragStart(e: DragEvent): void {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    // reset position\n    this.showIndicator = this.nzTreeNode.key !== this.nzTreeService.getSelectedNode()?.key;\n    this.renderIndicator(2);\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.renderIndicator(dropPosition);\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n        this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.preventDefault();\n    this.renderIndicator(2);\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    this.ngZone.run(() => {\n      this.showIndicator = false;\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      }\n    });\n  }\n\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzTreeNode.component = this;\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    const { nzDraggable } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private renderIndicator(dropPosition: number): void {\n    this.ngZone.run(() => {\n      this.showIndicator = dropPosition !== 2;\n      if (this.nzTreeNode.key === this.nzTreeService.getSelectedNode()?.key || (dropPosition === 0 && this.isLeaf)) {\n        return;\n      }\n      this.dragPos = dropPosition;\n      this.cdr.markForCheck();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  flattenTreeData,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeKey,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTreeService } from './tree.service';\n\nexport function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'tree';\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  animations: [treeCollapseMotion],\n  template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-tree]': `nzSelectMode`,\n    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n    '[class.ant-tree]': `!nzSelectMode`,\n    '[class.ant-tree-rtl]': `dir === 'rtl'`,\n    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n    '[class.draggable-tree]': `nzDraggable`\n  }\n})\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n  static ngAcceptInputType_nzExpandAll: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzDraggable: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n\n  @Input() @InputBoolean() @WithConfig() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzHideUnMatched: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzBlockNode: boolean = false;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable: boolean = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: string | null = null;\n  @Input() nzTreeTemplate?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzData: NzTreeNodeOptions[] | NzTreeNode[] = [];\n  @Input() nzExpandedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSelectedKeys: NzTreeNodeKey[] = [];\n  @Input() nzCheckedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSearchValue: string = '';\n  @Input() nzSearchFunc?: (node: NzTreeNodeOptions) => boolean;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild!: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }) cdkVirtualScrollViewport!: CdkVirtualScrollViewport;\n  nzFlattenNodes: NzTreeNode[] = [];\n  beforeInit = true;\n  dir: Direction = 'ltr';\n\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  HIDDEN_STYLE = {\n    width: 0,\n    height: 0,\n    display: 'flex',\n    overflow: 'hidden',\n    opacity: 0,\n    border: 0,\n    padding: 0,\n    margin: 0\n  };\n\n  destroy$ = new Subject();\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  writeValue(value: NzTreeNode[]): void {\n    this.handleNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Render all properties of nzTree\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const { nzData, nzExpandedKeys, nzSelectedKeys, nzCheckedKeys, nzCheckStrictly, nzExpandAll, nzMultiple, nzSearchValue } = changes;\n\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n\n    if (nzCheckedKeys) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n\n    if (nzCheckStrictly) {\n      this.handleCheckedKeys(null);\n    }\n\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n\n  trackByFlattenNode(_: number, node: NzTreeNode): string {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   * @param value\n   */\n  handleNzData(value: NzSafeAny[]): void {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n\n  handleFlattenNodes(data: NzTreeNode[], expandKeys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n\n  handleCheckedKeys(keys: NzTreeNodeKey[] | null): void {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n\n  handleExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n\n  handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n\n  handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = (node: NzTreeNode): boolean => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n\n  /**\n   * Handle emit event\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event: NzFormatEmitEvent): void {\n    const node = event.node!;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event!);\n        this.nzCheckBoxChange.emit(eventNext);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n\n  /**\n   * Click expand icon\n   */\n  renderTree(): void {\n    this.handleFlattenNodes(\n      this.nzTreeService.rootNodes,\n      this.getExpandedNodeList().map(v => v.key)\n    );\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = data;\n      this.cdr.markForCheck();\n    });\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    this.renderTreeProperties(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.beforeInit = false;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTreeDropIndicatorComponent } from './tree-drop-indicator.component';\nimport { NzTreeIndentComponent } from './tree-indent.component';\nimport { NzTreeNodeBuiltinCheckboxComponent } from './tree-node-checkbox.component';\nimport { NzTreeNodeSwitcherComponent } from './tree-node-switcher.component';\nimport { NzTreeNodeTitleComponent } from './tree-node-title.component';\nimport { NzTreeNodeBuiltinComponent } from './tree-node.component';\nimport { NzTreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule],\n  declarations: [\n    NzTreeComponent,\n    NzTreeNodeBuiltinComponent,\n    NzTreeIndentComponent,\n    NzTreeNodeSwitcherComponent,\n    NzTreeNodeBuiltinCheckboxComponent,\n    NzTreeNodeTitleComponent,\n    NzTreeDropIndicatorComponent\n  ],\n  exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n})\nexport class NzTreeModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tree.module';\nexport * from './tree.component';\nexport * from './tree-node.component';\nexport * from './tree-indent.component';\nexport * from './tree.service';\nexport * from './tree-node-switcher.component';\nexport * from './tree-node-checkbox.component';\nexport * from './tree-node-title.component';\nexport { NzTreeNodeOptions, NzFormatEmitEvent, NzFormatBeforeDropEvent, NzTreeNode } from 'ng-zorro-antd/core/tree';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzTreeDropIndicatorComponent as ɵa} from './tree-drop-indicator.component';"],"sourceRoot":"webpack:///"}