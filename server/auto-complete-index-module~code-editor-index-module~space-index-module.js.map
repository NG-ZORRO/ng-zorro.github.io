{"version":3,"sources":["./publish/__ivy_ngcc__/fesm2015/ng-zorro-antd-auto-complete.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqG;AAC5C;AACmO;AAC5N;AAC8B;AACnC;AACZ;AACwB;AACU;AAC5B;AACQ;AACuB;AACzB;;AAE3D;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACY;AACM;AAChB;AACK;;AAE/C,2EAA2E;AAC3E,IAAI,qEAA8B;AAClC,IAAI,oDAAa;AACjB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF,oEAAoE;AACpE,IAAI,wDAAiB;AACrB,CAAC;AACD,gFAAgF;AAChF,IAAI,0DAAmB;AACvB,CAAC;AACD,iGAAiG;AACjG,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,gFAAgF;AAChF,IAAI,wDAAiB;AACrB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD,kEAAkE;AAClE,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB,gGAAgG,oEAA6B;AAClJ,IAAI,wDAAiB,gGAAgG,oEAA6B;AAClJ,CAAC;AACD,gBAAgB,yDAAkB;AAClC,gBAAgB,yDAAkB;AAClC,mBAAmB,2DAAoB;AACvC,IAAI,yDAAkB;AACtB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA,mBAAmB;AACnB;AACA,4FAA4F,qDAAqD;AACjJ,uCAAuC,+DAAwB,EAAE,oFAAoF,qBAAqB,4OAA4O;AACtZ,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,yFAAsC,yCAAyC;AACrG;AACA;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,8EAAc;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wFAAwF,iDAAiD,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,sCAAsC;AACxS,qCAAqC,+DAAwB,EAAE,kPAAkP;AACjT,QAAQ,wDAAiB,6EAA6E,mCAAmC,EAAE,wFAAwF,2BAA2B,EAAE,4FAA4F,gCAAgC,EAAE;AAC9X,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,mEAAmE,YAAY,mEAAmE,+LAA+L;AACnW,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,wCAAwC;AAC/C;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,sDAAsD,OAAO,sDAAQ,EAAE;AAC5E;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,wDAAU;AACV,IAAI,4EAAY;AAChB,IAAI,wDAAU;AACd;AACA,WAAW,EA6BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uCAAuC;AACvC,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA,2CAA2C,kDAAY;AACvD,4CAA4C,kDAAY;AACxD,4CAA4C,kDAAY;AACxD;AACA;AACA;AACA,sCAAsC,mDAAK;AAC3C,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,4DAA4D,4DAAI,KAAK,iEAAS;AAC9E,wBAAwB;AACxB;AACA;AACA,SAAS;AACT,gCAAgC,mDAAK;AACrC,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,4DAA4D,4DAAI,KAAK,iEAAS;AAC9E,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,8DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB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gB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,8DAAQ,gBAAgB,gEAAU;AACzE,wBAAwB,4DAAM;AAC9B;AACA;AACA,2CAA2C,4DAAM,gBAAgB,yDAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2DAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8DAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qEAAqE,4DAAI;AACzE,mBAAmB,EAAE;AACrB,uEAAuE,2DAAG;AAC1E,oBAAoB;AACpB;AACA,6DAA6D,6DAAK;AAClE,eAAe,mDAAK;AACpB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,mDAAK,CAAC,uDAAS,0BAA0B,uDAAS;AACjE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C;AACA,8EAA8E,EAAE;AAChF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yDAAyD,gEAAQ,IAAI,6DAAK;AAC1E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,4DAA4D;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gBAAgB,2EAAsB,EAAE,sCAAsC,GAAG,qCAAqC;AACtH,gBAAgB,2EAAsB,EAAE,mCAAmC,GAAG,wCAAwC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4DAAc,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAQ,MAAM;AACtW,sCAAsC,+DAAwB,EAAE,uQAAuQ;AACvU,QAAQ,wDAAiB,kFAAkF,0BAA0B,EAAE,6EAA6E,yBAAyB,EAAE,qFAAqF,gCAAgC,EAAE,yFAAyF,kCAAkC,EAAE;AACne,KAAK,EAAE,WAAW,mCAAmC,kDAAkD,gEAAyB,qCAAqC;AACrK;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4DAAc,EAAE,GAAG,OAAO,8DAAuB,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AAClJ,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA6EV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,4BAA4B,8DAAuB,EAAE,6BAA6B;AAClF,4BAA4B,8DAAuB,EAAE,oDAAoD,0CAA0C,EAAE,aAAa,4DAAY,EAAE,kEAAa,EAAE,0DAAW,EAAE,wEAAc,EAAE,mFAAmB,IAAI;AACnP,cAAc,oDAAoD,gEAAyB,wBAAwB,4BAA4B;AAC/I;AACA;AACA,yCAAyC,EAAE,wBAAwB,SAAS,4DAAY,EAAE,kEAAa,EAAE,0DAAW,EAAE,wEAAc,EAAE,mFAAmB,EAAE,EAAE,wBAAwB;AACrL;AACA;AACA,yCAAyC,EAAE,EAAE,EAAE,EAAE;AACjD,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,0BAA0B,4DAAY,EAAE,kEAAa,EAAE,0DAAW,EAAE,wEAAc,EAAE,mFAAmB;AACvG,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEsP;;AAEtP,uD","file":"auto-complete-index-module~code-editor-index-module~space-index-module.js","sourcesContent":["import { OverlayConfig, ConnectionPositionPair, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, ChangeDetectorRef, ElementRef, Optional, Output, NgZone, Host, ContentChildren, ViewChildren, ViewChild, TemplateRef, forwardRef, Directive, ViewContainerRef, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate, __metadata } from 'tslib';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subscription, defer, merge, fromEvent } from 'rxjs';\nimport { take, switchMap, filter, tap, delay, map, distinct } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: autocomplete-optgroup.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\n\nfunction NzAutocompleteOptgroupComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzLabel);\n} }\nconst _c0 = [[[\"nz-auto-option\"]]];\nconst _c1 = [\"nz-auto-option\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"panel\"];\nconst _c4 = [\"content\"];\nfunction NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template(rf, ctx) { }\nfunction NzAutocompleteComponent_ng_template_0_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template, 0, 0, \"ng-template\");\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nz-auto-option\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r12 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"nzValue\", option_r12);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(option_r12);\n} }\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template, 2, 2, \"nz-auto-option\", 7);\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r9.nzDataSource);\n} }\nfunction NzAutocompleteComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(4, NzAutocompleteComponent_ng_template_0_4_Template, 1, 0, undefined, 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzAutocompleteComponent_ng_template_0_ng_template_5_Template, 1, 0, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(7, NzAutocompleteComponent_ng_template_0_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n} if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(6);\n    const _r8 = ɵngcc0.ɵɵreference(8);\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-select-dropdown-hidden\", !ctx_r3.showPanel);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.nzOverlayClassName)(\"ngStyle\", ctx_r3.nzOverlayStyle)(\"nzNoAnimation\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"@slideMotion\", ctx_r3.dropDownPosition)(\"@.disabled\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.nzDataSource ? _r8 : _r6);\n} }\nclass NzAutocompleteOptgroupComponent {\n    constructor() { }\n}\nNzAutocompleteOptgroupComponent.ɵfac = function NzAutocompleteOptgroupComponent_Factory(t) { return new (t || NzAutocompleteOptgroupComponent)(); };\nNzAutocompleteOptgroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteOptgroupComponent, selectors: [[\"nz-auto-optgroup\"]], inputs: { nzLabel: \"nzLabel\" }, exportAs: [\"nzAutoOptgroup\"], ngContentSelectors: _c1, decls: 3, vars: 1, consts: [[1, \"ant-select-item\", \"ant-select-item-group\"], [4, \"nzStringTemplateOutlet\"]], template: function NzAutocompleteOptgroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzAutocompleteOptgroupComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n    } }, directives: [ɵngcc1.NzStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNzAutocompleteOptgroupComponent.ctorParameters = () => [];\nNzAutocompleteOptgroupComponent.propDecorators = {\n    nzLabel: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NzAutocompleteOptgroupComponent.prototype.nzLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: autocomplete-option.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NzOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /** @type {?} */\n    NzOptionSelectionChange.prototype.source;\n    /** @type {?} */\n    NzOptionSelectionChange.prototype.isUserInput;\n}\nclass NzAutocompleteOptionComponent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} element\n     * @param {?} nzAutocompleteOptgroupComponent\n     */\n    constructor(changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.element = element;\n        this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n        this.nzDisabled = false;\n        this.selectionChange = new EventEmitter();\n        this.mouseEntered = new EventEmitter();\n        this.active = false;\n        this.selected = false;\n    }\n    /**\n     * @param {?=} emit\n     * @return {?}\n     */\n    select(emit = true) {\n        this.selected = true;\n        this.changeDetectorRef.markForCheck();\n        if (emit) {\n            this.emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onMouseEnter() {\n        this.mouseEntered.emit(this);\n    }\n    /**\n     * @return {?}\n     */\n    deselect() {\n        this.selected = false;\n        this.changeDetectorRef.markForCheck();\n        this.emitSelectionChangeEvent();\n    }\n    /**\n     * Git display label\n     * @return {?}\n     */\n    getLabel() {\n        return this.nzLabel || this.nzValue.toString();\n    }\n    /**\n     * Set active (only styles)\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this.active) {\n            this.active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Unset active (only styles)\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this.active) {\n            this.active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    scrollIntoViewIfNeeded() {\n        scrollIntoView(this.element.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this.nzDisabled) {\n            this.selected = !this.selected;\n            if (this.selected) {\n                this.setActiveStyles();\n            }\n            else {\n                this.setInactiveStyles();\n            }\n            this.emitSelectionChangeEvent(true);\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    emitSelectionChangeEvent(isUserInput = false) {\n        this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n    }\n}\nNzAutocompleteOptionComponent.ɵfac = function NzAutocompleteOptionComponent_Factory(t) { return new (t || NzAutocompleteOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzAutocompleteOptgroupComponent, 8)); };\nNzAutocompleteOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteOptionComponent, selectors: [[\"nz-auto-option\"]], hostAttrs: [\"role\", \"menuitem\", 1, \"ant-select-item\", \"ant-select-item-option\"], hostVars: 10, hostBindings: function NzAutocompleteOptionComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzAutocompleteOptionComponent_click_HostBindingHandler() { return ctx.selectViaInteraction(); })(\"mouseenter\", function NzAutocompleteOptionComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mousedown\", function NzAutocompleteOptionComponent_mousedown_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.nzDisabled.toString());\n        ɵngcc0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.nzAutocompleteOptgroupComponent)(\"ant-select-item-option-selected\", ctx.selected)(\"ant-select-item-option-active\", ctx.active)(\"ant-select-item-option-disabled\", ctx.nzDisabled);\n    } }, inputs: { nzDisabled: \"nzDisabled\", nzValue: \"nzValue\", nzLabel: \"nzLabel\" }, outputs: { selectionChange: \"selectionChange\", mouseEntered: \"mouseEntered\" }, exportAs: [\"nzAutoOption\"], ngContentSelectors: _c2, decls: 2, vars: 0, consts: [[1, \"ant-select-item-option-content\"]], template: function NzAutocompleteOptionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNzAutocompleteOptionComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NzAutocompleteOptgroupComponent, decorators: [{ type: Optional }] }\n];\nNzAutocompleteOptionComponent.propDecorators = {\n    nzValue: [{ type: Input }],\n    nzLabel: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    mouseEntered: [{ type: Output }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\nif (false) {\n    /** @type {?} */\n    NzAutocompleteOptionComponent.ngAcceptInputType_nzDisabled;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.nzValue;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.nzLabel;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.nzDisabled;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.selectionChange;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.mouseEntered;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.active;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteOptionComponent.prototype.changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteOptionComponent.prototype.element;\n    /** @type {?} */\n    NzAutocompleteOptionComponent.prototype.nzAutocompleteOptgroupComponent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: autocomplete.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction AutocompleteDataSourceItem() { }\nif (false) {\n    /** @type {?} */\n    AutocompleteDataSourceItem.prototype.value;\n    /** @type {?} */\n    AutocompleteDataSourceItem.prototype.label;\n}\nclass NzAutocompleteComponent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} ngZone\n     * @param {?=} noAnimation\n     */\n    constructor(changeDetectorRef, ngZone, noAnimation) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.ngZone = ngZone;\n        this.noAnimation = noAnimation;\n        this.nzOverlayClassName = '';\n        this.nzOverlayStyle = {};\n        this.nzDefaultActiveFirstOption = true;\n        this.nzBackfill = false;\n        this.compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this.selectionChange = new EventEmitter();\n        this.showPanel = true;\n        this.isOpen = false;\n        this.dropDownPosition = 'bottom';\n        this.activeItemIndex = -1;\n        this.selectionChangeSubscription = Subscription.EMPTY;\n        this.optionMouseEnterSubscription = Subscription.EMPTY;\n        this.dataSourceChangeSubscription = Subscription.EMPTY;\n        /**\n         * Options changes listener\n         */\n        this.optionSelectionChanges = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.options) {\n                return merge(...this.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.selectionChange)));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }));\n        this.optionMouseEnter = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.options) {\n                return merge(...this.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.mouseEntered)));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionMouseEnter)));\n        }));\n    }\n    /**\n     * Options accessor, its source may be content or dataSource\n     * @return {?}\n     */\n    get options() {\n        // first dataSource\n        if (this.nzDataSource) {\n            return this.fromDataSourceOptions;\n        }\n        else {\n            return this.fromContentOptions;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.dataSourceChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription.unsubscribe();\n        this.optionMouseEnterSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    setVisibility() {\n        this.showPanel = !!this.options.length;\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        /** @type {?} */\n        const activeItem = this.options.toArray()[index];\n        if (activeItem && !activeItem.active) {\n            this.activeItem = activeItem;\n            this.activeItemIndex = index;\n            this.clearSelectedOptions(this.activeItem);\n            this.activeItem.setActiveStyles();\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setNextItemActive() {\n        /** @type {?} */\n        const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n        this.setActiveItem(nextIndex);\n    }\n    /**\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        /** @type {?} */\n        const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n        this.setActiveItem(previousIndex);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getOptionIndex(value) {\n        return (/** @type {?} */ (this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            return result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result;\n        }), -1)));\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updatePosition(position) {\n        this.dropDownPosition = position;\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    optionsInit() {\n        this.setVisibility();\n        this.subscribeOptionChanges();\n        /** @type {?} */\n        const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n        // async\n        this.dataSourceChangeSubscription = changes.subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            if (!e.dirty && this.isOpen) {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.setVisibility()));\n            }\n            this.subscribeOptionChanges();\n        }));\n    }\n    /**\n     * Clear the status of options\n     * @param {?=} skip\n     * @param {?=} deselect\n     * @return {?}\n     */\n    clearSelectedOptions(skip, deselect = false) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option !== skip) {\n                if (deselect) {\n                    option.deselect();\n                }\n                option.setInactiveStyles();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    subscribeOptionChanges() {\n        this.selectionChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription = this.optionSelectionChanges\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.isUserInput)))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            event.source.select();\n            event.source.setActiveStyles();\n            this.activeItem = event.source;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event.source, true);\n            this.selectionChange.emit(event.source);\n        }));\n        this.optionMouseEnterSubscription.unsubscribe();\n        this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            event.setActiveStyles();\n            this.activeItem = event;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event);\n        }));\n    }\n}\nNzAutocompleteComponent.ɵfac = function NzAutocompleteComponent_Factory(t) { return new (t || NzAutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzNoAnimationDirective, 9)); };\nNzAutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzAutocompleteComponent, selectors: [[\"nz-autocomplete\"]], contentQueries: function NzAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzAutocompleteOptionComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromContentOptions = _t);\n    } }, viewQuery: function NzAutocompleteComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n        ɵngcc0.ɵɵviewQuery(NzAutocompleteOptionComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromDataSourceOptions = _t);\n    } }, inputs: { nzOverlayClassName: \"nzOverlayClassName\", nzOverlayStyle: \"nzOverlayStyle\", nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\", nzBackfill: \"nzBackfill\", compareWith: \"compareWith\", nzWidth: \"nzWidth\", nzDataSource: \"nzDataSource\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"nzAutocomplete\"], ngContentSelectors: _c2, decls: 1, vars: 0, consts: [[1, \"ant-select-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [\"panel\", \"\"], [2, \"max-height\", \"256px\", \"overflow-y\", \"auto\", \"overflow-anchor\", \"none\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngTemplateOutlet\"], [\"contentTemplate\", \"\"], [\"optionsTemplate\", \"\"], [3, \"nzValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzValue\"]], template: function NzAutocompleteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_Template, 9, 8, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgStyle, ɵngcc2.NzNoAnimationDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgForOf, NzAutocompleteOptionComponent], encapsulation: 2, data: { animation: [slideMotion] }, changeDetection: 0 });\n/** @nocollapse */\nNzAutocompleteComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: NzNoAnimationDirective, decorators: [{ type: Host }, { type: Optional }] }\n];\nNzAutocompleteComponent.propDecorators = {\n    nzWidth: [{ type: Input }],\n    nzOverlayClassName: [{ type: Input }],\n    nzOverlayStyle: [{ type: Input }],\n    nzDefaultActiveFirstOption: [{ type: Input }],\n    nzBackfill: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    nzDataSource: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    fromContentOptions: [{ type: ContentChildren, args: [NzAutocompleteOptionComponent, { descendants: true },] }],\n    fromDataSourceOptions: [{ type: ViewChildren, args: [NzAutocompleteOptionComponent,] }],\n    template: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    content: [{ type: ViewChild, args: ['content', { static: false },] }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptgroupComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-auto-optgroup',\n                exportAs: 'nzAutoOptgroup',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n            }]\n    }], function () { return []; }, { nzLabel: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-auto-option',\n                exportAs: 'nzAutoOption',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    role: 'menuitem',\n                    class: 'ant-select-item ant-select-item-option',\n                    '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n                    '[class.ant-select-item-option-selected]': 'selected',\n                    '[class.ant-select-item-option-active]': 'active',\n                    '[class.ant-select-item-option-disabled]': 'nzDisabled',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'nzDisabled.toString()',\n                    '(click)': 'selectViaInteraction()',\n                    '(mouseenter)': 'onMouseEnter()',\n                    '(mousedown)': '$event.preventDefault()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: NzAutocompleteOptgroupComponent, decorators: [{\n                type: Optional\n            }] }]; }, { nzDisabled: [{\n            type: Input\n        }], selectionChange: [{\n            type: Output\n        }], mouseEntered: [{\n            type: Output\n        }], nzValue: [{\n            type: Input\n        }], nzLabel: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzAutocompleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-autocomplete',\n                exportAs: 'nzAutocomplete',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@slideMotion]=\"dropDownPosition\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option *ngFor=\"let option of nzDataSource\" [nzValue]=\"option\">{{ option }}</nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n                animations: [slideMotion]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.NzNoAnimationDirective, decorators: [{\n                type: Host\n            }, {\n                type: Optional\n            }] }]; }, { nzOverlayClassName: [{\n            type: Input\n        }], nzOverlayStyle: [{\n            type: Input\n        }], nzDefaultActiveFirstOption: [{\n            type: Input\n        }], nzBackfill: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], selectionChange: [{\n            type: Output\n        }], nzWidth: [{\n            type: Input\n        }], nzDataSource: [{\n            type: Input\n        }], fromContentOptions: [{\n            type: ContentChildren,\n            args: [NzAutocompleteOptionComponent, { descendants: true }]\n        }], fromDataSourceOptions: [{\n            type: ViewChildren,\n            args: [NzAutocompleteOptionComponent]\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: false }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel', { static: false }]\n        }], content: [{\n            type: ViewChild,\n            args: ['content', { static: false }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NzAutocompleteComponent.ngAcceptInputType_nzDefaultActiveFirstOption;\n    /** @type {?} */\n    NzAutocompleteComponent.ngAcceptInputType_nzBackfill;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzWidth;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzOverlayClassName;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzOverlayStyle;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzDefaultActiveFirstOption;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzBackfill;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.compareWith;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.nzDataSource;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.selectionChange;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.showPanel;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.isOpen;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.activeItem;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.dropDownPosition;\n    /**\n     * Provided by content\n     * @type {?}\n     */\n    NzAutocompleteComponent.prototype.fromContentOptions;\n    /**\n     * Provided by dataSource\n     * @type {?}\n     */\n    NzAutocompleteComponent.prototype.fromDataSourceOptions;\n    /**\n     * cdk-overlay\n     * @type {?}\n     */\n    NzAutocompleteComponent.prototype.template;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.panel;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.content;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.selectionChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.optionMouseEnterSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.dataSourceChangeSubscription;\n    /**\n     * Options changes listener\n     * @type {?}\n     */\n    NzAutocompleteComponent.prototype.optionSelectionChanges;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.optionMouseEnter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteComponent.prototype.ngZone;\n    /** @type {?} */\n    NzAutocompleteComponent.prototype.noAnimation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: autocomplete-trigger.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NzAutocompleteTriggerDirective)),\n    multi: true\n};\n/**\n * @return {?}\n */\nfunction getNzAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' +\n        'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\nclass NzAutocompleteTriggerDirective {\n    /**\n     * @param {?} elementRef\n     * @param {?} overlay\n     * @param {?} viewContainerRef\n     * @param {?} ngZone\n     * @param {?} document\n     */\n    constructor(elementRef, overlay, viewContainerRef, ngZone, document) {\n        this.elementRef = elementRef;\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.ngZone = ngZone;\n        this.document = document;\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.panelOpen = false;\n    }\n    /**\n     * Current active option\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n            return this.nzAutocomplete.activeItem;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyPanel();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.setTriggerValue(value);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        /** @type {?} */\n        const element = this.elementRef.nativeElement;\n        element.disabled = isDisabled;\n        this.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    openPanel() {\n        this.previousValue = this.elementRef.nativeElement.value;\n        this.attachOverlay();\n        this.updateStatus();\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        if (this.panelOpen) {\n            this.nzAutocomplete.isOpen = this.panelOpen = false;\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this.selectionChangeSubscription.unsubscribe();\n                this.overlayBackdropClickSubscription.unsubscribe();\n                this.overlayPositionChangeSubscription.unsubscribe();\n                this.optionsChangeSubscription.unsubscribe();\n                this.overlayRef.detach();\n                this.overlayRef = null;\n                this.portal = null;\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n            // Reset value when tab / ESC close\n            if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n                this.setTriggerValue(this.previousValue);\n            }\n            this.closePanel();\n        }\n        else if (this.panelOpen && keyCode === ENTER) {\n            if (this.nzAutocomplete.showPanel && this.activeOption) {\n                event.preventDefault();\n                this.activeOption.selectViaInteraction();\n            }\n        }\n        else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (keyCode === UP_ARROW) {\n                this.nzAutocomplete.setPreviousItemActive();\n            }\n            else {\n                this.nzAutocomplete.setNextItemActive();\n            }\n            if (this.activeOption) {\n                this.activeOption.scrollIntoViewIfNeeded();\n            }\n            this.doBackfill();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleInput(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const document = (/** @type {?} */ (this.document));\n        /** @type {?} */\n        let value = target.value;\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        if (this.previousValue !== value) {\n            this.previousValue = value;\n            this.onChange(value);\n            if (this.canOpen() && document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleFocus() {\n        if (this.canOpen()) {\n            this.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleBlur() {\n        this.onTouched();\n    }\n    /**\n     * Subscription data source changes event\n     * @private\n     * @return {?}\n     */\n    subscribeOptionsChange() {\n        /** @type {?} */\n        const firstStable = this.ngZone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.nzAutocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this.positionStrategy.reapplyLastPosition())), delay(0));\n        return merge(firstStable, optionChanges).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.resetActiveItem();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this.overlayRef)).updatePosition();\n            }\n        }));\n    }\n    /**\n     * Subscription option changes event and set the value\n     * @private\n     * @return {?}\n     */\n    subscribeSelectionChange() {\n        return this.nzAutocomplete.selectionChange.subscribe((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            this.setValueAndClose(option);\n        }));\n    }\n    /**\n     * Subscription external click and close panel\n     * @private\n     * @return {?}\n     */\n    subscribeOverlayBackdropClick() {\n        return merge(fromEvent(this.document, 'click'), fromEvent(this.document, 'touchend')).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ (event.target));\n            // Make sure is not self\n            if (clickTarget !== this.elementRef.nativeElement && !(/** @type {?} */ (this.overlayRef)).overlayElement.contains(clickTarget) && this.panelOpen) {\n                this.closePanel();\n            }\n        }));\n    }\n    /**\n     * Subscription overlay position changes and reset dropdown position\n     * @private\n     * @return {?}\n     */\n    subscribeOverlayPositionChange() {\n        return this.positionStrategy.positionChanges\n            .pipe(map((/**\n         * @param {?} position\n         * @return {?}\n         */\n        (position) => position.connectionPair.originY)), distinct(), delay(0))\n            .subscribe((/**\n         * @param {?} position\n         * @return {?}\n         */\n        (position) => {\n            this.nzAutocomplete.updatePosition(position);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    attachOverlay() {\n        if (!this.nzAutocomplete) {\n            throw getNzAutocompleteMissingPanelError();\n        }\n        if (!this.portal) {\n            this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n        }\n        if (!this.overlayRef) {\n            this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        }\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n            this.overlayRef.attach(this.portal);\n            this.overlayPositionChangeSubscription = this.subscribeOverlayPositionChange();\n            this.selectionChangeSubscription = this.subscribeSelectionChange();\n            this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\n            this.optionsChangeSubscription = this.subscribeOptionsChange();\n        }\n        this.nzAutocomplete.isOpen = this.panelOpen = true;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateStatus() {\n        if (this.overlayRef) {\n            this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n        }\n        this.nzAutocomplete.setVisibility();\n        this.resetActiveItem();\n        if (this.activeOption) {\n            this.activeOption.scrollIntoViewIfNeeded();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    destroyPanel() {\n        if (this.overlayRef) {\n            this.closePanel();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this.getOverlayPosition(),\n            disposeOnNavigation: true,\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            // default host element width\n            width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getConnectedElement() {\n        return this.elementRef;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getHostWidth() {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getOverlayPosition() {\n        /** @type {?} */\n        const positions = [\n            new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n            new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n        ];\n        this.positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions(positions);\n        return this.positionStrategy;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    resetActiveItem() {\n        /** @type {?} */\n        const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n        this.nzAutocomplete.clearSelectedOptions(null, true);\n        if (index !== -1) {\n            this.nzAutocomplete.setActiveItem(index);\n            this.nzAutocomplete.activeItem.select(false);\n        }\n        else {\n            this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n        }\n    }\n    /**\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    setValueAndClose(option) {\n        /** @type {?} */\n        const value = option.nzValue;\n        this.setTriggerValue(option.getLabel());\n        this.onChange(value);\n        this.elementRef.nativeElement.focus();\n        this.closePanel();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    setTriggerValue(value) {\n        this.elementRef.nativeElement.value = value || '';\n        if (!this.nzAutocomplete.nzBackfill) {\n            this.previousValue = value;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    doBackfill() {\n        if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n            this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    canOpen() {\n        /** @type {?} */\n        const element = this.elementRef.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n}\nNzAutocompleteTriggerDirective.ɵfac = function NzAutocompleteTriggerDirective_Factory(t) { return new (t || NzAutocompleteTriggerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nNzAutocompleteTriggerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzAutocompleteTriggerDirective, selectors: [[\"input\", \"nzAutocomplete\", \"\"], [\"textarea\", \"nzAutocomplete\", \"\"]], hostAttrs: [\"autocomplete\", \"off\", \"aria-autocomplete\", \"list\"], hostBindings: function NzAutocompleteTriggerDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function NzAutocompleteTriggerDirective_focusin_HostBindingHandler() { return ctx.handleFocus(); })(\"blur\", function NzAutocompleteTriggerDirective_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"input\", function NzAutocompleteTriggerDirective_input_HostBindingHandler($event) { return ctx.handleInput($event); })(\"keydown\", function NzAutocompleteTriggerDirective_keydown_HostBindingHandler($event) { return ctx.handleKeydown($event); });\n    } }, inputs: { nzAutocomplete: \"nzAutocomplete\" }, exportAs: [\"nzAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([NZ_AUTOCOMPLETE_VALUE_ACCESSOR])] });\n/** @nocollapse */\nNzAutocompleteTriggerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNzAutocompleteTriggerDirective.propDecorators = {\n    nzAutocomplete: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzAutocompleteTriggerDirective, [{\n        type: Directive,\n        args: [{\n                selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n                exportAs: 'nzAutocompleteTrigger',\n                providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n                host: {\n                    autocomplete: 'off',\n                    'aria-autocomplete': 'list',\n                    '(focusin)': 'handleFocus()',\n                    '(blur)': 'handleBlur()',\n                    '(input)': 'handleInput($event)',\n                    '(keydown)': 'handleKeydown($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc4.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { nzAutocomplete: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Bind nzAutocomplete component\n     * @type {?}\n     */\n    NzAutocompleteTriggerDirective.prototype.nzAutocomplete;\n    /** @type {?} */\n    NzAutocompleteTriggerDirective.prototype.onChange;\n    /** @type {?} */\n    NzAutocompleteTriggerDirective.prototype.onTouched;\n    /** @type {?} */\n    NzAutocompleteTriggerDirective.prototype.panelOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.selectionChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.optionsChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.overlayBackdropClickSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.overlayPositionChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzAutocompleteTriggerDirective.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: autocomplete.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NzAutocompleteModule {\n}\nNzAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzAutocompleteModule });\nNzAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzAutocompleteModule_Factory(t) { return new (t || NzAutocompleteModule)(); }, imports: [[CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzAutocompleteModule, { declarations: function () { return [NzAutocompleteComponent,\n        NzAutocompleteOptionComponent,\n        NzAutocompleteTriggerDirective,\n        NzAutocompleteOptgroupComponent]; }, imports: function () { return [CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule]; }, exports: function () { return [NzAutocompleteComponent,\n        NzAutocompleteOptionComponent,\n        NzAutocompleteTriggerDirective,\n        NzAutocompleteOptgroupComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n                exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n                imports: [CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-auto-complete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };\n\n//# sourceMappingURL=ng-zorro-antd-auto-complete.js.map"],"sourceRoot":"webpack:///"}