{"version":3,"sources":["./publish/components/transfer/transfer-list.component.ts","./publish/components/transfer/transfer-search.component.ts","./publish/components/transfer/transfer.component.ts","./publish/components/transfer/transfer.module.ts","./publish/components/transfer/public-api.ts","./publish/components/transfer/ng-zorro-antd-transfer.ts"],"names":[],"mappings":"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","file":"empty-index-module~transfer-index-module.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TransferDirection, TransferItem } from './interface';\n\n@Component({\n  selector: 'nz-transfer-list',\n  exportAs: 'nzTransferList',\n  preserveWhitespaces: false,\n  template: `\n    <ng-template #defaultRenderList>\n      <ul *ngIf=\"stat.shownCount > 0\" class=\"ant-transfer-list-content\">\n        <li\n          *ngFor=\"let item of validData\"\n          (click)=\"onItemSelect(item)\"\n          class=\"ant-transfer-list-content-item\"\n          [ngClass]=\"{ 'ant-transfer-list-content-item-disabled': disabled || item.disabled }\"\n        >\n          <label\n            nz-checkbox\n            [nzChecked]=\"item.checked\"\n            (nzCheckedChange)=\"onItemSelect(item)\"\n            (click)=\"$event.stopPropagation()\"\n            [nzDisabled]=\"disabled || item.disabled\"\n          >\n            <ng-container *ngIf=\"!render; else renderContainer\">{{ item.title }}</ng-container>\n            <ng-template #renderContainer [ngTemplateOutlet]=\"render\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          </label>\n        </li>\n      </ul>\n      <div *ngIf=\"stat.shownCount === 0\" class=\"ant-transfer-list-body-not-found\">\n        <nz-embed-empty [nzComponentName]=\"'transfer'\" [specificContent]=\"notFoundContent\"></nz-embed-empty>\n      </div>\n    </ng-template>\n    <div class=\"ant-transfer-list-header\">\n      <label\n        *ngIf=\"showSelectAll\"\n        nz-checkbox\n        [nzChecked]=\"stat.checkAll\"\n        (nzCheckedChange)=\"onItemSelectAll($event)\"\n        [nzIndeterminate]=\"stat.checkHalf\"\n        [nzDisabled]=\"stat.shownCount == 0 || disabled\"\n      ></label>\n      <span class=\"ant-transfer-list-header-selected\">\n        <span>\n          {{ (stat.checkCount > 0 ? stat.checkCount + '/' : '') + stat.shownCount }} {{ validData.length > 1 ? itemsUnit : itemUnit }}\n        </span>\n        <span *ngIf=\"titleText\" class=\"ant-transfer-list-header-title\">{{ titleText }}</span>\n      </span>\n    </div>\n    <div\n      class=\"{{ showSearch ? 'ant-transfer-list-body ant-transfer-list-body-with-search' : 'ant-transfer-list-body' }}\"\n      [ngClass]=\"{ 'ant-transfer__nodata': stat.shownCount === 0 }\"\n    >\n      <div *ngIf=\"showSearch\" class=\"ant-transfer-list-body-search-wrapper\">\n        <div\n          nz-transfer-search\n          (valueChanged)=\"handleFilter($event)\"\n          (valueClear)=\"handleClear()\"\n          [placeholder]=\"searchPlaceholder\"\n          [disabled]=\"disabled\"\n          [value]=\"filter\"\n        ></div>\n      </div>\n      <ng-container *ngIf=\"renderList; else defaultRenderList\">\n        <div class=\"ant-transfer-list-body-customize-wrapper\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              renderList;\n              context: {\n                $implicit: validData,\n                direction: direction,\n                disabled: disabled,\n                onItemSelectAll: onItemSelectAll,\n                onItemSelect: onItemSelect,\n                stat: stat\n              }\n            \"\n          ></ng-container>\n        </div>\n      </ng-container>\n    </div>\n    <div *ngIf=\"footer\" class=\"ant-transfer-list-footer\">\n      <ng-template [ngTemplateOutlet]=\"footer\" [ngTemplateOutletContext]=\"{ $implicit: direction }\"></ng-template>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.ant-transfer-list-with-footer]': '!!footer'\n  }\n})\nexport class NzTransferListComponent {\n  // #region fields\n\n  @Input() direction: TransferDirection = 'left';\n  @Input() titleText = '';\n  @Input() showSelectAll = true;\n\n  @Input() dataSource: TransferItem[] = [];\n\n  @Input() itemUnit: string | undefined = '';\n  @Input() itemsUnit: string | undefined = '';\n  @Input() filter = '';\n  @Input() disabled: boolean = false;\n  @Input() showSearch?: boolean;\n  @Input() searchPlaceholder?: string;\n  @Input() notFoundContent?: string;\n  @Input() filterOption?: (inputValue: string, item: TransferItem) => boolean;\n\n  @Input() renderList: TemplateRef<void> | null = null;\n  @Input() render: TemplateRef<void> | null = null;\n  @Input() footer: TemplateRef<void> | null = null;\n\n  // events\n  @Output() readonly handleSelectAll: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() readonly handleSelect: EventEmitter<TransferItem> = new EventEmitter();\n  @Output() readonly filterChange: EventEmitter<{ direction: TransferDirection; value: string }> = new EventEmitter();\n\n  stat = {\n    checkAll: false,\n    checkHalf: false,\n    checkCount: 0,\n    shownCount: 0\n  };\n\n  get validData(): TransferItem[] {\n    return this.dataSource.filter(w => !w.hide);\n  }\n\n  onItemSelect = (item: TransferItem) => {\n    if (this.disabled || item.disabled) {\n      return;\n    }\n    item.checked = !item.checked;\n    this.updateCheckStatus();\n    this.handleSelect.emit(item);\n  };\n\n  onItemSelectAll = (status: boolean) => {\n    this.dataSource.forEach(item => {\n      if (!item.disabled && !item.hide) {\n        item.checked = status;\n      }\n    });\n\n    this.updateCheckStatus();\n    this.handleSelectAll.emit(status);\n  };\n\n  private updateCheckStatus(): void {\n    const validCount = this.dataSource.filter(w => !w.disabled).length;\n    this.stat.checkCount = this.dataSource.filter(w => w.checked && !w.disabled).length;\n    this.stat.shownCount = this.validData.length;\n    this.stat.checkAll = validCount > 0 && validCount === this.stat.checkCount;\n    this.stat.checkHalf = this.stat.checkCount > 0 && !this.stat.checkAll;\n  }\n\n  // #endregion\n\n  // #region search\n\n  handleFilter(value: string): void {\n    this.filter = value;\n    this.dataSource.forEach(item => {\n      item.hide = value.length > 0 && !this.matchFilter(value, item);\n    });\n    this.stat.shownCount = this.validData.length;\n    this.filterChange.emit({ direction: this.direction, value });\n  }\n\n  handleClear(): void {\n    this.handleFilter('');\n  }\n\n  private matchFilter(text: string, item: TransferItem): boolean {\n    if (this.filterOption) {\n      return this.filterOption(text, item);\n    }\n    return item.title.includes(text);\n  }\n\n  // #endregion\n\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-transfer-list');\n  }\n\n  markForCheck(): void {\n    this.updateCheckStatus();\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: '[nz-transfer-search]',\n  exportAs: 'nzTransferSearch',\n  preserveWhitespaces: false,\n  template: `\n    <input\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"_handle()\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      class=\"ant-input ant-transfer-list-search\"\n      [ngClass]=\"{ 'ant-input-disabled': disabled }\"\n    />\n    <a *ngIf=\"value && value.length > 0; else def\" class=\"ant-transfer-list-search-action\" (click)=\"_clear()\">\n      <i nz-icon nzType=\"close-circle\"></i>\n    </a>\n    <ng-template #def>\n      <span class=\"ant-transfer-list-search-action\"><i nz-icon nzType=\"search\"></i></span>\n    </ng-template>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzTransferSearchComponent implements OnChanges {\n  // region: fields\n\n  @Input() placeholder?: string;\n  @Input() value?: string;\n  @Input() disabled: boolean = false;\n\n  @Output() readonly valueChanged = new EventEmitter<string>();\n  @Output() readonly valueClear = new EventEmitter<void>();\n\n  // endregion\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  _handle(): void {\n    this.valueChanged.emit(this.value);\n  }\n\n  _clear(): void {\n    if (this.disabled) {\n      return;\n    }\n    this.value = '';\n    this.valueClear.emit();\n  }\n\n  ngOnChanges(): void {\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toArray } from 'ng-zorro-antd/core/util';\nimport { NzI18nService, NzTransferI18nInterface } from 'ng-zorro-antd/i18n';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TransferCanMove, TransferChange, TransferDirection, TransferItem, TransferSearchChange, TransferSelectChange } from './interface';\nimport { NzTransferListComponent } from './transfer-list.component';\n\n@Component({\n  selector: 'nz-transfer',\n  exportAs: 'nzTransfer',\n  preserveWhitespaces: false,\n  template: `\n    <nz-transfer-list\n      class=\"ant-transfer-list\"\n      [ngStyle]=\"nzListStyle\"\n      data-direction=\"left\"\n      direction=\"left\"\n      [titleText]=\"nzTitles[0]\"\n      [showSelectAll]=\"nzShowSelectAll\"\n      [dataSource]=\"leftDataSource\"\n      [filter]=\"leftFilter\"\n      [filterOption]=\"nzFilterOption\"\n      (filterChange)=\"handleFilterChange($event)\"\n      [renderList]=\"nzRenderList && nzRenderList[0]\"\n      [render]=\"nzRender\"\n      [disabled]=\"nzDisabled\"\n      [showSearch]=\"nzShowSearch\"\n      [searchPlaceholder]=\"nzSearchPlaceholder || locale?.searchPlaceholder\"\n      [notFoundContent]=\"nzNotFoundContent\"\n      [itemUnit]=\"nzItemUnit || locale?.itemUnit\"\n      [itemsUnit]=\"nzItemsUnit || locale?.itemsUnit\"\n      [footer]=\"nzFooter\"\n      (handleSelect)=\"handleLeftSelect($event)\"\n      (handleSelectAll)=\"handleLeftSelectAll($event)\"\n    ></nz-transfer-list>\n    <div *ngIf=\"dir !== 'rtl'\" class=\"ant-transfer-operation\">\n      <button nz-button (click)=\"moveToLeft()\" [disabled]=\"nzDisabled || !leftActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"left\"></i>\n        <span *ngIf=\"nzOperations[1]\">{{ nzOperations[1] }}</span>\n      </button>\n      <button nz-button (click)=\"moveToRight()\" [disabled]=\"nzDisabled || !rightActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"right\"></i>\n        <span *ngIf=\"nzOperations[0]\">{{ nzOperations[0] }}</span>\n      </button>\n    </div>\n    <div *ngIf=\"dir === 'rtl'\" class=\"ant-transfer-operation\">\n      <button nz-button (click)=\"moveToRight()\" [disabled]=\"nzDisabled || !rightActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"left\"></i>\n        <span *ngIf=\"nzOperations[0]\">{{ nzOperations[0] }}</span>\n      </button>\n      <button nz-button (click)=\"moveToLeft()\" [disabled]=\"nzDisabled || !leftActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"right\"></i>\n        <span *ngIf=\"nzOperations[1]\">{{ nzOperations[1] }}</span>\n      </button>\n    </div>\n    <nz-transfer-list\n      class=\"ant-transfer-list\"\n      [ngStyle]=\"nzListStyle\"\n      data-direction=\"right\"\n      direction=\"right\"\n      [titleText]=\"nzTitles[1]\"\n      [showSelectAll]=\"nzShowSelectAll\"\n      [dataSource]=\"rightDataSource\"\n      [filter]=\"rightFilter\"\n      [filterOption]=\"nzFilterOption\"\n      (filterChange)=\"handleFilterChange($event)\"\n      [renderList]=\"nzRenderList && nzRenderList[1]\"\n      [render]=\"nzRender\"\n      [disabled]=\"nzDisabled\"\n      [showSearch]=\"nzShowSearch\"\n      [searchPlaceholder]=\"nzSearchPlaceholder || locale?.searchPlaceholder\"\n      [notFoundContent]=\"nzNotFoundContent\"\n      [itemUnit]=\"nzItemUnit || locale?.itemUnit\"\n      [itemsUnit]=\"nzItemsUnit || locale?.itemsUnit\"\n      [footer]=\"nzFooter\"\n      (handleSelect)=\"handleRightSelect($event)\"\n      (handleSelectAll)=\"handleRightSelectAll($event)\"\n    ></nz-transfer-list>\n  `,\n  host: {\n    '[class.ant-transfer-rtl]': `dir === 'rtl'`,\n    '[class.ant-transfer-disabled]': `nzDisabled`,\n    '[class.ant-transfer-customize-list]': `nzRenderList`\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzTransferComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzShowSelectAll: BooleanInput;\n  static ngAcceptInputType_nzShowSearch: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n\n  @ViewChildren(NzTransferListComponent)\n  private lists!: QueryList<NzTransferListComponent>;\n  locale!: NzTransferI18nInterface;\n\n  leftFilter = '';\n  rightFilter = '';\n  dir: Direction = 'ltr';\n\n  // #region fields\n\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzDataSource: TransferItem[] = [];\n  @Input() nzTitles: string[] = ['', ''];\n  @Input() nzOperations: string[] = [];\n  @Input() nzListStyle: NgStyleInterface = {};\n  @Input() @InputBoolean() nzShowSelectAll = true;\n  @Input() nzItemUnit?: string;\n  @Input() nzItemsUnit?: string;\n  @Input() nzCanMove: (arg: TransferCanMove) => Observable<TransferItem[]> = (arg: TransferCanMove) => of(arg.list);\n  @Input() nzRenderList: Array<TemplateRef<NzSafeAny> | null> | null = null;\n  @Input() nzRender: TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: TemplateRef<NzSafeAny> | null = null;\n  @Input() @InputBoolean() nzShowSearch = false;\n  @Input() nzFilterOption?: (inputValue: string, item: TransferItem) => boolean;\n  @Input() nzSearchPlaceholder?: string;\n  @Input() nzNotFoundContent?: string;\n  @Input() nzTargetKeys: string[] = [];\n  @Input() nzSelectedKeys: string[] = [];\n\n  // events\n  @Output() readonly nzChange = new EventEmitter<TransferChange>();\n  @Output() readonly nzSearchChange = new EventEmitter<TransferSearchChange>();\n  @Output() readonly nzSelectChange = new EventEmitter<TransferSelectChange>();\n\n  // #endregion\n\n  // #region process data\n\n  // left\n  leftDataSource: TransferItem[] = [];\n\n  // right\n  rightDataSource: TransferItem[] = [];\n\n  private splitDataSource(): void {\n    this.leftDataSource = [];\n    this.rightDataSource = [];\n    this.nzDataSource.forEach(record => {\n      if (record.direction === 'right') {\n        record.direction = 'right';\n        this.rightDataSource.push(record);\n      } else {\n        record.direction = 'left';\n        this.leftDataSource.push(record);\n      }\n    });\n  }\n\n  private getCheckedData(direction: TransferDirection): TransferItem[] {\n    return this[direction === 'left' ? 'leftDataSource' : 'rightDataSource'].filter(w => w.checked);\n  }\n\n  handleLeftSelectAll = (checked: boolean) => this.handleSelect('left', checked);\n  handleRightSelectAll = (checked: boolean) => this.handleSelect('right', checked);\n\n  handleLeftSelect = (item: TransferItem) => this.handleSelect('left', !!item.checked, item);\n  handleRightSelect = (item: TransferItem) => this.handleSelect('right', !!item.checked, item);\n\n  handleSelect(direction: TransferDirection, checked: boolean, item?: TransferItem): void {\n    const list = this.getCheckedData(direction);\n    this.updateOperationStatus(direction, list.length);\n    this.nzSelectChange.emit({ direction, checked, list, item });\n  }\n\n  handleFilterChange(ret: { direction: TransferDirection; value: string }): void {\n    this.nzSearchChange.emit(ret);\n  }\n\n  // #endregion\n\n  // #region operation\n\n  leftActive = false;\n  rightActive = false;\n\n  private updateOperationStatus(direction: TransferDirection, count?: number): void {\n    this[direction === 'right' ? 'leftActive' : 'rightActive'] =\n      (typeof count === 'undefined' ? this.getCheckedData(direction).filter(w => !w.disabled).length : count) > 0;\n  }\n\n  moveToLeft = () => this.moveTo('left');\n  moveToRight = () => this.moveTo('right');\n\n  moveTo(direction: TransferDirection): void {\n    const oppositeDirection = direction === 'left' ? 'right' : 'left';\n    this.updateOperationStatus(oppositeDirection, 0);\n    const datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n    const moveList = datasource.filter(item => item.checked === true && !item.disabled);\n    this.nzCanMove({ direction, list: moveList }).subscribe(\n      newMoveList =>\n        this.truthMoveTo(\n          direction,\n          newMoveList.filter(i => !!i)\n        ),\n      () => moveList.forEach(i => (i.checked = false))\n    );\n  }\n\n  private truthMoveTo(direction: TransferDirection, list: TransferItem[]): void {\n    const oppositeDirection = direction === 'left' ? 'right' : 'left';\n    const datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n    const targetDatasource = direction === 'left' ? this.leftDataSource : this.rightDataSource;\n    for (const item of list) {\n      item.checked = false;\n      item.hide = false;\n      item.direction = direction;\n      datasource.splice(datasource.indexOf(item), 1);\n    }\n    targetDatasource.splice(0, 0, ...list);\n    this.updateOperationStatus(oppositeDirection);\n    this.nzChange.emit({\n      from: oppositeDirection,\n      to: direction,\n      list\n    });\n    this.markForCheckAllList();\n  }\n\n  // #endregion\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private i18n: NzI18nService,\n    private elementRef: ElementRef,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-transfer');\n  }\n\n  private markForCheckAllList(): void {\n    if (!this.lists) {\n      return;\n    }\n    this.lists.forEach(i => i.markForCheck());\n  }\n\n  private handleNzTargetKeys(): void {\n    const keys = toArray(this.nzTargetKeys);\n    const hasOwnKey = (e: TransferItem) => e.hasOwnProperty('key');\n    this.leftDataSource.forEach(e => {\n      if (hasOwnKey(e) && keys.indexOf(e.key) !== -1 && !e.disabled) {\n        e.checked = true;\n      }\n    });\n    this.moveToRight();\n  }\n\n  private handleNzSelectedKeys(): void {\n    const keys = toArray(this.nzSelectedKeys);\n    this.nzDataSource.forEach(e => {\n      if (keys.indexOf(e.key) !== -1) {\n        e.checked = true;\n      }\n    });\n    const term = (ld: TransferItem) => ld.disabled === false && ld.checked === true;\n    this.rightActive = this.leftDataSource.some(term);\n    this.leftActive = this.rightDataSource.some(term);\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Transfer');\n      this.markForCheckAllList();\n    });\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.unsubscribe$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzDataSource) {\n      this.splitDataSource();\n      this.updateOperationStatus('left');\n      this.updateOperationStatus('right');\n      this.cdr.detectChanges();\n      this.markForCheckAllList();\n    }\n    if (changes.nzTargetKeys) {\n      this.handleNzTargetKeys();\n    }\n    if (changes.nzSelectedKeys) {\n      this.handleNzSelectedKeys();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nimport { NzTransferListComponent } from './transfer-list.component';\nimport { NzTransferSearchComponent } from './transfer-search.component';\nimport { NzTransferComponent } from './transfer.component';\n\n@NgModule({\n  imports: [\n    BidiModule,\n    CommonModule,\n    FormsModule,\n    NzCheckboxModule,\n    NzButtonModule,\n    NzInputModule,\n    NzI18nModule,\n    NzIconModule,\n    NzEmptyModule\n  ],\n  declarations: [NzTransferComponent, NzTransferListComponent, NzTransferSearchComponent],\n  exports: [NzTransferComponent]\n})\nexport class NzTransferModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './interface';\nexport { NzTransferListComponent } from './transfer-list.component';\nexport { NzTransferSearchComponent } from './transfer-search.component';\nexport { NzTransferComponent } from './transfer.component';\nexport { NzTransferModule } from './transfer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}