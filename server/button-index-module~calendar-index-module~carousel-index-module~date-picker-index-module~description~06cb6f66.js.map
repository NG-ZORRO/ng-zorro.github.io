{"version":3,"sources":["./publish/components/radio/radio-button.directive.ts","./publish/components/radio/radio.service.ts","./publish/components/radio/radio-group.component.ts","./publish/components/radio/radio.component.ts","./publish/components/radio/radio.module.ts","./publish/components/radio/public-api.ts","./publish/components/radio/ng-zorro-antd-radio.ts"],"names":[],"mappings":"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","file":"button-index-module~calendar-index-module~carousel-index-module~date-picker-index-module~description~06cb6f66.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nz-radio-button]'\n})\nexport class NzRadioButtonDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Injectable } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n@Injectable()\nexport class NzRadioService {\n  selected$ = new ReplaySubject<NzSafeAny>(1);\n  touched$ = new Subject<void>();\n  disabled$ = new ReplaySubject<boolean>(1);\n  name$ = new ReplaySubject<string>(1);\n  touch(): void {\n    this.touched$.next();\n  }\n  select(value: NzSafeAny): void {\n    this.selected$.next(value);\n  }\n  setDisabled(value: boolean): void {\n    this.disabled$.next(value);\n  }\n  setName(value: string): void {\n    this.name$.next(value);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, NzSafeAny, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzRadioService } from './radio.service';\n\nexport type NzRadioButtonStyle = 'outline' | 'solid';\n\n@Component({\n  selector: 'nz-radio-group',\n  exportAs: 'nzRadioGroup',\n  preserveWhitespaces: false,\n  template: `\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzRadioService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzRadioGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-group-large]': `nzSize === 'large'`,\n    '[class.ant-radio-group-small]': `nzSize === 'small'`,\n    '[class.ant-radio-group-solid]': `nzButtonStyle === 'solid'`,\n    '[class.ant-radio-group-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzRadioGroupComponent implements OnInit, ControlValueAccessor, OnDestroy, OnChanges {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  private value: NzSafeAny | null = null;\n  private destroy$ = new Subject();\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzButtonStyle: NzRadioButtonStyle = 'outline';\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzName: string | null = null;\n\n  dir: Direction = 'ltr';\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private nzRadioService: NzRadioService,\n    private elementRef: ElementRef,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-radio-group');\n  }\n\n  ngOnInit(): void {\n    this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      if (this.value !== value) {\n        this.value = value;\n        this.onChange(this.value);\n      }\n    });\n    this.nzRadioService.touched$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      Promise.resolve().then(() => this.onTouched());\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisabled, nzName } = changes;\n    if (nzDisabled) {\n      this.nzRadioService.setDisabled(this.nzDisabled);\n    }\n    if (nzName) {\n      this.nzRadioService.setName(this.nzName!);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzSafeAny): void {\n    this.value = value;\n    this.nzRadioService.select(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.nzRadioService.setDisabled(isDisabled);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzRadioButtonDirective } from './radio-button.directive';\nimport { NzRadioService } from './radio.service';\n\n@Component({\n  selector: '[nz-radio],[nz-radio-button]',\n  exportAs: 'nzRadio',\n  preserveWhitespaces: false,\n  template: `\n    <span\n      [class.ant-radio]=\"!isRadioButton\"\n      [class.ant-radio-checked]=\"isChecked && !isRadioButton\"\n      [class.ant-radio-disabled]=\"nzDisabled && !isRadioButton\"\n      [class.ant-radio-button]=\"isRadioButton\"\n      [class.ant-radio-button-checked]=\"isChecked && isRadioButton\"\n      [class.ant-radio-button-disabled]=\"nzDisabled && isRadioButton\"\n    >\n      <input\n        #inputElement\n        type=\"radio\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [class.ant-radio-input]=\"!isRadioButton\"\n        [class.ant-radio-button-input]=\"isRadioButton\"\n        [disabled]=\"nzDisabled\"\n        [checked]=\"isChecked\"\n        [attr.name]=\"name\"\n      />\n      <span [class.ant-radio-inner]=\"!isRadioButton\" [class.ant-radio-button-inner]=\"isRadioButton\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-wrapper]': '!isRadioButton',\n    '[class.ant-radio-button-wrapper]': 'isRadioButton',\n    '[class.ant-radio-wrapper-checked]': 'isChecked && !isRadioButton',\n    '[class.ant-radio-button-wrapper-checked]': 'isChecked && isRadioButton',\n    '[class.ant-radio-wrapper-disabled]': 'nzDisabled && !isRadioButton',\n    '[class.ant-radio-button-wrapper-disabled]': 'nzDisabled && isRadioButton',\n    '[class.ant-radio-wrapper-rtl]': `!isRadioButton && dir === 'rtl'`,\n    '[class.ant-radio-button-wrapper-rtl]': `isRadioButton && dir === 'rtl'`,\n    '(click)': 'onHostClick($event)'\n  }\n})\nexport class NzRadioComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n\n  private isNgModel = false;\n  private destroy$ = new Subject<void>();\n  isChecked = false;\n  name: string | null = null;\n  isRadioButton = !!this.nzRadioButtonDirective;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: false }) inputElement?: ElementRef;\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAutoFocus = false;\n\n  dir: Direction = 'ltr';\n\n  onHostClick(event: MouseEvent): void {\n    /** prevent label click triggered twice. **/\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.nzDisabled && !this.isChecked) {\n      if (this.nzRadioService) {\n        this.nzRadioService.select(this.nzValue);\n      }\n      if (this.isNgModel) {\n        this.isChecked = true;\n        this.onChange(true);\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement!, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement!.nativeElement.blur();\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality,\n    @Optional() private nzRadioService: NzRadioService,\n    @Optional() private nzRadioButtonDirective: NzRadioButtonDirective\n  ) {}\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.isNgModel = true;\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  ngOnInit(): void {\n    if (this.nzRadioService) {\n      this.nzRadioService.name$.pipe(takeUntil(this.destroy$)).subscribe(name => {\n        this.name = name;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.disabled$.pipe(takeUntil(this.destroy$)).subscribe(disabled => {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        this.isChecked = this.nzValue === value;\n        this.cdr.markForCheck();\n      });\n    }\n    this.focusMonitor.monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n          if (this.nzRadioService) {\n            this.nzRadioService.touch();\n          }\n        }\n      });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzRadioButtonDirective } from './radio-button.directive';\nimport { NzRadioGroupComponent } from './radio-group.component';\nimport { NzRadioComponent } from './radio.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, FormsModule],\n  exports: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent],\n  declarations: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent]\n})\nexport class NzRadioModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './radio-button.directive';\nexport * from './radio-group.component';\nexport * from './radio.component';\nexport * from './radio.service';\nexport * from './radio.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}