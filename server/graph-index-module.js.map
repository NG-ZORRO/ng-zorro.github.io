{"version":3,"sources":["./site/doc/app/graph/zh.component.ts","./site/doc/app/graph/zh.html","./site/doc/app/graph/customized.ts","./site/doc/app/graph/en.component.ts","./site/doc/app/graph/en.html","./site/doc/app/graph/module.ts","./site/doc/app/graph/index.module.ts","./publish/__ivy_ngcc__/fesm2015/ng-zorro-antd-graph.js"],"names":[],"mappings":"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;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,uBAAuB;AACpC;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,QAAQ,sBAAsB,EAAE;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAe,GAAG;AAC3C;AACA,kCAAkC,uEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,kBAAkB,0DAAG;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,gDAAgD;AAClI;AACA,kCAAkC,+DAAwB,EAAE,oGAAoG;;AAEhK;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,sEAAsE,0CAA0C;AAChH;AACA,4BAA4B,+DAAwB,EAAE,mXAAmX;AACza,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,oBAAoB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAI;AACxB;AACA;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,YAAY,IAAI,YAAY;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY,IAAI,YAAY;AACzE,0CAA0C,YAAY;AACtD,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB,IAAI,gBAAgB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAI;AACtC;AACA,SAAS;AACT;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,oDAAa,GAAG;AACpM;AACA,4BAA4B,+DAAwB,EAAE,yJAAyJ;AAC/M,QAAQ,4DAAqB;AAC7B,KAAK,EAAE,WAAW,eAAe,aAAa,kEAA2B,GAAG;AAC5E;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAO;AACvC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,0BAA0B,oDAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAM;AACd;AACA;AACA;AACA;AACA,QAAQ,2DAAM,yCAAyC,qDAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAM;AACd,QAAQ,2DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAM;AACtB,gBAAgB,2DAAM;AACtB;AACA;AACA,aAAa;AACb;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,+DAAwB,CAAC,wDAAiB,GAAG;AACpK;AACA,+BAA+B,+DAAwB,EAAE,glBAAglB;AACzoB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,6DAAsB;AAC9B,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB,kEAAK,EAAE,yBAAyB,MAAM,MAAM,MAAM,MAAM;AACxE,gBAAgB,kEAAK;AACrB,oBAAoB,kEAAK;AACzB,kCAAkC,UAAU;AAC5C,mCAAmC,WAAW;AAC9C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB,kEAAK,EAAE,yBAAyB,MAAM,MAAM,MAAM,MAAM;AACxE,gBAAgB,kEAAK;AACrB,oBAAoB,kEAAK;AACzB,kCAAkC,UAAU;AAC5C,mCAAmC,WAAW;AAC9C,qBAAqB;AACrB;AACA,gBAAgB,kEAAK;AACrB,oBAAoB,kEAAK;AACzB,wBAAwB,oEAAO,mBAAmB,kEAAK;AACvD,sCAAsC,UAAU;AAChD,uCAAuC,WAAW;AAClD,yBAAyB;AACzB;AACA,oBAAoB,oEAAO,mBAAmB,kEAAK,EAAE,yBAAyB,MAAM,MAAM,MAAM,MAAM;AACtG;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA,yFAAyF,MAAM,IAAI,MAAM;AACzG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,qEAAuB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG;AAC1P;AACA,4BAA4B,+DAAwB,EAAE,sJAAsJ;AAC5M,QAAQ,wDAAiB,0EAA0E,mCAAmC,EAAE;AACxI,KAAK;AACL,QAAQ,4DAAqB;AAC7B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,eAAe,YAAY,yBAAyB,EAAE;AACxE;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,qEAAgB,EAAE;AAC9B,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,oDAAM,EAAE;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,kCAAkC,0DAAY;AAC9C,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAM;AAC/B,8BAA8B,qDAAI;AAClC;AACA,0BAA0B,YAAY;AACtC,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,+CAA+C,EAAE,IAAI,EAAE,SAAS,EAAE;AAClE;AACA,SAAS;AACT,iDAAiD,qDAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAAa;AAC1C;AACA;AACA;AACA;AACA,QAAQ,2DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG;AACvO;AACA,oCAAoC,+DAAwB,EAAE,+IAA+I;AAC7M,QAAQ,+DAAwB;AAChC,QAAQ,+DAAwB;AAChC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,2EAA2E,YAAY,2DAA2D,yYAAyY;AAC7iB,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,wCAAwC;AAC/C;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,wBAAwB,OAAO,uDAAS,uBAAuB,eAAe,IAAI;AAClF,mBAAmB,OAAO,uDAAS,kBAAkB,eAAe,IAAI;AACxE,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD,8BAA8B,0DAAY;AAC1C,oCAAoC,0DAAY;AAChD,+BAA+B,0DAAY;AAC3C,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA,8CAA8C,OAAO,GAAG,OAAO;AAC/D;AACA;AACA;AACA,gCAAgC,EAAE,IAAI,EAAE;AACxC;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAiE;AAChF;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gEAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAI;AACtC;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B,iFAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,OAAO,GAAG,OAAO;AAClF,sEAAsE,OAAO,GAAG,OAAO;AACvF;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qDAAqD,OAAO,GAAG,OAAO;AACtE,0DAA0D,OAAO,GAAG,OAAO;AAC3E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,+DAAQ;AACnC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qDAAQ,4DAA4D,0DAAG;AACtF;AACA,SAAS,GAAG,+DAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,IAAI,GAAG,IAAI;AAC7C,SAAS;AA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","file":"graph-index-module.js","sourcesContent":["import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../share/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-graph',\n  preserveWhitespaces: false,\n  templateUrl  : './zh.html'\n})\nexport class NzDemoGraphZhComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes!: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-graph-demo-customized\" nzTitle=\"自定义\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Hierarchy Graph<span class=\"subtitle\">流程图</span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" aria-label=\"Edit this page on Github\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/graph/doc/index.zh-CN.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<blockquote style=\"border-color: #faad14;\">\n<p>NG-ZORRO 实验性功能是指已发布但不稳定或者还未准备好用于生产环境的功能。</p>\n<p>开发者或用户可以选择在正式发布前使用这些功能，但是每次发布版本时都可能存在 <strong>breaking changes</strong>。</p>\n</blockquote><h2 id=\"何时使用\"><span>何时使用</span><a onclick=\"window.location.hash = '何时使用'\" class=\"anchor\">#</a></h2><p>需要在网页上渲染 GRAPH 图时使用。</p>\n<h3 id=\"引入模块\"><span>引入模块</span><a onclick=\"window.location.hash = '引入模块'\" class=\"anchor\">#</a></h3><blockquote>\n<p>目前组件依赖 d3-drag d3-zoom d3-selection d3-transition d3-shape 用于绘制相关属性（可能会在之后的版本中逐步替换）</p>\n</blockquote>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzGraphModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/graph'</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"引入样式\"><span>引入样式</span><a onclick=\"window.location.hash = '引入样式'\" class=\"anchor\">#</a></h3><pre class=\"language-less\"><code><span class=\"token variable\">@import</span> <span class=\"token string\">\"node_modules/ng-zorro-antd/graph/style/entry.less\"</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>代码演示</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"展开全部代码\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"8\">\n\t<div nz-col [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"自定义\"\n  [nzId]=\"'components-graph-demo-customized'\"\n  nzSelector=\"nz-demo-graph-customized\"\n  [nzLink]=\"'components-graph-demo-customized'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:graph-customized <name>\"\n  nzComponentName=\"NzDemoGraphCustomizedComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/graph/demo/customized.md'\">\n\t<nz-demo-graph-customized demo></nz-demo-graph-customized>\n\t<div intro ngNonBindable>\n\t\t<p>自定义 node 样式。</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div><section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><p>安装依赖：</p>\n<pre class=\"language-sh\"><code>npm install <span class=\"token variable\">@nx</span><span class=\"token operator\">-</span>component<span class=\"token operator\">/</span>hierarchy<span class=\"token operator\">-</span>graph <span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span> npm install d3<span class=\"token operator\">-</span><span class=\"token operator\">*</span> <span class=\"token variable\">@types</span><span class=\"token operator\">/</span>d3</code></pre>\n<h3 id=\"nz-graph\"><span>nz-graph</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-graph'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzGraphData]</code></td>\n<td>数据源</td>\n<td><code>NzGraphData(data: NzGraphDataDef?)</code></td>\n<td>``</td>\n</tr>\n<tr>\n<td><code>[nzRankDirection]</code></td>\n<td>图方向</td>\n<td><code>TB</code> | <code>BT</code> | <code>LR</code> | <code>RL</code></td>\n<td><code>LR</code></td>\n</tr>\n<tr>\n<td><code>[nzAutoSize]</code></td>\n<td>是否根据节点内容自适应高度(默认等高)</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"组件方法\"><span>组件方法</span><a onclick=\"window.location.hash = '组件方法'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>autoFit()</code></td>\n<td>居中图并自适应缩放</td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphdata\"><span>NzGraphData</span><a onclick=\"window.location.hash = 'nzgraphdata'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>属性/方法</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>setData</code></td>\n<td>设置数据源</td>\n<td><code>(data: NzGraphDataDef) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>toggle</code></td>\n<td>收起/展开 group 节点</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>expand</code></td>\n<td>展开 group 节点</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>expandAll</code></td>\n<td>展开全部 group 节点</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>collapse</code></td>\n<td>收起全部 group 节点</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>isExpand</code></td>\n<td>获取 group 节点展开状态</td>\n<td><code>(nodeName: string) =&gt; boolean</code></td>\n</tr>\n<tr>\n<td><code>expansionModel</code></td>\n<td>展开节点存储对象</td>\n<td><code>SelectionModel&lt;string&gt;</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphdatadef\"><span>NzGraphDataDef</span><a onclick=\"window.location.hash = 'nzgraphdatadef'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>nodes</code></td>\n<td>节点</td>\n<td><code>Array&lt;&#123; id: number|string; label?: string; width?: number; height?: number; [key: string]: any; &#125;&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>edges</code></td>\n<td>线</td>\n<td><code>Array&lt;&#123; v: number|string; w: number|string; [key: string]: any; &#125;&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>compound</code></td>\n<td>分组</td>\n<td><code>&#123; [parent: string]: string[]; &#125;</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphnode\"><span>NzGraphNode</span><a onclick=\"window.location.hash = 'nzgraphnode'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>id</code></td>\n<td>id</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>label?</code></td>\n<td>节点内容</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>节点名称</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>节点类型(组: 0, 节点: 1)</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>parentNodeName</code></td>\n<td>父节点名称</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>coreBox</code></td>\n<td>布局高宽</td>\n<td><code>&#123; width: number;  height: number; &#125;</code></td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>x偏移</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>y偏移</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>宽度</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>高度</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>[key: string]</code></td>\n<td>用户输入</td>\n<td><code>any</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphedge\"><span>NzGraphEdge</span><a onclick=\"window.location.hash = 'nzgraphedge'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>id</code></td>\n<td>id</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>v</code></td>\n<td>起始节点</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>w</code></td>\n<td>目标节点</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>label?</code></td>\n<td>线内容</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>points</code></td>\n<td>points</td>\n<td><code>Array&lt;&#123; x: number; y: number; &#125;&gt;</code></td>\n</tr>\n<tr>\n<td><code>adjoiningEdge</code></td>\n<td>adjoiningEdge</td>\n<td><code>&#123; v: string; w: string; points: points&gt;; &#125; | null</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphgroupnode\"><span>NzGraphGroupNode</span><a onclick=\"window.location.hash = 'nzgraphgroupnode'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>expanded</code></td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>nodes</code></td>\n<td><code>Array&lt;NzGraphNode|NzGraphGroupNode&gt;</code></td>\n</tr>\n<tr>\n<td><code>edges</code></td>\n<td><code>NzGraphEdge[]</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nzgraphnode\"><span>nzGraphNode</span><a onclick=\"window.location.hash = 'nzgraphnode'\" class=\"anchor\">#</a></h3><p>自定义建议渲染模板</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-graph</span> <span class=\"token attr-name\">[nzGraphData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-container</span> <span class=\"token attr-name\">*nzGraphNode</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>&#123;&#123; node.name &#125;&#125; - &#123;&#123; node.label &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-container</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-graph</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"说明\"><span>说明</span><a onclick=\"window.location.hash = '说明'\" class=\"anchor\">#</a></h2><ul>\n<li><a href=\"https://www.npmjs.com/package/@nx-component/hierarchy-graph\" target=\"_blank\" rel=\"noopener\">@nx-component/hierarchy-graph</a>: graph 布局计算库</li>\n<li><a href=\"https://github.com/angular/components/blob/master/src/cdk/collections/selection-model.ts\" target=\"_blank\" rel=\"noopener\">SelectionModel</a></li>\n</ul>\n</section></article>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NzGraphComponent, NzGraphData, NzGraphDataDef, NzRankDirection } from 'ng-zorro-antd/graph';\n\n@Component({\n  selector: 'nz-demo-graph-customized',\n  template: `\n    <button nz-button nzType=\"default\" (click)=\"expandAll()\">ExpandAll</button>\n    <button nz-button nzType=\"default\" (click)=\"collapseAll()\">CollapseAll</button>\n    <button nz-button nzType=\"primary\" (click)=\"layout()\">Layout</button>\n    <nz-radio-group [(ngModel)]=\"rankDirection\">\n      <label nz-radio-button nzValue=\"LR\">LR</label>\n      <label nz-radio-button nzValue=\"RL\">RL</label>\n      <label nz-radio-button nzValue=\"TB\">TB</label>\n      <label nz-radio-button nzValue=\"BT\">BT</label>\n    </nz-radio-group>\n    <nz-graph [nzGraphData]=\"graphData\" [nzAutoSize]=\"true\" [nzRankDirection]=\"rankDirection\">\n      <ng-container *nzGraphNode=\"let node\">\n        <div class=\"custom-node\">\n          <div class=\"header\">{{ node.label || node.name }}</div>\n        </div>\n      </ng-container>\n    </nz-graph>\n  `,\n  styles: [\n    `\n      nz-radio-group {\n        float: right;\n      }\n\n      button {\n        margin-right: 12px;\n      }\n\n      nz-graph {\n        height: 400px;\n      }\n\n      .custom-node {\n        height: 100%;\n        min-height: 100px;\n        display: block;\n      }\n    `\n  ]\n})\nexport class NzDemoGraphCustomizedComponent implements OnInit {\n  @ViewChild(NzGraphComponent, { static: true }) nzGraphComponent!: NzGraphComponent;\n\n  testDef: NzGraphDataDef = {\n    nodes: [\n      {\n        id: '0',\n        label: '0'\n      },\n      {\n        id: '1',\n        label: '1'\n      },\n      {\n        id: '2',\n        label: '2'\n      },\n      {\n        id: '3',\n        label: '3'\n      },\n      {\n        id: '4',\n        label: '4'\n      },\n      {\n        id: '5',\n        label: '5'\n      },\n      {\n        id: '6',\n        label: '6'\n      },\n      {\n        id: '7',\n        label: '7'\n      },\n      {\n        id: '8',\n        label: '8'\n      },\n      {\n        id: '9',\n        label: '9'\n      },\n      {\n        id: '10',\n        label: '10'\n      },\n      {\n        id: '11',\n        label: '11'\n      },\n      {\n        id: '12',\n        label: '12'\n      },\n      {\n        id: '13',\n        label: '13'\n      },\n      {\n        id: '14',\n        label: '14'\n      },\n      {\n        id: '15',\n        label: '15'\n      }\n    ],\n    edges: [\n      {\n        v: '0',\n        w: '1'\n      },\n      {\n        v: '0',\n        w: '2'\n      },\n      {\n        v: '0',\n        w: '3'\n      },\n      {\n        v: '0',\n        w: '4'\n      },\n      {\n        v: '0',\n        w: '5'\n      },\n      {\n        v: '0',\n        w: '7'\n      },\n      {\n        v: '0',\n        w: '8'\n      },\n      {\n        v: '0',\n        w: '9'\n      },\n      {\n        v: '0',\n        w: '10'\n      },\n      {\n        v: '0',\n        w: '11'\n      },\n      {\n        v: '0',\n        w: '13'\n      },\n      {\n        v: '0',\n        w: '14'\n      },\n      {\n        v: '0',\n        w: '15'\n      },\n      {\n        v: '2',\n        w: '3'\n      },\n      {\n        v: '4',\n        w: '5'\n      },\n      {\n        v: '4',\n        w: '6'\n      },\n      {\n        v: '5',\n        w: '6'\n      },\n      {\n        v: '7',\n        w: '13'\n      },\n      {\n        v: '8',\n        w: '14'\n      },\n      {\n        v: '9',\n        w: '10'\n      },\n      {\n        v: '10',\n        w: '12'\n      },\n      {\n        v: '12',\n        w: '13'\n      }\n    ],\n    compound: {\n      group0: ['4', '5', '15']\n    }\n  };\n  rankDirection: NzRankDirection = 'TB';\n  graphData = new NzGraphData(this.testDef);\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  expand(name: string): void {\n    this.graphData.expand(name);\n  }\n\n  collapse(name: string): void {\n    this.graphData.collapse(name);\n  }\n\n  expandAll(): void {\n    this.graphData.expandAll();\n  }\n\n  collapseAll(): void {\n    this.graphData.collapseAll();\n  }\n\n  layout(): void {\n    this.nzGraphComponent.autoFit();\n  }\n}\n","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../share/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-graph',\n  preserveWhitespaces: false,\n  templateUrl  : './en.html'\n})\nexport class NzDemoGraphEnComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes!: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-graph-demo-customized\" nzTitle=\"Custom graph node\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Hierarchy Graph<span class=\"subtitle\"></span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" aria-label=\"Edit this page on Github\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/graph/doc/index.en-US.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<blockquote style=\"border-color: #faad14;\">\n<p>NG-ZORRO experiments are features that are released but not yet considered stable or production ready</p>\n<p>Developers and users can opt-in into these features before they are fully released. But <strong>breaking changes</strong> may occur with any release.</p>\n</blockquote><h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><p>When you want to use graph in Angular.</p>\n<h3 id=\"import-module\"><span>Import Module</span><a onclick=\"window.location.hash = 'import-module'\" class=\"anchor\">#</a></h3><blockquote>\n<p>Now, the graph depends on d3-drag d3-zoom d3-selection d3-transition d3-shape (may be removed in next major version)</p>\n</blockquote>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzGraphModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/graph'</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"import-style\"><span>Import Style</span><a onclick=\"window.location.hash = 'import-style'\" class=\"anchor\">#</a></h3><pre class=\"language-less\"><code><span class=\"token variable\">@import</span> <span class=\"token string\">\"node_modules/ng-zorro-antd/graph/style/entry.less\"</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>Examples</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"Expand All Code\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"8\">\n\t<div nz-col [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"Custom graph node\"\n  [nzId]=\"'components-graph-demo-customized'\"\n  nzSelector=\"nz-demo-graph-customized\"\n  [nzLink]=\"'components-graph-demo-customized'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:graph-customized <name>\"\n  nzComponentName=\"NzDemoGraphCustomizedComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/graph/demo/customized.md'\">\n\t<nz-demo-graph-customized demo></nz-demo-graph-customized>\n\t<div intro ngNonBindable>\n\t\t<p>Custom node style of graph.</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div><section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><p>Dependencies:</p>\n<pre class=\"language-sh\"><code>npm install <span class=\"token variable\">@nx</span><span class=\"token operator\">-</span>component<span class=\"token operator\">/</span>hierarchy<span class=\"token operator\">-</span>graph <span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span> npm install d3<span class=\"token operator\">-</span><span class=\"token operator\">*</span> <span class=\"token variable\">@types</span><span class=\"token operator\">/</span>d3</code></pre>\n<h3 id=\"nz-graph\"><span>nz-graph</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-graph'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzGraphData]</code></td>\n<td>Data source</td>\n<td><code>NzGraphData(data: NzGraphDataDef?)</code></td>\n<td>``</td>\n</tr>\n<tr>\n<td><code>[nzRankDirection]</code></td>\n<td>Graph Direction</td>\n<td><code>TB</code> | <code>BT</code> | <code>LR</code> | <code>RL</code></td>\n<td><code>LR</code></td>\n</tr>\n<tr>\n<td><code>[nzAutoFit]</code></td>\n<td>Whether to automatically adjust the height of the node, the default equal height</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"methods\"><span>Methods</span><a onclick=\"window.location.hash = 'methods'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>autoFit()</code></td>\n<td>Move graph to center</td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphdata\"><span>NzGraphData</span><a onclick=\"window.location.hash = 'nzgraphdata'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>setData</code></td>\n<td>set data source</td>\n<td><code>(data: NzGraphDataDef) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>toggle</code></td>\n<td>toggle group node</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>expand</code></td>\n<td>expand group node</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>expandAll</code></td>\n<td>expand all group nodes</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>collapse</code></td>\n<td>collapse group node</td>\n<td><code>(nodeName: string) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>isExpand</code></td>\n<td>get if expanded of node</td>\n<td><code>(nodeName: string) =&gt; boolean</code></td>\n</tr>\n<tr>\n<td><code>expansionModel</code></td>\n<td>model of expanded nodes&#39; info</td>\n<td><code>SelectionModel&lt;string&gt;</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphdatadef\"><span>NzGraphDataDef</span><a onclick=\"window.location.hash = 'nzgraphdatadef'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>nodes</code></td>\n<td>nodes</td>\n<td><code>Array&lt;&#123; id: number|string; label?: string; width?: number; height?: number; [key: string]: any; &#125;&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>edges</code></td>\n<td>edges</td>\n<td><code>Array&lt;&#123; v: number|string; w: number|string; [key: string]: any; &#125;&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>compound</code></td>\n<td>group</td>\n<td><code>&#123; [parent: string]: string[]; &#125;</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphnode\"><span>NzGraphNode</span><a onclick=\"window.location.hash = 'nzgraphnode'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>id</code></td>\n<td>id</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>label?</code></td>\n<td>node content</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>node name</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>node type(group: 0, node: 1)</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>parentNodeName</code></td>\n<td>parentNode name</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>coreBox</code></td>\n<td>coreBox</td>\n<td><code>&#123; width: number;  height: number; &#125;</code></td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>x-offset</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>y-offset</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>width</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>height</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>[key: string]</code></td>\n<td>user inputs</td>\n<td><code>any</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphedge\"><span>NzGraphEdge</span><a onclick=\"window.location.hash = 'nzgraphedge'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>id</code></td>\n<td>id</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>v</code></td>\n<td>source node</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>w</code></td>\n<td>target node</td>\n<td><code>number|string</code></td>\n</tr>\n<tr>\n<td><code>label?</code></td>\n<td>edge content</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>points</code></td>\n<td>points</td>\n<td><code>Array&lt;&#123; x: number; y: number; &#125;&gt;</code></td>\n</tr>\n<tr>\n<td><code>adjoiningEdge</code></td>\n<td>adjoiningEdge</td>\n<td><code>&#123; v: string; w: string; points: points&gt;; &#125; | null</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"nzgraphgroupnode\"><span>NzGraphGroupNode</span><a onclick=\"window.location.hash = 'nzgraphgroupnode'\" class=\"anchor\">#</a></h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>expanded</code></td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>nodes</code></td>\n<td><code>Array&lt;NzGraphNode|NzGraphGroupNode&gt;</code></td>\n</tr>\n<tr>\n<td><code>edges</code></td>\n<td><code>NzGraphEdge[]</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nzgraphnode\"><span>nzGraphNode</span><a onclick=\"window.location.hash = 'nzgraphnode'\" class=\"anchor\">#</a></h3><p>Customize the graph node template</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-graph</span> <span class=\"token attr-name\">[nzGraphData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-container</span> <span class=\"token attr-name\">*nzGraphNode</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let node<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>&#123;&#123; node.name &#125;&#125; - &#123;&#123; node.label &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-container</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-graph</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"more\"><span>More</span><a onclick=\"window.location.hash = 'more'\" class=\"anchor\">#</a></h2><ul>\n<li><a href=\"https://www.npmjs.com/package/@nx-component/hierarchy-graph\" target=\"_blank\" rel=\"noopener\">@nx-component/hierarchy-graph</a>: Auto-layout graph library</li>\n<li><a href=\"https://github.com/angular/components/blob/master/src/cdk/collections/selection-model.ts\" target=\"_blank\" rel=\"noopener\">SelectionModel</a></li>\n</ul>\n</section></article>","import { NzGraphModule } from 'ng-zorro-antd/graph';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\n\nexport const moduleList = [ NzGraphModule, NzButtonModule, NzIconModule, NzRadioModule ];\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ShareModule } from '../share/share.module';\nimport { moduleList } from './module';\n\nimport { NzDemoGraphCustomizedComponent } from './customized';\nimport { NzDemoGraphZhComponent } from './zh.component';\nimport { NzDemoGraphEnComponent } from './en.component';\n\n\n@NgModule({\n  imports     : [\n    ShareModule,\n    ...moduleList,\n    RouterModule.forChild([\n      { path: 'en', component: NzDemoGraphEnComponent },\n      { path: 'zh', component: NzDemoGraphZhComponent }\n    ])\n  ],\n  declarations: [\n\t\tNzDemoGraphCustomizedComponent,\n\t\tNzDemoGraphZhComponent,\n\t\tNzDemoGraphEnComponent,\n\n  ],\nentryComponents: [\n  \n]\n})\nexport class NzDemoGraphModule {\n\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Subject, forkJoin } from 'rxjs';\nimport { map, take, takeUntil, finalize, tap } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Component, ElementRef, NgZone, Input, EventEmitter, Renderer2, Output, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ViewChild, ViewChildren, ContentChild, TemplateRef, NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { line, curveBasis } from 'd3-shape';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom, zoomTransform } from 'd3-zoom';\nimport { style, query, group, animate, AnimationBuilder } from '@angular/animations';\nimport { __decorate, __metadata } from 'tslib';\nimport { buildGraph } from '@nx-component/hierarchy-graph';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/animations';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\n\nconst _c0 = [\"nz-graph-defs\", \"\"];\nconst _c1 = [\"container\"];\nconst _c2 = [\"zoom\"];\nconst _c3 = [\"*\"];\nfunction NzGraphComponent_nz_graph_minimap_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-graph-minimap\");\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_3__svg_text_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"text\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"textPath\", 14);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const edge_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"href\", \"#\" + edge_r7.v + \"--\" + edge_r7.w);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(edge_r7.label);\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"g\", 10);\n    ɵngcc0.ɵɵelement(1, \"path\", 11);\n    ɵngcc0.ɵɵtemplate(2, NzGraphComponent_ng_template_5__svg_g_3__svg_text_2_Template, 3, 2, \"text\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const edge_r7 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"edge\", edge_r7);\n    ɵngcc0.ɵɵattribute(\"marker-end\", ctx_r5.nzShowArrow ? \"url(#edge-end-arrow)\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", edge_r7.label);\n} }\nconst _c4 = function (a0) { return { $implicit: a0 }; };\nfunction NzGraphComponent_ng_template_5__svg_g_5__xhtml_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 2);\n} if (rf & 2) {\n    const node_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.customGraphNodeTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c4, node_r11));\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5__xhtml_i_3_Template(rf, ctx) { if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"i\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5__xhtml_i_3_Template__xhtml_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const node_r11 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.toggleNode(node_r11.name, node_r11.expanded); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"nzType\", node_r11.expanded ? \"minus\" : \"plus\");\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5__xhtml_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(node_r11.label);\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 22);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵtemplate(3, NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5__xhtml_i_3_Template, 1, 1, \"i\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5__xhtml_div_4_Template, 2, 1, \"div\", 24);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", node_r11.name, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", node_r11.type === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !node_r11.expanded);\n} }\nconst _c5 = function (a0) { return { renderInfo: a0, type: \"sub\" }; };\nfunction NzGraphComponent_ng_template_5__svg_g_5__svg_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementContainer(0, 2);\n} if (rf & 2) {\n    const node_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r1 = ɵngcc0.ɵɵreference(6);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c5, node_r11));\n} }\nfunction NzGraphComponent_ng_template_5__svg_g_5_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"g\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"g\", 16);\n    ɵngcc0.ɵɵlistener(\"nodeClick\", function NzGraphComponent_ng_template_5__svg_g_5_Template__svg_g_nodeClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.clickNode($event); });\n    ɵngcc0.ɵɵelementStart(2, \"foreignObject\", 17);\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(4, NzGraphComponent_ng_template_5__svg_g_5__xhtml_ng_container_4_Template, 1, 4, \"ng-container\", 19);\n    ɵngcc0.ɵɵtemplate(5, NzGraphComponent_ng_template_5__svg_g_5__xhtml_div_5_Template, 5, 3, \"div\", 20);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, NzGraphComponent_ng_template_5__svg_g_5__svg_ng_container_6_Template, 1, 4, \"ng-container\", 19);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r11 = ctx.$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"display\", node_r11.type === 2 ? \"none\" : null);\n    ɵngcc0.ɵɵclassProp(\"nz-graph-custom-node\", !!ctx_r6.customGraphNodeTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", node_r11);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"width\", node_r11.width)(\"height\", node_r11.height);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.customGraphNodeTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r6.customGraphNodeTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", node_r11.expanded);\n} }\nfunction NzGraphComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"g\");\n    ɵngcc0.ɵɵelementStart(1, \"g\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"g\", 6);\n    ɵngcc0.ɵɵtemplate(3, NzGraphComponent_ng_template_5__svg_g_3_Template, 3, 3, \"g\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"g\", 8);\n    ɵngcc0.ɵɵtemplate(5, NzGraphComponent_ng_template_5__svg_g_5_Template, 7, 10, \"g\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const renderInfo_r3 = ctx.renderInfo;\n    const type_r4 = ctx.type;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"transform\", type_r4 === \"sub\" ? ctx_r2.subGraphTransform(renderInfo_r3) : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"transform\", ctx_r2.coreTransform(renderInfo_r3));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", renderInfo_r3.edges)(\"ngForTrackBy\", ctx_r2.edgeTrackByFun);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.typedNodes(renderInfo_r3.nodes))(\"ngForTrackBy\", ctx_r2.nodeTrackByFun);\n} }\nconst _c6 = function (a0) { return { renderInfo: a0, type: \"root\" }; };\nfunction nzTypeDefinition() {\n    return item => item;\n}\nconst NZ_GRAPH_LAYOUT_SETTING = {\n    animation: {\n        /** Default duration for graph animations in ms. */\n        duration: 250\n    },\n    graph: {\n        /** Graph parameter for metanode. */\n        meta: {\n            /**\n             * Dagre's nodesep param - number of pixels that\n             * separate nodes horizontally in the layout.\n             *\n             * See https://github.com/cpettitt/dagre/wiki#configuring-the-layout\n             */\n            nodeSep: 50,\n            /**\n             * Dagre's ranksep param - number of pixels\n             * between each rank in the layout.\n             *\n             * See https://github.com/cpettitt/dagre/wiki#configuring-the-layout\n             */\n            rankSep: 40,\n            /**\n             * Dagre's edgesep param - number of pixels that separate\n             * edges horizontally in the layout.\n             */\n            edgeSep: 5\n        },\n        /**\n         * Padding is used to correctly position the graph SVG inside of its parent\n         * element. The padding amounts are applied using an SVG transform of X and\n         * Y coordinates.\n         */\n        padding: { paddingTop: 10, paddingLeft: 0 }\n    },\n    subscene: {\n        meta: {\n            paddingTop: 20,\n            paddingBottom: 20,\n            paddingLeft: 20,\n            paddingRight: 20,\n            /**\n             * Used to leave room for the label on top of the highest node in\n             * the groupCore graph.\n             */\n            labelHeight: 20,\n            /** X-space between each extracted node and the groupCore graph. */\n            extractXOffset: 0,\n            /** Y-space between each extracted node. */\n            extractYOffset: 0\n        }\n    },\n    nodeSize: {\n        /** Size of meta nodes. */\n        meta: {\n            radius: 2,\n            width: 160,\n            maxLabelWidth: 0,\n            /** A scale for the node's height based on number of nodes inside */\n            // Hack - set this as an any type to avoid issues in exporting a type\n            // from an external module.\n            height: 100,\n            /** The radius of the circle denoting the expand button. */\n            expandButtonRadius: 3\n        },\n        /** Size of op nodes. */\n        op: {\n            width: 160,\n            height: 100,\n            radius: 1,\n            labelOffset: 10,\n            maxLabelWidth: 40\n        },\n        /** Size of bridge nodes. */\n        bridge: {\n            // NOTE: bridge nodes will normally be invisible, but they must\n            // take up some space so that the layout step leaves room for\n            // their edges.\n            width: 10,\n            height: 10,\n            radius: 2,\n            labelOffset: 0\n        }\n    },\n    shortcutSize: {\n        /** Size of shortcuts for op nodes */\n        op: { width: 10, height: 4 },\n        /** Size of shortcuts for meta nodes */\n        meta: { width: 12, height: 4, radius: 1 },\n        /** Size of shortcuts for series nodes */\n        series: {\n            width: 14,\n            height: 4\n        }\n    },\n    annotations: {\n        /** Maximum possible width of the bounding box for in annotations */\n        inboxWidth: 50,\n        /** Maximum possible width of the bounding box for out annotations */\n        outboxWidth: 50,\n        /** X-space between the shape and each annotation-node. */\n        xOffset: 10,\n        /** Y-space between each annotation-node. */\n        yOffset: 3,\n        /** X-space between each annotation-node and its label. */\n        labelOffset: 2,\n        /** Defines the max width for annotation label */\n        maxLabelWidth: 120\n    },\n    constant: { size: { width: 4, height: 4 } },\n    minimap: {\n        /** The maximum width/height the minimap can have. */\n        size: 150\n    }\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphData {\n    constructor(source) {\n        var _a;\n        this._data = new BehaviorSubject({});\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n        if (source) {\n            (_a = this.expansionModel) === null || _a === void 0 ? void 0 : _a.clear();\n            this.dataSource = source;\n            this._data.next(source);\n        }\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(nodeName) {\n        this.expansionModel.toggle(nodeName);\n    }\n    /** Expands one single data node. */\n    expand(nodeName) {\n        this.expansionModel.select(nodeName);\n    }\n    /** Collapses one single data node. */\n    collapse(nodeName) {\n        this.expansionModel.deselect(nodeName);\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(nodeName) {\n        return this.expansionModel.isSelected(nodeName);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    expandAll() {\n        this.expansionModel.select(...Object.keys(this._data.value.compound || {}));\n    }\n    setData(data) {\n        var _a;\n        (_a = this.expansionModel) === null || _a === void 0 ? void 0 : _a.clear();\n        this.dataSource = data;\n        this._data.next(data);\n    }\n    connect() {\n        const changes = [this._data, this.expansionModel.changed];\n        return merge(...changes).pipe(map(() => this._data.value));\n    }\n    disconnect() {\n        // do nothing for now\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCustomGraphNodeDirective {\n}\n/** @nocollapse */\nNzCustomGraphNodeDirective.ɵfac = function NzCustomGraphNodeDirective_Factory(t) { return new (t || NzCustomGraphNodeDirective)(); };\n/** @nocollapse */\nNzCustomGraphNodeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzCustomGraphNodeDirective, selectors: [[\"\", \"nzGraphNode\", \"\"]], exportAs: [\"nzGraphNode\"] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphDefsComponent {\n    constructor() { }\n}\n/** @nocollapse */\nNzGraphDefsComponent.ɵfac = function NzGraphDefsComponent_Factory(t) { return new (t || NzGraphDefsComponent)(); };\n/** @nocollapse */\nNzGraphDefsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzGraphDefsComponent, selectors: [[\"defs\", \"nz-graph-defs\", \"\"]], attrs: _c0, decls: 2, vars: 0, consts: [[\"id\", \"edge-end-arrow\", \"viewBox\", \"1 0 20 20\", \"refX\", \"9\", \"refY\", \"3.5\", \"markerWidth\", \"10\", \"markerHeight\", \"10\", \"orient\", \"auto\", 1, \"nz-graph-edge-marker\"], [\"points\", \"0 0, 10 3.5, 0 7\"]], template: function NzGraphDefsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"marker\", 0);\n        ɵngcc0.ɵɵelement(1, \"polygon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nNzGraphDefsComponent.ctorParameters = () => [];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphEdgeDirective {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.line = line()\n            .x(d => d.x)\n            .y(d => d.y)\n            .curve(curveBasis);\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('nz-graph-edge-line');\n        this.el = this.elementRef.nativeElement;\n    }\n    get id() {\n        var _a;\n        return ((_a = this.edge) === null || _a === void 0 ? void 0 : _a.id) || `${this.edge.v}--${this.edge.w}`;\n    }\n    ngOnInit() {\n        this.setElementData();\n    }\n    setLine() {\n        const adjoiningPath = this.getAdjoiningEdgeElement();\n        if (adjoiningPath) {\n            const adjoiningPoint = adjoiningPath\n                .getPointAtLength(this.edge.inbound ? adjoiningPath.getTotalLength() : 0)\n                .matrixTransform(adjoiningPath.getCTM())\n                .matrixTransform(this.el.getCTM().inverse());\n            const points = [...this.edge.points];\n            const index = this.edge.inbound ? 0 : points.length - 1;\n            points[index].x = adjoiningPoint.x;\n            points[index].y = adjoiningPoint.y;\n            this.setPath(this.line(points));\n        }\n        else {\n            this.setPath(this.line(this.edge.points));\n        }\n    }\n    setPath(d) {\n        this.el.setAttribute('d', d);\n    }\n    setElementData() {\n        this.el.setAttribute('data-edge', `${this.edge.v}--${this.edge.w}`);\n        this.el.setAttribute('data-v', `${this.edge.v}`);\n        this.el.setAttribute('data-w', `${this.edge.w}`);\n    }\n    getAdjoiningEdgeElement() {\n        const adjoiningEdge = this.edge.adjoiningEdge;\n        if (adjoiningEdge) {\n            return document.querySelector(`path[data-edge=\"${adjoiningEdge.v}--${adjoiningEdge.w}\"]`);\n        }\n        else {\n            return null;\n        }\n    }\n    ngOnChanges(_changes) {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.setLine();\n        });\n    }\n}\n/** @nocollapse */\nNzGraphEdgeDirective.ɵfac = function NzGraphEdgeDirective_Factory(t) { return new (t || NzGraphEdgeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nNzGraphEdgeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzGraphEdgeDirective, selectors: [[\"path\", \"nz-graph-edge\", \"\"]], hostVars: 1, hostBindings: function NzGraphEdgeDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { edge: \"edge\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNzGraphEdgeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nNzGraphEdgeDirective.propDecorators = {\n    edge: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst FRAC_VIEWPOINT_AREA = 0.8;\nclass Minimap {\n    constructor(svg, zoomG, mainZoom, minimap, maxWandH, labelPadding) {\n        this.svg = svg;\n        this.labelPadding = labelPadding;\n        this.zoomG = zoomG;\n        this.mainZoom = mainZoom;\n        this.maxWandH = maxWandH;\n        const minimapElement = select(minimap);\n        const minimapSvgElement = minimapElement.select('svg');\n        const viewpointElement = minimapSvgElement.select('rect');\n        this.canvas = minimapElement.select('canvas.viewport').node();\n        this.canvasRect = this.canvas.getBoundingClientRect();\n        const handleEvent = (event) => {\n            const minimapOffset = this.minimapOffset();\n            const width = Number(viewpointElement.attr('width'));\n            const height = Number(viewpointElement.attr('height'));\n            const clickCoords = pointer(event, minimapSvgElement.node());\n            this.viewpointCoord.x = clickCoords[0] - width / 2 - minimapOffset.x;\n            this.viewpointCoord.y = clickCoords[1] - height / 2 - minimapOffset.y;\n            this.updateViewpoint();\n        };\n        this.viewpointCoord = { x: 0, y: 0 };\n        const dragEvent = drag().subject(Object).on('drag', handleEvent);\n        viewpointElement.datum(this.viewpointCoord).call(dragEvent);\n        // Make the minimap clickable.\n        minimapSvgElement.on('click', event => {\n            if (event.defaultPrevented) {\n                // This click was part of a drag event, so suppress it.\n                return;\n            }\n            handleEvent(event);\n        });\n        this.viewpoint = viewpointElement.node();\n        this.minimapSvg = minimapSvgElement.node();\n        this.minimap = minimap;\n        this.canvasBuffer = minimapElement.select('canvas.buffer').node();\n        this.update();\n    }\n    minimapOffset() {\n        return {\n            x: (this.canvasRect.width - this.minimapSize.width) / 2,\n            y: (this.canvasRect.height - this.minimapSize.height) / 2\n        };\n    }\n    updateViewpoint() {\n        // Update the coordinates of the viewpoint rectangle.\n        select(this.viewpoint).attr('x', this.viewpointCoord.x).attr('y', this.viewpointCoord.y);\n        // Update the translation vector of the main svg to reflect the\n        // new viewpoint.\n        const mainX = (-this.viewpointCoord.x * this.scaleMain) / this.scaleMinimap;\n        const mainY = (-this.viewpointCoord.y * this.scaleMain) / this.scaleMinimap;\n        select(this.svg).call(this.mainZoom.transform, zoomIdentity.translate(mainX, mainY).scale(this.scaleMain));\n    }\n    update() {\n        let sceneSize = null;\n        try {\n            // Get the size of the entire scene.\n            sceneSize = this.zoomG.getBBox();\n            if (sceneSize.width === 0) {\n                // There is no scene anymore. We have been detached from the dom.\n                return;\n            }\n        }\n        catch (e) {\n            // Firefox produced NS_ERROR_FAILURE if we have been\n            // detached from the dom.\n            return;\n        }\n        const svgSelection = select(this.svg);\n        // Read all the style rules in the document and embed them into the svg.\n        // The svg needs to be self contained, i.e. all the style rules need to be\n        // embedded so the canvas output matches the origin.\n        let stylesText = '';\n        for (const k of new Array(document.styleSheets.length).keys()) {\n            try {\n                const cssRules = document.styleSheets[k].cssRules || document.styleSheets[k].rules;\n                if (cssRules == null) {\n                    continue;\n                }\n                for (const i of new Array(cssRules.length).keys()) {\n                    // Remove tf-* selectors from the styles.\n                    stylesText += cssRules[i].cssText.replace(/ ?tf-[\\w-]+ ?/g, '') + '\\n';\n                }\n            }\n            catch (e) {\n                if (e.name !== 'SecurityError') {\n                    throw e;\n                }\n            }\n        }\n        // Temporarily add the css rules to the main svg.\n        const svgStyle = svgSelection.append('style');\n        svgStyle.text(stylesText);\n        // Temporarily remove the zoom/pan transform from the main svg since we\n        // want the minimap to show a zoomed-out and centered view.\n        const zoomGSelection = select(this.zoomG);\n        const zoomTransform = zoomGSelection.attr('transform');\n        zoomGSelection.attr('transform', null);\n        // Since we add padding, account for that here.\n        sceneSize.height += this.labelPadding * 2;\n        sceneSize.width += this.labelPadding * 2;\n        // Temporarily assign an explicit width/height to the main svg, since\n        // it doesn't have one (uses flex-box), but we need it for the canvas\n        // to work.\n        svgSelection.attr('width', sceneSize.width).attr('height', sceneSize.height);\n        // Since the content inside the svg changed (e.g. a node was expanded),\n        // the aspect ratio have also changed. Thus, we need to update the scale\n        // factor of the minimap. The scale factor is determined such that both\n        // the width and height of the minimap are <= maximum specified w/h.\n        this.scaleMinimap = this.maxWandH / Math.max(sceneSize.width, sceneSize.height);\n        this.minimapSize = {\n            width: sceneSize.width * this.scaleMinimap,\n            height: sceneSize.height * this.scaleMinimap\n        };\n        const minimapOffset = this.minimapOffset();\n        // Update the size of the minimap's svg, the buffer canvas and the\n        // viewpoint rect.\n        select(this.minimapSvg).attr(this.minimapSize);\n        select(this.canvasBuffer).attr(this.minimapSize);\n        if (this.translate != null && this.zoom != null) {\n            // Update the viewpoint rectangle shape since the aspect ratio of the\n            // map has changed.\n            requestAnimationFrame(() => this.zoom());\n        }\n        // Serialize the main svg to a string which will be used as the rendering\n        // content for the canvas.\n        const svgXml = new XMLSerializer().serializeToString(this.svg);\n        // Now that the svg is serialized for rendering, remove the temporarily\n        // assigned styles, explicit width and height and bring back the pan/zoom\n        // transform.\n        svgStyle.remove();\n        svgSelection.attr('width', '100%').attr('height', '100%');\n        zoomGSelection.attr('transform', zoomTransform);\n        const image = new Image();\n        image.onload = () => {\n            // Draw the svg content onto the buffer canvas.\n            const context = this.canvasBuffer.getContext('2d');\n            context.clearRect(0, 0, this.canvasBuffer.width, this.canvasBuffer.height);\n            context.drawImage(image, minimapOffset.x, minimapOffset.y, this.minimapSize.width, this.minimapSize.height);\n            requestAnimationFrame(() => {\n                // Hide the old canvas and show the new buffer canvas.\n                select(this.canvasBuffer).style('display', 'block');\n                select(this.canvas).style('display', 'none');\n                // Swap the two canvases.\n                [this.canvas, this.canvasBuffer] = [this.canvasBuffer, this.canvas];\n            });\n        };\n        image.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgXml);\n    }\n    /**\n     * Handles changes in zooming/panning. Should be called from the main svg\n     * to notify that a zoom/pan was performed and this minimap will update it's\n     * viewpoint rectangle.\n     * @param transform\n     */\n    zoom(transform) {\n        if (this.scaleMinimap == null) {\n            // Scene is not ready yet.\n            return;\n        }\n        // Update the new translate and scale params, only if specified.\n        if (transform) {\n            this.translate = [transform.x, transform.y];\n            this.scaleMain = transform.k;\n        }\n        // Update the location of the viewpoint rectangle.\n        const svgRect = this.svg.getBoundingClientRect();\n        const minimapOffset = this.minimapOffset();\n        const viewpointSelection = select(this.viewpoint);\n        this.viewpointCoord.x = (-this.translate[0] * this.scaleMinimap) / this.scaleMain;\n        this.viewpointCoord.y = (-this.translate[1] * this.scaleMinimap) / this.scaleMain;\n        const viewpointWidth = (svgRect.width * this.scaleMinimap) / this.scaleMain;\n        const viewpointHeight = (svgRect.height * this.scaleMinimap) / this.scaleMain;\n        viewpointSelection\n            .attr('x', this.viewpointCoord.x + minimapOffset.x)\n            .attr('y', this.viewpointCoord.y + minimapOffset.y)\n            .attr('width', viewpointWidth)\n            .attr('height', viewpointHeight);\n        // Show/hide the minimap depending on the viewpoint area as fraction of the\n        // whole minimap.\n        const mapWidth = this.minimapSize.width;\n        const mapHeight = this.minimapSize.height;\n        const x = this.viewpointCoord.x;\n        const y = this.viewpointCoord.y;\n        const w = Math.min(Math.max(0, x + viewpointWidth), mapWidth) - Math.min(Math.max(0, x), mapWidth);\n        const h = Math.min(Math.max(0, y + viewpointHeight), mapHeight) - Math.min(Math.max(0, y), mapHeight);\n        const fracIntersect = (w * h) / (mapWidth * mapHeight);\n        if (fracIntersect < FRAC_VIEWPOINT_AREA) {\n            this.minimap.classList.remove('hidden');\n        }\n        else {\n            this.minimap.classList.add('hidden');\n        }\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphMinimapComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('nz-graph-minimap');\n    }\n    ngOnInit() { }\n    init(svgEle, zoomEle, zoomBehavior) {\n        this.minimap = new Minimap(svgEle, zoomEle, zoomBehavior, this.elementRef.nativeElement, NZ_GRAPH_LAYOUT_SETTING.minimap.size, NZ_GRAPH_LAYOUT_SETTING.subscene.meta.labelHeight);\n    }\n    zoom(transform) {\n        if (this.minimap) {\n            this.minimap.zoom(transform);\n        }\n    }\n    update() {\n        if (this.minimap) {\n            this.minimap.update();\n        }\n    }\n}\n/** @nocollapse */\nNzGraphMinimapComponent.ɵfac = function NzGraphMinimapComponent_Factory(t) { return new (t || NzGraphMinimapComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n/** @nocollapse */\nNzGraphMinimapComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzGraphMinimapComponent, selectors: [[\"nz-graph-minimap\"]], decls: 10, vars: 0, consts: [[\"id\", \"minimapDropShadow\", \"x\", \"-20%\", \"y\", \"-20%\", \"width\", \"150%\", \"height\", \"150%\"], [\"result\", \"offOut\", \"in\", \"SourceGraphic\", \"dx\", \"1\", \"dy\", \"1\"], [\"result\", \"matrixOut\", \"in\", \"offOut\", \"type\", \"matrix\", \"values\", \"0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.5 0\"], [\"result\", \"blurOut\", \"in\", \"matrixOut\", \"stdDeviation\", \"2\"], [\"in\", \"SourceGraphic\", \"in2\", \"blurOut\", \"mode\", \"normal\"], [1, \"viewport\"], [1, \"buffer\"]], template: function NzGraphMinimapComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\");\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"filter\", 0);\n        ɵngcc0.ɵɵelement(3, \"feOffset\", 1);\n        ɵngcc0.ɵɵelement(4, \"feColorMatrix\", 2);\n        ɵngcc0.ɵɵelement(5, \"feGaussianBlur\", 3);\n        ɵngcc0.ɵɵelement(6, \"feBlend\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"rect\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(8, \"canvas\", 5);\n        ɵngcc0.ɵɵelement(9, \"canvas\", 6);\n    } }, encapsulation: 2 });\nNzGraphMinimapComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphNodeDirective {\n    constructor(el, builder, renderer2) {\n        this.el = el;\n        this.builder = builder;\n        this.renderer2 = renderer2;\n        this.nodeClick = new EventEmitter();\n        this.animationInfo = null;\n        this.animationPlayer = null;\n    }\n    onTriggerClick(event) {\n        event.preventDefault();\n        this.nodeClick.emit(this.node);\n    }\n    makeAnimation(isFirstChange = false) {\n        if (this.animationPlayer) {\n            this.animationPlayer.destroy();\n        }\n        let animationFactory;\n        const cur = this.getAnimationInfo();\n        const pre = Object.assign({}, this.animationInfo);\n        if (isFirstChange) {\n            animationFactory = this.builder.build([\n                style({ transform: `translate(${cur.x}px, ${cur.y}px)` }),\n                query('.nz-graph-node-rect', [\n                    style({\n                        width: `${cur.width}px`,\n                        height: `${cur.height}px`\n                    })\n                ])\n            ]);\n        }\n        else {\n            animationFactory = this.builder.build([\n                style({ transform: `translate(${pre.x}px, ${pre.y}px)` }),\n                query('.nz-graph-node-rect', [\n                    style({\n                        width: `${pre.width}px`,\n                        height: `${pre.height}px`\n                    })\n                ]),\n                group([\n                    query('.nz-graph-node-rect', [\n                        animate('150ms ease-out', style({\n                            width: `${cur.width}px`,\n                            height: `${cur.height}px`\n                        }))\n                    ]),\n                    animate('150ms ease-out', style({ transform: `translate(${cur.x}px, ${cur.y}px)` }))\n                ])\n            ]);\n        }\n        const done$ = new Subject();\n        this.animationInfo = cur;\n        this.animationPlayer = animationFactory.create(this.el.nativeElement);\n        this.animationPlayer.play();\n        this.animationPlayer.onDone(() => {\n            // Need this for canvas for now.\n            this.renderer2.setAttribute(this.el.nativeElement, 'transform', `translate(${cur.x}, ${cur.y})`);\n            done$.next();\n            done$.complete();\n        });\n        return done$.asObservable();\n    }\n    getAnimationInfo() {\n        const { x, y } = this.nodeTransform();\n        return {\n            width: this.node.width,\n            height: this.node.height,\n            x,\n            y\n        };\n    }\n    nodeTransform() {\n        const x = this.computeCXPositionOfNodeShape() - this.node.width / 2;\n        const y = this.node.y - this.node.height / 2;\n        return { x, y };\n    }\n    computeCXPositionOfNodeShape() {\n        if (this.node.expanded) {\n            return this.node.x;\n        }\n        return this.node.x - this.node.width / 2 + this.node.coreBox.width / 2;\n    }\n    ngAfterViewInit() {\n        this.makeAnimation(true);\n    }\n}\n/** @nocollapse */\nNzGraphNodeDirective.ɵfac = function NzGraphNodeDirective_Factory(t) { return new (t || NzGraphNodeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AnimationBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\n/** @nocollapse */\nNzGraphNodeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzGraphNodeDirective, selectors: [[\"g\", \"nz-graph-node\", \"\"]], hostVars: 7, hostBindings: function NzGraphNodeDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzGraphNodeDirective_click_HostBindingHandler($event) { return ctx.onTriggerClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.node.id || ctx.node.name);\n        ɵngcc0.ɵɵclassProp(\"nz-graph-node-expanded\", ctx.node.expanded)(\"nz-graph-group-node\", ctx.node.type === 0)(\"nz-graph-base-node\", ctx.node.type === 1);\n    } }, inputs: { node: \"node\" }, outputs: { nodeClick: \"nodeClick\" } });\nNzGraphNodeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AnimationBuilder },\n    { type: Renderer2 }\n];\nNzGraphNodeDirective.propDecorators = {\n    node: [{ type: Input }],\n    nodeClick: [{ type: Output }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzGraphSvgContainerComponent {\n    constructor(cdr, elementRef) {\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.maxZoomLevel = 10;\n        this.minZoomLevel = 0.1;\n        this.zoom = 1;\n        this.zoomEvent = new EventEmitter();\n        this.transformEvent = new EventEmitter();\n        this.transform = { x: 0, y: 0, k: 1 };\n        this.transformStyle = '';\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('nz-graph-svg-container');\n    }\n    ngOnInit() {\n        this.bind();\n    }\n    ngOnDestroy() {\n        this.unbind();\n    }\n    bind() {\n        this.svgSelect = select(this.containerElement.nativeElement);\n        this.zoomController = zoom()\n            .scaleExtent([this.minZoomLevel, this.maxZoomLevel])\n            .on('zoom', ({ transform }) => {\n            const { x, y, k } = transform;\n            this.zoom = k;\n            this.zoomEvent.emit(k);\n            this.transform = transform;\n            this.transformEvent.emit(transform);\n            this.transformStyle = `translate(${x} ,${y})scale(${k})`;\n            this.cdr.detectChanges();\n        });\n        this.svgSelect.call(this.zoomController, zoomIdentity.translate(0, 0).scale(this.zoom));\n    }\n    unbind() {\n        var _a;\n        (_a = this.svgSelect) === null || _a === void 0 ? void 0 : _a.interrupt().selectAll('*').interrupt();\n        if (this.zoomController) {\n            this.zoomController.on('end', null).on('zoom', null);\n            this.transformEvent.complete();\n        }\n    }\n    /**\n     * Zoom to fit\n     */\n    fit(duration = 500, scale = 0.9) {\n        const svgRect = this.containerElement.nativeElement.getBoundingClientRect();\n        let sceneSize = null;\n        try {\n            sceneSize = this.zoomElement.nativeElement.getBBox();\n            if (sceneSize.width === 0) {\n                // There is no scene anymore. We have been detached from the dom.\n                return;\n            }\n        }\n        catch (e) {\n            // Firefox produced NS_ERROR_FAILURE if we have been\n            // detached from the dom.\n            return;\n        }\n        const fitScale = Math.min(svgRect.width / sceneSize.width, svgRect.height / sceneSize.height, 2) * scale;\n        const dx = (svgRect.width - sceneSize.width * fitScale) / 2;\n        const dy = (svgRect.height - sceneSize.height * fitScale) / 2;\n        const params = NZ_GRAPH_LAYOUT_SETTING.graph;\n        const transform = zoomIdentity.translate(dx + params.padding.paddingLeft, dy + params.padding.paddingTop).scale(fitScale);\n        this.svgSelect\n            .transition()\n            .duration(duration)\n            .call(this.zoomController.transform, transform)\n            .on('end.fitted', () => {\n            // Remove the listener for the zoomend event,\n            // so we don't get called at the end of regular zoom events,\n            // just those that fit the graph to screen.\n            this.zoomController.on('end.fitted', null);\n        });\n    }\n    // Move node to center\n    setNodeToCenter(node) {\n        // Make sure this node is under SVG container\n        if (!node || !this.containerElement.nativeElement.contains(node)) {\n            return;\n        }\n        const svgRect = this.containerElement.nativeElement.getBoundingClientRect();\n        const position = this.getRelativePositionInfo(node);\n        const svgTransform = zoomTransform(this.containerElement.nativeElement);\n        const centerX = (position.topLeft.x + position.bottomRight.x) / 2;\n        const centerY = (position.topLeft.y + position.bottomRight.y) / 2;\n        const dx = svgRect.left + svgRect.width / 2 - centerX;\n        const dy = svgRect.top + svgRect.height / 2 - centerY;\n        select(this.containerElement.nativeElement)\n            .transition()\n            .duration(250)\n            .call(this.zoomController.translateBy, dx / svgTransform.k, dy / svgTransform.k);\n    }\n    getRelativePositionInfo(node) {\n        const nodeBox = node.getBBox();\n        const nodeCtm = node.getScreenCTM();\n        let pointTL = this.containerElement.nativeElement.createSVGPoint();\n        let pointBR = this.containerElement.nativeElement.createSVGPoint();\n        pointTL.x = nodeBox.x;\n        pointTL.y = nodeBox.y;\n        pointBR.x = nodeBox.x + nodeBox.width;\n        pointBR.y = nodeBox.y + nodeBox.height;\n        pointTL = pointTL.matrixTransform(nodeCtm);\n        pointBR = pointBR.matrixTransform(nodeCtm);\n        return {\n            topLeft: pointTL,\n            bottomRight: pointBR\n        };\n    }\n}\n/** @nocollapse */\nNzGraphSvgContainerComponent.ɵfac = function NzGraphSvgContainerComponent_Factory(t) { return new (t || NzGraphSvgContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n/** @nocollapse */\nNzGraphSvgContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzGraphSvgContainerComponent, selectors: [[\"nz-graph-svg-container\"]], viewQuery: function NzGraphSvgContainerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zoomElement = _t.first);\n    } }, inputs: { maxZoomLevel: \"maxZoomLevel\", minZoomLevel: \"minZoomLevel\", zoom: \"zoom\" }, outputs: { zoomEvent: \"zoomEvent\", transformEvent: \"transformEvent\" }, exportAs: [\"nzGraphSvgContainer\"], ngContentSelectors: _c3, decls: 6, vars: 1, consts: [[\"version\", \"1.1\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"100%\", \"height\", \"100%\"], [\"container\", \"\"], [\"width\", \"100%\", \"height\", \"100%\", \"fill\", \"transparent\", 1, \"nz-graph-background\"], [1, \"nz-graph-zoom\"], [\"zoom\", \"\"]], template: function NzGraphSvgContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0, 1);\n        ɵngcc0.ɵɵelement(2, \"rect\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"g\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵattribute(\"transform\", ctx.transformStyle);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzGraphSvgContainerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nNzGraphSvgContainerComponent.propDecorators = {\n    containerElement: [{ type: ViewChild, args: ['container', { static: true },] }],\n    zoomElement: [{ type: ViewChild, args: ['zoom', { static: true },] }],\n    maxZoomLevel: [{ type: Input }],\n    minZoomLevel: [{ type: Input }],\n    zoom: [{ type: Input }],\n    zoomEvent: [{ type: Output }],\n    transformEvent: [{ type: Output }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction flattenNodes(renderInfo) {\n    const nodes = [];\n    let edges = [];\n    const dig = (node) => {\n        nodes.push(node);\n        if (node.type === 0) {\n            edges = edges.concat(node.edges);\n            node.nodes.forEach(n => dig(n));\n        }\n    };\n    dig(renderInfo);\n    return [...nodes];\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\nclass NzGraphComponent {\n    constructor(cdr, ngZone, elementRef) {\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.nzRankDirection = 'LR';\n        this.nzShowMinimap = false;\n        this.nzShowArrow = false;\n        this.nzZoom = 1;\n        this.nzAutoSize = false;\n        this.nzGraphInitialized = new EventEmitter();\n        this.nzZoomInit = new EventEmitter();\n        this.nzTransformEvent = new EventEmitter();\n        this.nzNodeClick = new EventEmitter();\n        this.renderInfo = { labelHeight: 0 };\n        this.mapOfNodeAttr = {};\n        this.mapOfEdgeAttr = {};\n        this.typedNodes = nzTypeDefinition();\n        this.layoutSetting = NZ_GRAPH_LAYOUT_SETTING;\n        this.destroy$ = new Subject();\n        this.nodeTrackByFun = (_, node) => node.name;\n        this.edgeTrackByFun = (_, edge) => `${edge.v}-${edge.w}`;\n        this.subGraphTransform = (node) => {\n            const x = node.x - node.coreBox.width / 2.0;\n            const y = node.y - node.height / 2.0 + node.paddingTop / 2.0;\n            return `translate(${x}, ${y})`;\n        };\n        this.coreTransform = (node) => {\n            return `translate(0, ${node.labelHeight})`;\n        };\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('nz-graph');\n    }\n    ngOnInit() {\n        if (this.dataSource !== this.nzGraphData) {\n            this._switchDataSource(this.nzGraphData);\n        }\n    }\n    ngOnChanges(changes) {\n        const { nzAutoFit, nzRankDirection, nzGraphData, nzGraphLayoutSettings } = changes;\n        if (nzGraphLayoutSettings) {\n            Object.assign(this.layoutSetting, this.nzGraphLayoutSettings || {});\n        }\n        if (nzGraphData) {\n            if (this.dataSource !== this.nzGraphData) {\n                this._switchDataSource(this.nzGraphData);\n            }\n        }\n        if ((nzAutoFit && !nzAutoFit.firstChange) || (nzRankDirection && !nzRankDirection.firstChange)) {\n            // Render graph\n            if (this.dataSource.dataSource) {\n                this.renderGraph(this.dataSource.dataSource, {\n                    rankDirection: this.nzRankDirection,\n                    expanded: this.dataSource.expansionModel.selected || []\n                });\n            }\n        }\n        this.cdr.markForCheck();\n    }\n    ngAfterViewInit() {\n        this.autoFit();\n        this.drawMinimap(true);\n    }\n    ngAfterContentChecked() {\n        if (this.dataSource && !this._dataSubscription) {\n            this.observeRenderChanges();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        if (this.dataSource && typeof this.dataSource.disconnect === 'function') {\n            this.dataSource.disconnect();\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * Transform event\n     */\n    triggerTransform($event) {\n        this.nzZoom = $event.k;\n        if (this.minimap) {\n            this.minimap.zoom($event);\n        }\n        this.nzTransformEvent.emit($event);\n        this.cdr.markForCheck();\n    }\n    /**\n     * Emit event\n     */\n    clickNode(node) {\n        this.nzNodeClick.emit(node);\n    }\n    /**\n     * Move graph to center\n     */\n    autoFit() {\n        var _a;\n        if (this.renderInfo) {\n            (_a = this.svgContainerComponent) === null || _a === void 0 ? void 0 : _a.fit(0);\n        }\n    }\n    /**\n     * Refactor\n     */\n    toggleNode(node, expanded) {\n        if (expanded) {\n            // collapse it\n            this.nzGraphData.collapse(node);\n        }\n        else {\n            // expand it\n            this.nzGraphData.expand(node);\n        }\n    }\n    renderGraph(data, options) {\n        const renderInfo = this.buildGraphInfo(data, options);\n        // TODO\n        // Need better performance\n        this.setRenderInfo(renderInfo, false);\n        if (this.nzAutoSize) {\n            this.resizeNodes(renderInfo, options);\n        }\n        this.cdr.detectChanges();\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this.dataSource && typeof this.dataSource.disconnect === 'function') {\n            this.nzGraphData.disconnect();\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        this.dataSource = dataSource;\n        this.observeRenderChanges();\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    observeRenderChanges() {\n        let dataStream;\n        let graphOptions = {\n            rankDirection: this.nzRankDirection\n        };\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect();\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this.destroy$)).subscribe(data => {\n                graphOptions = {\n                    rankDirection: this.nzRankDirection,\n                    expanded: this.nzGraphData.expansionModel.selected\n                };\n                this.renderGraph(data, graphOptions);\n                this.cdr.detectChanges();\n            });\n        }\n        else {\n            throw Error(`A valid data source must be provided.`);\n        }\n    }\n    setRenderInfo(renderInfo, asPatch = true) {\n        if (asPatch) {\n            this.assignRenderInfo(renderInfo);\n        }\n        else {\n            this.renderInfo = renderInfo;\n        }\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.makeNodesAnimation().subscribe();\n        });\n    }\n    buildGraphInfo(data, options) {\n        this.parseInfo(data);\n        const renderInfo = buildGraph(data, options, this.layoutSetting);\n        const dig = (nodes) => {\n            nodes.forEach(node => {\n                if (node.type === 1 && this.mapOfNodeAttr.hasOwnProperty(node.name)) {\n                    Object.assign(node, this.mapOfNodeAttr[node.name]);\n                }\n                else if (node.type === 0) {\n                    node.edges.forEach(edge => {\n                        if (this.mapOfEdgeAttr.hasOwnProperty(`${edge.v}-${edge.w}`)) {\n                            Object.assign(edge, this.mapOfEdgeAttr[`${edge.v}-${edge.w}`]);\n                        }\n                    });\n                    dig(node.nodes);\n                }\n            });\n        };\n        dig(renderInfo.nodes);\n        // Assign data to edges of root graph\n        renderInfo.edges.forEach(edge => {\n            if (this.mapOfEdgeAttr.hasOwnProperty(`${edge.v}-${edge.w}`)) {\n                Object.assign(edge, this.mapOfEdgeAttr[`${edge.v}-${edge.w}`]);\n            }\n        });\n        return renderInfo;\n    }\n    resizeNodes(renderInfo, options) {\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), finalize(() => {\n            this.cdr.detectChanges();\n        }))\n            .subscribe(() => {\n            const dataSource = this.dataSource.dataSource;\n            this.elementRef.nativeElement.querySelectorAll('[nz-graph-node]').forEach((nodeEle) => {\n                const contentEle = nodeEle.querySelector('.nz-graph-node-wrapper');\n                if (contentEle) {\n                    const height = contentEle.getBoundingClientRect().height;\n                    const width = contentEle.getBoundingClientRect().width;\n                    // Element id type is string\n                    const targetNode = flattenNodes(renderInfo).find(n => `${n.name}` === nodeEle.id);\n                    const nodeName = targetNode && targetNode.name;\n                    const node = dataSource.nodes.find(n => n.id === nodeName);\n                    if (node) {\n                        node.height = height / this.nzZoom;\n                        node.width = width / this.nzZoom;\n                    }\n                }\n            });\n            const newRenderInfo = this.buildGraphInfo(dataSource, options);\n            this.setRenderInfo(newRenderInfo, false);\n        });\n    }\n    assignRenderInfo(renderInfo) {\n        this.renderInfo.edges = renderInfo.edges;\n        this.renderInfo.nodes.forEach((node, index) => {\n            Object.assign(node, renderInfo.nodes[index]);\n        });\n    }\n    makeNodesAnimation() {\n        return forkJoin(...this.graphNodes.map(node => node.makeAnimation())).pipe(tap(() => {\n            this.drawMinimap();\n        }), finalize(() => {\n            this.cdr.detectChanges();\n        }));\n    }\n    parseInfo(data) {\n        data.nodes.forEach(n => {\n            this.mapOfNodeAttr[n.id] = n;\n        });\n        data.edges.forEach(e => {\n            this.mapOfEdgeAttr[`${e.v}-${e.w}`] = e;\n        });\n    }\n    drawMinimap(forceRerender = false) {\n        var _a, _b;\n        if (!this.minimap || !this.nzShowMinimap) {\n            return;\n        }\n        if (forceRerender) {\n            (_a = this.minimap) === null || _a === void 0 ? void 0 : _a.init(this.svgContainerComponent.containerElement.nativeElement, this.svgContainerComponent.zoomElement.nativeElement, this.svgContainerComponent.zoomController);\n        }\n        else {\n            (_b = this.minimap) === null || _b === void 0 ? void 0 : _b.update();\n        }\n    }\n}\n/** @nocollapse */\nNzGraphComponent.ɵfac = function NzGraphComponent_Factory(t) { return new (t || NzGraphComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n/** @nocollapse */\nNzGraphComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzGraphComponent, selectors: [[\"nz-graph\"]], contentQueries: function NzGraphComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, NzCustomGraphNodeDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customGraphNodeTemplate = _t.first);\n    } }, viewQuery: function NzGraphComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NzGraphSvgContainerComponent, true);\n        ɵngcc0.ɵɵviewQuery(NzGraphMinimapComponent, true);\n        ɵngcc0.ɵɵviewQuery(NzGraphNodeDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.svgContainerComponent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minimap = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.graphNodes = _t);\n    } }, hostVars: 2, hostBindings: function NzGraphComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"nz-graph-auto-fit\", ctx.nzAutoSize);\n    } }, inputs: { nzRankDirection: \"nzRankDirection\", nzShowMinimap: \"nzShowMinimap\", nzShowArrow: \"nzShowArrow\", nzZoom: \"nzZoom\", nzAutoSize: \"nzAutoSize\", nzGraphData: \"nzGraphData\", nzGraphLayoutSettings: \"nzGraphLayoutSettings\" }, outputs: { nzGraphInitialized: \"nzGraphInitialized\", nzZoomInit: \"nzZoomInit\", nzTransformEvent: \"nzTransformEvent\", nzNodeClick: \"nzNodeClick\" }, exportAs: [\"nzGraph\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 7, vars: 5, consts: [[3, \"transformEvent\"], [\"nz-graph-defs\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [\"groupTemplate\", \"\"], [1, \"core\"], [1, \"nz-graph-edges\"], [\"class\", \"nz-graph-edge\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nz-graph-nodes\"], [\"class\", \"nz-graph-node\", 3, \"nz-graph-custom-node\", \"display\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nz-graph-edge\"], [\"nz-graph-edge\", \"\", 1, \"nz-graph-edge-line\", 3, \"edge\"], [\"class\", \"nz-graph-edge-text\", \"text-anchor\", \"middle\", \"dy\", \"20\", 4, \"ngIf\"], [\"text-anchor\", \"middle\", \"dy\", \"20\", 1, \"nz-graph-edge-text\"], [\"startOffset\", \"50%\"], [1, \"nz-graph-node\"], [\"nz-graph-node\", \"\", 3, \"node\", \"nodeClick\"], [\"x\", \"0\", \"y\", \"0\", 1, \"nz-graph-node-rect\"], [1, \"nz-graph-node-wrapper\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"class\", \"node-content\", 4, \"ngIf\"], [1, \"node-content\"], [1, \"title\"], [\"class\", \"action-icon\", \"nz-icon\", \"\", \"nzTheme\", \"outline\", 3, \"nzType\", \"click\", 4, \"ngIf\"], [\"class\", \"label\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzTheme\", \"outline\", 1, \"action-icon\", 3, \"nzType\", \"click\"], [1, \"label\"]], template: function NzGraphComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"nz-graph-svg-container\", 0);\n        ɵngcc0.ɵɵlistener(\"transformEvent\", function NzGraphComponent_Template_nz_graph_svg_container_transformEvent_1_listener($event) { return ctx.triggerTransform($event); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(2, \"defs\", 1);\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementContainer(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NzGraphComponent_nz_graph_minimap_4_Template, 1, 0, \"nz-graph-minimap\", 3);\n        ɵngcc0.ɵɵtemplate(5, NzGraphComponent_ng_template_5_Template, 6, 6, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(6);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c6, ctx.renderInfo));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowMinimap);\n    } }, directives: [NzGraphSvgContainerComponent, NzGraphDefsComponent, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgIf, NzGraphMinimapComponent, ɵngcc2.NgForOf, NzGraphEdgeDirective, NzGraphNodeDirective, ɵngcc3.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzGraphComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ElementRef }\n];\nNzGraphComponent.propDecorators = {\n    graphNodes: [{ type: ViewChildren, args: [NzGraphNodeDirective,] }],\n    svgContainerComponent: [{ type: ViewChild, args: [NzGraphSvgContainerComponent,] }],\n    minimap: [{ type: ViewChild, args: [NzGraphMinimapComponent,] }],\n    customGraphNodeTemplate: [{ type: ContentChild, args: [NzCustomGraphNodeDirective, { static: true, read: TemplateRef },] }],\n    nzGraphData: [{ type: Input }],\n    nzRankDirection: [{ type: Input }],\n    nzGraphLayoutSettings: [{ type: Input }],\n    nzShowMinimap: [{ type: Input }],\n    nzShowArrow: [{ type: Input }],\n    nzZoom: [{ type: Input }],\n    nzAutoSize: [{ type: Input }],\n    nzGraphInitialized: [{ type: Output }],\n    nzZoomInit: [{ type: Output }],\n    nzTransformEvent: [{ type: Output }],\n    nzNodeClick: [{ type: Output }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzGraphComponent.prototype, \"nzShowMinimap\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzGraphComponent.prototype, \"nzShowArrow\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzGraphComponent.prototype, \"nzAutoSize\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCustomGraphNodeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nzGraphNode]',\n                exportAs: 'nzGraphNode'\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphDefsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'svg:defs[nz-graph-defs]',\n                template: `\n    <svg:marker\n      class=\"nz-graph-edge-marker\"\n      id=\"edge-end-arrow\"\n      viewBox=\"1 0 20 20\"\n      refX=\"9\"\n      refY=\"3.5\"\n      markerWidth=\"10\"\n      markerHeight=\"10\"\n      orient=\"auto\"\n    >\n      <svg:polygon points=\"0 0, 10 3.5, 0 7\"></svg:polygon>\n    </svg:marker>\n  `\n            }]\n    }], function () { return []; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphEdgeDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'svg:path[nz-graph-edge]',\n                host: {\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { edge: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphMinimapComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-graph-minimap',\n                template: `\n    <svg>\n      <defs>\n        <filter id=\"minimapDropShadow\" x=\"-20%\" y=\"-20%\" width=\"150%\" height=\"150%\">\n          <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"1\" dy=\"1\"></feOffset>\n          <feColorMatrix\n            result=\"matrixOut\"\n            in=\"offOut\"\n            type=\"matrix\"\n            values=\"0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.5 0\"\n          ></feColorMatrix>\n          <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"2\"></feGaussianBlur>\n          <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feBlend>\n        </filter>\n      </defs>\n      <rect></rect>\n    </svg>\n    <canvas class=\"viewport\"></canvas>\n    <!-- Additional canvas to use as buffer to avoid flickering between updates -->\n    <canvas class=\"buffer\"></canvas>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphNodeDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'svg:g[nz-graph-node]',\n                host: {\n                    '[id]': 'node.id || node.name',\n                    '[class.nz-graph-node-expanded]': 'node.expanded',\n                    '[class.nz-graph-group-node]': 'node.type===0',\n                    '[class.nz-graph-base-node]': 'node.type===1',\n                    '(click)': 'onTriggerClick($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.AnimationBuilder }, { type: ɵngcc0.Renderer2 }]; }, { nodeClick: [{\n            type: Output\n        }], node: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphSvgContainerComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-graph-svg-container',\n                exportAs: 'nzGraphSvgContainer',\n                template: `\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" #container width=\"100%\" height=\"100%\">\n      <rect width=\"100%\" height=\"100%\" fill=\"transparent\" class=\"nz-graph-background\"></rect>\n      <g #zoom [attr.transform]=\"transformStyle\" class=\"nz-graph-zoom\">\n        <ng-content></ng-content>\n      </g>\n    </svg>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { maxZoomLevel: [{\n            type: Input\n        }], minZoomLevel: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], zoomEvent: [{\n            type: Output\n        }], transformEvent: [{\n            type: Output\n        }], containerElement: [{\n            type: ViewChild,\n            args: ['container', { static: true }]\n        }], zoomElement: [{\n            type: ViewChild,\n            args: ['zoom', { static: true }]\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-graph',\n                exportAs: 'nzGraph',\n                template: `\n    <ng-content></ng-content>\n    <nz-graph-svg-container (transformEvent)=\"triggerTransform($event)\">\n      <svg:defs nz-graph-defs></svg:defs>\n      <ng-container [ngTemplateOutlet]=\"groupTemplate\" [ngTemplateOutletContext]=\"{ renderInfo: renderInfo, type: 'root' }\"></ng-container>\n    </nz-graph-svg-container>\n\n    <nz-graph-minimap *ngIf=\"nzShowMinimap\"></nz-graph-minimap>\n\n    <ng-template #groupTemplate let-renderInfo=\"renderInfo\" let-type=\"type\">\n      <svg:g [attr.transform]=\"type === 'sub' ? subGraphTransform(renderInfo) : null\">\n        <svg:g class=\"core\" [attr.transform]=\"coreTransform(renderInfo)\">\n          <svg:g class=\"nz-graph-edges\">\n            <svg:g class=\"nz-graph-edge\" *ngFor=\"let edge of renderInfo.edges; let index = index; trackBy: edgeTrackByFun\">\n              <svg:path\n                class=\"nz-graph-edge-line\"\n                nz-graph-edge\n                [attr.marker-end]=\"nzShowArrow ? 'url(#edge-end-arrow)' : null\"\n                [edge]=\"edge\"\n              ></svg:path>\n              <svg:text class=\"nz-graph-edge-text\" text-anchor=\"middle\" dy=\"20\" *ngIf=\"edge.label\">\n                <textPath [attr.href]=\"'#' + edge.v + '--' + edge.w\" startOffset=\"50%\">{{ edge.label }}</textPath>\n              </svg:text>\n            </svg:g>\n          </svg:g>\n\n          <svg:g class=\"nz-graph-nodes\">\n            <svg:g\n              class=\"nz-graph-node\"\n              [class.nz-graph-custom-node]=\"!!customGraphNodeTemplate\"\n              [style.display]=\"node.type === 2 ? 'none' : null\"\n              *ngFor=\"let node of typedNodes(renderInfo.nodes); trackBy: nodeTrackByFun\"\n            >\n              <svg:g nz-graph-node [node]=\"node\" (nodeClick)=\"clickNode($event)\">\n                <foreignObject class=\"nz-graph-node-rect\" x=\"0\" y=\"0\" [attr.width]=\"node.width\" [attr.height]=\"node.height\">\n                  <xhtml:div class=\"nz-graph-node-wrapper\">\n                    <ng-container\n                      *ngIf=\"customGraphNodeTemplate\"\n                      [ngTemplateOutlet]=\"customGraphNodeTemplate\"\n                      [ngTemplateOutletContext]=\"{ $implicit: node }\"\n                    ></ng-container>\n                    <div class=\"node-content\" *ngIf=\"!customGraphNodeTemplate\">\n                      <div class=\"title\">\n                        {{ node.name }}\n                        <i\n                          class=\"action-icon\"\n                          *ngIf=\"node.type === 0\"\n                          nz-icon\n                          [nzType]=\"node.expanded ? 'minus' : 'plus'\"\n                          nzTheme=\"outline\"\n                          (click)=\"toggleNode(node.name, node.expanded)\"\n                        ></i>\n                      </div>\n                      <div class=\"label\" *ngIf=\"!node.expanded\">{{ node.label }}</div>\n                    </div>\n                  </xhtml:div>\n                </foreignObject>\n              </svg:g>\n\n              <ng-container\n                *ngIf=\"node.expanded\"\n                [ngTemplateOutlet]=\"groupTemplate\"\n                [ngTemplateOutletContext]=\"{ renderInfo: node, type: 'sub' }\"\n              ></ng-container>\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  `,\n                host: {\n                    '[class.nz-graph-auto-fit]': 'nzAutoSize'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }]; }, { nzRankDirection: [{\n            type: Input\n        }], nzShowMinimap: [{\n            type: Input\n        }], nzShowArrow: [{\n            type: Input\n        }], nzZoom: [{\n            type: Input\n        }], nzAutoSize: [{\n            type: Input\n        }], nzGraphInitialized: [{\n            type: Output\n        }], nzZoomInit: [{\n            type: Output\n        }], nzTransformEvent: [{\n            type: Output\n        }], nzNodeClick: [{\n            type: Output\n        }], graphNodes: [{\n            type: ViewChildren,\n            args: [NzGraphNodeDirective]\n        }], svgContainerComponent: [{\n            type: ViewChild,\n            args: [NzGraphSvgContainerComponent]\n        }], minimap: [{\n            type: ViewChild,\n            args: [NzGraphMinimapComponent]\n        }], customGraphNodeTemplate: [{\n            type: ContentChild,\n            args: [NzCustomGraphNodeDirective, { static: true, read: TemplateRef }]\n        }], nzGraphData: [{\n            type: Input\n        }], nzGraphLayoutSettings: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst COMPONENTS = [\n    NzGraphComponent,\n    NzGraphSvgContainerComponent,\n    NzGraphEdgeDirective,\n    NzGraphNodeDirective,\n    NzGraphMinimapComponent,\n    NzGraphDefsComponent,\n    NzCustomGraphNodeDirective\n];\nclass NzGraphModule {\n}\n/** @nocollapse */\nNzGraphModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzGraphModule });\n/** @nocollapse */\nNzGraphModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzGraphModule_Factory(t) { return new (t || NzGraphModule)(); }, imports: [[CommonModule, NzIconModule, NzSpinModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzGraphModule, { declarations: function () { return [NzGraphComponent, NzGraphSvgContainerComponent, NzGraphEdgeDirective, NzGraphNodeDirective, NzGraphMinimapComponent, NzGraphDefsComponent, NzCustomGraphNodeDirective]; }, imports: function () { return [CommonModule, NzIconModule, NzSpinModule]; }, exports: function () { return [NzGraphComponent, NzGraphSvgContainerComponent, NzGraphEdgeDirective, NzGraphNodeDirective, NzGraphMinimapComponent, NzGraphDefsComponent, NzCustomGraphNodeDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzGraphModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [...COMPONENTS],\n                imports: [CommonModule, NzIconModule, NzSpinModule],\n                exports: [...COMPONENTS]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_GRAPH_LAYOUT_SETTING, NzCustomGraphNodeDirective, NzGraphComponent, NzGraphData, NzGraphEdgeDirective, NzGraphModule, NzGraphNodeDirective, NzGraphSvgContainerComponent, isDataSource, nzTypeDefinition, NzGraphMinimapComponent as ɵa, NzGraphDefsComponent as ɵb };\n\n//# sourceMappingURL=ng-zorro-antd-graph.js.map"],"sourceRoot":"webpack:///"}