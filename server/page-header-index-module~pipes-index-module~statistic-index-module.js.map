{"version":3,"sources":["./publish/components/core/pipe/time-range.pipe.ts","./publish/components/core/pipe/nz-pipe.module.ts","./publish/components/core/pipe/public-api.ts","./publish/components/core/pipe/ng-zorro-antd-core-pipe.ts","./publish/components/statistic/statistic.component.ts","./publish/components/statistic/countdown.component.ts","./publish/components/statistic/statistic-number.component.ts","./publish/components/statistic/statistic.module.ts","./publish/components/statistic/public-api.ts","./publish/components/statistic/ng-zorro-antd-statistic.ts"],"names":["NzPipesModuleFromCore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AACA,MASa,eAAe;AAAG,IAC7B,SAAS,CAAC,KAAsB,EAAE,SAAiB,UAAU;AAAI,QAC/D,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;AACtC,QACI,OAAO,iEAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAClD,YAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACxC,gBAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AAC9C,gBAAQ,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC;AAC7B,gBAAQ,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,KAAa;AAC1E,oBAAU,OAAO,wEAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC3D,iBAAS,CAAC,CAAC;AACX,aAAO;AACP,YAAM,OAAO,OAAO,CAAC;AACrB,SAAK,EAAE,MAAM,CAAC,CAAC;AACf,KAAG;AACH;2CAnBC,IAAI,SAAC,kBACJ,IAAI,EAAE,aAAa;UACnB,IAAI,EAAE,IAAI,8DACX;;;;;;;0BACI;AAAC;ACbN;AACA;AACA;AACA;AACA,MAWa,aAAa;AAAG;mFAL5B,KAAQ,SAAC;KACR,OAAO,EAAE,CAAC,oEAAa,EACvB,OAAO,EAAE,CAAC,eAAe,CAAC,kBAC1B,YAAY,EAAE,CAAC,eAAe,CAAC,cAChC;;;;;;;;;0BACI;AAAC;ACfN;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAwCa,oBAAoB;AAAG,IAWlC,YAAsB,GAAsB,EAAsB,cAA8B;AAAI,QAA9E,QAAG,GAAH,GAAG,CAAmB;AAAC,QAAqB,mBAAc,GAAd,cAAc,CAAgB;AAAC,QANxF,iBAAY,GAAqB,EAAE,CAAC;AAC/C,QACE,QAAG,GAAc,KAAK,CAAC;AACzB,QACU,aAAQ,GAAG,IAAI,4CAAO,EAAQ,CAAC;AACzC,KACsG;AACtG,IACE,QAAQ;AAAK;AACL,QAAN,UAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC,SAAoB;AAC9F,YAAM,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;AAC3B,YAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC/B,SAAK,EAAE;AACP,QACI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACzC,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,KAAG;AACH;gDAhDC,SAAS,SAAC,kBACT,eAAe,EAAE,wEAA8B,gEAC/C,GAAa,+DAAwB,iEACrC,IAAQ,EAAE;UAAc,kBACxB,+DAAuB,iBACvB,QAAQ,EAAE;;;OAeT,yDACF;;;;;;;;;;;;;;;;;;;;6TACI;AAAC;AAA8C,YApClD,+DAAiB;AACjB,YAJkB,gEAAc,uBAkDe,sDAAQ;AAAM;AAAG;AAEhE,uBAZC,mDAAK;AAAK,uBACV,mDAAK;AAAK,sBACV,mDAAK;AAAK,sBACV,mDAAK;AAAK,2BACV,mDAAK;AAAK,8BACV,mDAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AClDf;AACA;AACA;AACA;AAuBA,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC,MAmBa,oBAAqB,SAAQ,oBAAoB;AAAG,IAS/D,YAAY,GAAsB,EAAU,MAAc,EAAU,QAAkB,EAAc,cAA8B;AACpI,QAAI,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAC/B,QAF8C,WAAM,GAAN,MAAM,CAAQ;AAAC,QAAS,aAAQ,GAAR,QAAQ,CAAU;AAAC,QAR9E,aAAQ,GAAW,UAAU,CAAC;AACzC,QAAqB,sBAAiB,GAAG,IAAI,0DAAY,EAAQ,CAAC;AAClE,QAGU,WAAM,GAAW,CAAC,CAAC;AAC7B,KAIG;AACH,IACE,WAAW,CAAC,OAAsB;AAAI,QACpC,IAAI,OAAO,CAAC,OAAO,EAAE;AACzB,YAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACzD,YAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;AAC5C,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,QAAQ;AAAK,QACX,KAAK,CAAC,QAAQ,EAAE,CAAC;AACrB,QAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;AACnC,YAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACxB,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,SAAK;AACL,KAAG;AACH,IACE,UAAU;AAAK,QACb,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;AACjC,YAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;AACpC,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,gBAAQ,IAAI,CAAC,QAAQ,GAAG,qDAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC;AAC7D,oBAAU,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7B,oBAAU,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACnC,iBAAS,CAAC,CAAC;AACX,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAClC,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAO,WAAW;AAAK,QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACtD,QACI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;AACzB,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,YAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;AACpC,SAAK;AACL,KAAG;AACH;gDAvFC,SAAS,SAAC,kBACT,eAAe,EAAE,wEAA8B,gEAC/C,GAAa,+DAAwB,uHAC3B,CAAc,iEACxB,+DAAuB,iEACvB,GAAQ,EAAE;obAWT,cACF;;;;;;uKACI;AAAC;AAA8C,YAtClD,+DAAiB;AACjB,YAGA,oDAAM;AACN,YARO,8DAAQ;AAAI,YAkBZ,gEAAc,uBAgCoE,sDAAQ;AAAM;AAAG;AAChG,uBATT,mDAAK;AAAK,gCACV,oDAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AChDhB;AACA;AACA;AACA;AACA,MAsBa,0BAA0B;AAAG,IAOxC,YAAuC,SAAiB;AAAI,QAArB,cAAS,GAAT,SAAS,CAAQ;AAAC,QAHzD,eAAU,GAAG,EAAE,CAAC;AAClB,QAAE,mBAAc,GAAG,EAAE,CAAC;AACtB,KAC8D;AAC9D,IACE,WAAW;AAAK,QACd,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,KAAG;AACH,IACU,YAAY;AAAK,QACvB,MAAM,gBAAgB,GAAW,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,GAAG,GAAG,GAAG,6EAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,4DAAY,CAAC,OAAO,CAAC,CAAC;AAC1I,QAAI,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvC,QAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACzD,QACI,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AAC1B,QAAI,IAAI,CAAC,cAAc,GAAG,OAAO,GAAG,GAAG,gBAAgB,GAAG,OAAO,EAAE,GAAG,EAAE,CAAC;AACzE,KAAG;AACH;sDAtCC,SAAS,SAAC,kBACT,eAAe,EAAE,oFAA8B,wDAC/C,MAAa;CAAE,iBAAiB,CAAC,IAAI,0EACrC,EAAmB,EAAE,KAAK,kBAC1B,QAAQ,EAAE,qBAAqB,kBAC/B,QAAQ,EAAE,mBAAmB,kBAC7B,QAAQ,EAAE,ohBAST,cACF;;;;;;;;;;uLACI;AAAC;AAAoD,yCAO3C,oDAAM,SAAC,uDAAS;AAAQ;AAAG;AAG1C,sBATG,mDAAK;AAAK,8BACV,mDAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AC5Bf;AACA;AACA;AACA;AACA,MAiBa,iBAAiB;AAAG;uFALhC,KAAQ,SAAC;CACR,OAAO,EAAE,CAAC,UAAU,EAAE,gEAAc,GAAc,EAAE,cAAc,EAAEA,aAAqB,CAAC,kBAC1F,YAAY,EAAE,CAAC,oBAAoB,EAAE,2EAAsB,oIAA2B,0EACtF,uEAAU;IAAoB,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,2EAClF;;;;;;;;0BACI;AAAC;ACrBN;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACwE","file":"page-header-index-module~pipes-index-module~statistic-index-module.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { timeUnits } from 'ng-zorro-antd/core/time';\nimport { padStart } from 'ng-zorro-antd/core/util';\n\n@Pipe({\n  name: 'nzTimeRange',\n  pure: true\n})\nexport class NzTimeRangePipe implements PipeTransform {\n  transform(value: string | number, format: string = 'HH:mm:ss'): string {\n    let duration = Number(value || 0);\n\n    return timeUnits.reduce((current, [name, unit]) => {\n      if (current.indexOf(name) !== -1) {\n        const v = Math.floor(duration / unit);\n        duration -= v * unit;\n        return current.replace(new RegExp(`${name}+`, 'g'), (match: string) => {\n          return padStart(v.toString(), match.length, '0');\n        });\n      }\n      return current;\n    }, format);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzTimeRangePipe } from './time-range.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzTimeRangePipe],\n  declarations: [NzTimeRangePipe]\n})\nexport class NzPipesModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-pipe.module';\nexport * from './time-range.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  template: `\n    <div class=\"ant-statistic\" [class.ant-statistic-rtl]=\"dir === 'rtl'\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class NzStatisticComponent implements OnDestroy, OnInit {\n  @Input() nzPrefix?: string | TemplateRef<void>;\n  @Input() nzSuffix?: string | TemplateRef<void>;\n  @Input() nzTitle?: string | TemplateRef<void>;\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueStyle: NgStyleInterface = {};\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, @Optional() private directionality: Directionality) {}\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NzStatisticComponent } from './statistic.component';\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff!: number;\n\n  private target: number = 0;\n  private updater_?: Subscription | null;\n\n  constructor(cdr: ChangeDetectorRef, private ngZone: NgZone, private platform: Platform, @Optional() directionality: Directionality) {\n    super(cdr, directionality);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Inject, Input, LOCALE_ID, OnChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container *ngIf=\"nzValueTemplate\" [ngTemplateOutlet]=\"nzValueTemplate\" [ngTemplateOutletContext]=\"{ $implicit: nzValue }\">\n      </ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule as NzPipesModuleFromCore } from 'ng-zorro-antd/core/pipe';\n\nimport { NzCountdownComponent } from './countdown.component';\nimport { NzStatisticNumberComponent } from './statistic-number.component';\nimport { NzStatisticComponent } from './statistic.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModuleFromCore],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './countdown.component';\nexport * from './statistic.component';\nexport * from './statistic.module';\nexport * from './statistic-number.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}