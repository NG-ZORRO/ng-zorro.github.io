{"version":3,"sources":["./publish/components/spin/spin.component.ts","./publish/components/spin/spin.module.ts","./publish/components/spin/public-api.ts","./publish/components/spin/ng-zorro-antd-spin.ts"],"names":[],"mappings":"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","file":"code-editor-index-module~comment-index-module~drawer-index-module~empty-index-module~graph-index-mod~d5748fc2.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NumberInput, NzSafeAny, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { BehaviorSubject, ReplaySubject, Subject, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'spin';\n\n@Component({\n  selector: 'nz-spin',\n  exportAs: 'nzSpin',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-rtl]=\"dir === 'rtl'\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.ant-spin-nested-loading]': '!nzSimple'\n  }\n})\nexport class NzSpinComponent implements OnChanges, OnDestroy, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzDelay: NumberInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n  static ngAcceptInputType_nzSpinning: BooleanInput;\n\n  @Input() @WithConfig() nzIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzTip: string | null = null;\n  @Input() @InputNumber() nzDelay = 0;\n  @Input() @InputBoolean() nzSimple = false;\n  @Input() @InputBoolean() nzSpinning = true;\n  private destroy$ = new Subject<void>();\n  private spinning$ = new BehaviorSubject(this.nzSpinning);\n  private delay$ = new ReplaySubject<number>(1);\n  isLoading = false;\n  dir: Direction = 'ltr';\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnInit(): void {\n    const loading$ = this.delay$.pipe(\n      startWith(this.nzDelay),\n      distinctUntilChanged(),\n      switchMap(delay => {\n        if (delay === 0) {\n          return this.spinning$;\n        }\n\n        return this.spinning$.pipe(debounce(spinning => timer(spinning ? delay : 0)));\n      }),\n      takeUntil(this.destroy$)\n    );\n    loading$.subscribe(loading => {\n      this.isLoading = loading;\n      this.cdr.markForCheck();\n    });\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.cdr.markForCheck());\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzSpinning, nzDelay } = changes;\n    if (nzSpinning) {\n      this.spinning$.next(this.nzSpinning);\n    }\n    if (nzDelay) {\n      this.delay$.next(this.nzDelay);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSpinComponent } from './spin.component';\n\n@NgModule({\n  exports: [NzSpinComponent],\n  declarations: [NzSpinComponent],\n  imports: [BidiModule, CommonModule, ObserversModule]\n})\nexport class NzSpinModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './spin.component';\nexport * from './spin.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}