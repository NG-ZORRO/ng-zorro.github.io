{"version":3,"sources":["./publish/components/switch/switch.component.ts","./publish/components/switch/switch.module.ts","./publish/components/switch/public-api.ts","./publish/components/switch/ng-zorro-antd-switch.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAM,qBAAqB,GAAgB,QAAQ,CAAC;AACpD,MA+Ca,iBAAiB;AAAG,IA2D/B,YACS,eAAgC,EAC/B,GAAsB,EACtB,YAA0B,EACd,cAA8B;AACnD,QAJQ,oBAAe,GAAf,eAAe,CAAiB;AAAC,QAChC,QAAG,GAAH,GAAG,CAAmB;AAAC,QACvB,iBAAY,GAAZ,YAAY,CAAc;AAAC,QACf,mBAAc,GAAd,cAAc,CAAgB;AACtD,QA/DW,kBAAa,GAAgB,qBAAqB,CAAC;AAC9D,QAKE,cAAS,GAAG,KAAK,CAAC;AACpB,QAAE,aAAQ,GAAiB,SAAQ,CAAC;AACpC,QAAE,cAAS,GAAkB,SAAQ,CAAC;AACtC,QAC2B,cAAS,GAAG,KAAK,CAAC;AAC7C,QAA2B,eAAU,GAAG,KAAK,CAAC;AAC9C,QAA2B,cAAS,GAAG,KAAK,CAAC;AAC7C,QAAW,sBAAiB,GAAsC,IAAI,CAAC;AACvE,QAAW,wBAAmB,GAAsC,IAAI,CAAC;AACzE,QAAyB,WAAM,GAAiB,SAAS,CAAC;AAC1D,QACE,QAAG,GAAc,KAAK,CAAC;AACzB,QACU,aAAQ,GAAG,IAAI,4CAAO,EAAQ,CAAC;AACzC,KA2CM;AACN,IA3CE,WAAW,CAAC,CAAa;AAAI,QAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,QAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChE,YAAM,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxC,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,KAAc;AAAI,QAC5B,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AAClC,YAAM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,SAAS,CAAC,CAAgB;AAAI,QAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChE,YAAM,IAAI,CAAC,CAAC,OAAO,KAAK,gEAAU,EAAE;AACpC,gBAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;AAC3B,aAAO;AAAC,iBAAK,IAAI,CAAC,CAAC,OAAO,KAAK,iEAAW,EAAE;AAC5C,gBAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC/B,gBAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;AAC3B,aAAO;AAAC,iBAAK,IAAI,CAAC,CAAC,OAAO,KAAK,2DAAK,IAAI,CAAC,CAAC,OAAO,KAAK,2DAAK,EAAE;AAC7D,gBAAQ,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1C,gBAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;AAC3B,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,KAAK;AAAK;AACF,QAAN,IAAI,CAAC,YAAY,CAAC,QAAQ,OAAC,IAAI,CAAC,aAAa,0CAAE,aAAa,EAAE,UAAU,CAAC,CAAC;AAC9E,KAAG;AACH,IACE,IAAI;AAAK;AACD,QAAN,UAAI,CAAC,aAAa,0CAAE,aAAa,CAAC,IAAI,GAAG;AAC7C,KAAG;AACH,IAQE,QAAQ;AAAK;AACL,QAAN,UAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC,SAAoB;AAC9F,YAAM,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;AAC3B,YAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC/B,SAAK,EAAE;AACP,QACI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACzC,KAAG;AACH,IACE,eAAe;AAAK,QAClB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAc,CAAC,aAAa,EAAE,IAAI,CAAC;AACtE,aAAO,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,aAAO,SAAS,CAAC,WAAW;AAC5B,YAAQ,IAAI,CAAC,WAAW,EAAE;AAC1B;AACM,gBAAI,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AACzD,aAAS;AACT,SAAO,CAAC,CAAC;AACT,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,aAAc,CAAC,aAAa,CAAC,CAAC;AACxE,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,UAAU,CAAC,KAAc;AAAI,QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AACH,IACE,gBAAgB,CAAC,EAAgB;AAAI,QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH,IACE,iBAAiB,CAAC,EAAiB;AAAI,QACrC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH,IACE,gBAAgB,CAAC,QAAiB;AAAI,QACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC/B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AACH;6CA3JC,SAAS,SAAC,kBACT,QAAQ,EAAE,yEACV,0EAAoB,kEACpB,gEAA0B,EAC1B,gEAAiB,+DAAwB,EAAM,gEAC/C,iEAAe,GAAiB,CAAC,IAAI;gBACrC,SAAS,+DACP,0BACE,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU,CAAC,MAAM;AAAiB,CAAC,iEAChD,KAAK,EAAE;EAAI;IACZ;MACF,8DACD,GAAQ,EAAE;;;;;;;;;qWA4BT,kBACD,IAAI,EAAE,sBACJ,SAAS,EAAE,qBAAqB,kBACjC,cACF;;;;;;;;;;;;;;;;;;;;iWACI;AAAC;AAA2C,YAtD3B,yEAAe;AAAI,YAfvC,+DAAiB;AACjB,YANO,8DAAY;AAAI,YAmBL,gEAAc,uBAsH7B,sDAAQ;AAAM;AAAG;AAClB,4BAtDD,uDAAS,SAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAO,wBAClD,mDAAK;AAAK,yBACV,mDAAK;AAAK,wBACV,mDAAK;AAAK,gCACV,mDAAK;AAAK,kCACV,mDAAK;AAAK,qBACV,mDAAK;AAAI;AALe;AAAa,IAA5B,4EAAY,EAAE;AAAE;AACR,oDADyB;AAClB;AAAa,IAA5B,4EAAY,EAAE;AAAE;AACT,qDAD2B;AACnB;AAAa,IAA5B,4EAAY,EAAE;AAAE;AACR,oDADyB;AAGpB;AAAa,IAA1B,4EAAU,EAAE;AAAE;AAEtB,iDAFsD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAC1D;AACA;ACjGA;AACA;AACA;AACA;AACA,MAca,cAAc;AAAG;0CAL7B,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC;MAAiB,CAAC,6EACb,YAAiB,CAAC;GACjC,OAAO,EAAE,CAAC,uEAA0B,MAAY,EAAE,kEAAc,+DAAe,uEAChF;;;;;;;;;0BACI;AAAC;AClBN;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACgB","file":"badge-index-module~card-index-module~code-editor-index-module~empty-index-module~menu-index-module~p~58ac2520.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'switch';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\n      [nzWaveExtraNode]=\"true\"\n      (keydown)=\"onKeyDown($event)\"\n    >\n      <span class=\"ant-switch-handle\">\n        <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      </span>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `,\n  host: {\n    '(click)': 'onHostClick($event)'\n  }\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzControl: BooleanInput;\n\n  isChecked = false;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('switchElement', { static: true }) private switchElement?: ElementRef;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() @WithConfig() nzSize: NzSizeDSType = 'default';\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  onHostClick(e: MouseEvent): void {\n    e.preventDefault();\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n      this.updateValue(!this.isChecked);\n    }\n  }\n\n  updateValue(value: boolean): void {\n    if (this.isChecked !== value) {\n      this.isChecked = value;\n      this.onChange(this.isChecked);\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n      if (e.keyCode === LEFT_ARROW) {\n        this.updateValue(false);\n        e.preventDefault();\n      } else if (e.keyCode === RIGHT_ARROW) {\n        this.updateValue(true);\n        e.preventDefault();\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        this.updateValue(!this.isChecked);\n        e.preventDefault();\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement?.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement?.nativeElement.blur();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.switchElement!.nativeElement, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          /** https://github.com/angular/angular/issues/17793 **/\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement!.nativeElement);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSwitchComponent } from './switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n})\nexport class NzSwitchModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './switch.component';\nexport * from './switch.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}