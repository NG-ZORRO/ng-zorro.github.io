{"version":3,"sources":["./publish/components/descriptions/descriptions-item.component.ts","./publish/components/descriptions/descriptions.component.ts","./publish/components/descriptions/descriptions.module.ts","./publish/components/descriptions/typings.ts","./publish/components/descriptions/public-api.ts","./publish/components/descriptions/ng-zorro-antd-descriptions.ts"],"names":[],"mappings":"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","file":"descriptions-index-module~drawer-index-module~page-header-index-module.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NumberInput } from 'ng-zorro-antd/core/types';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { Subject } from 'rxjs';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  exportAs: 'nzDescriptionsItem',\n  preserveWhitespaces: false\n})\nexport class NzDescriptionsItemComponent implements OnChanges, OnDestroy {\n  static ngAcceptInputType_nzSpan: NumberInput;\n\n  @ViewChild(TemplateRef, { static: true }) content!: TemplateRef<void>;\n\n  @Input() @InputNumber() nzSpan = 1;\n  @Input() nzTitle: string | TemplateRef<void> = '';\n\n  readonly inputChange$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.inputChange$.next();\n  }\n\n  ngOnDestroy(): void {\n    this.inputChange$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { gridResponsiveMap, NzBreakpointEnum, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { merge, Subject } from 'rxjs';\nimport { auditTime, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsItemRenderProps, NzDescriptionsLayout, NzDescriptionsSize } from './typings';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'descriptions';\nconst defaultColumnMap: { [key in NzBreakpointEnum]: number } = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions',\n  exportAs: 'nzDescriptions',\n  preserveWhitespaces: false,\n  template: `\n    <div *ngIf=\"nzTitle || nzExtra\" class=\"ant-descriptions-header\">\n      <div *ngIf=\"nzTitle\" class=\"ant-descriptions-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div *ngIf=\"nzExtra\" class=\"ant-descriptions-extra\">\n        <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-descriptions-view\">\n      <table>\n        <tbody>\n          <ng-container *ngIf=\"nzLayout === 'horizontal'\">\n            <tr class=\"ant-descriptions-row\" *ngFor=\"let row of itemMatrix; let i = index\">\n              <ng-container *ngFor=\"let item of row; let isLast = last\">\n                <!-- Horizontal & NOT Bordered -->\n                <ng-container *ngIf=\"!nzBordered\">\n                  <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                    <div class=\"ant-descriptions-item-container\">\n                      <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-no-colon]=\"!nzColon\">\n                        <ng-container *nzStringTemplateOutlet=\"item.title\">\n                          {{ item.title }}\n                        </ng-container>\n                      </span>\n                      <span class=\"ant-descriptions-item-content\">\n                        <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                      </span>\n                    </div>\n                  </td>\n                </ng-container>\n                <!-- Horizontal & Bordered -->\n                <ng-container *ngIf=\"nzBordered\">\n                  <td class=\"ant-descriptions-item-label\" *nzStringTemplateOutlet=\"item.title\">\n                    <ng-container *nzStringTemplateOutlet=\"item.title\">\n                      {{ item.title }}\n                    </ng-container>\n                  </td>\n                  <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span * 2 - 1\">\n                    <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                  </td>\n                </ng-container>\n              </ng-container>\n            </tr>\n          </ng-container>\n\n          <ng-container *ngIf=\"nzLayout === 'vertical'\">\n            <!-- Vertical & NOT Bordered -->\n            <ng-container *ngIf=\"!nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <div class=\"ant-descriptions-item-container\">\n                        <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-no-colon]=\"!nzColon\">\n                          <ng-container *nzStringTemplateOutlet=\"item.title\">\n                            {{ item.title }}\n                          </ng-container>\n                        </span>\n                      </div>\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <div class=\"ant-descriptions-item-container\">\n                        <span class=\"ant-descriptions-item-content\">\n                          <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                        </span>\n                      </div>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n            <!-- Vertical & Bordered -->\n            <ng-container *ngIf=\"nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-label\" [colSpan]=\"item.span\">\n                      <ng-container *nzStringTemplateOutlet=\"item.title\">\n                        {{ item.title }}\n                      </ng-container>\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span\">\n                      <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n  `,\n  host: {\n    class: 'ant-descriptions',\n    '[class.ant-descriptions-bordered]': 'nzBordered',\n    '[class.ant-descriptions-middle]': 'nzSize === \"middle\"',\n    '[class.ant-descriptions-small]': 'nzSize === \"small\"',\n    '[class.ant-descriptions-rtl]': 'dir === \"rtl\"'\n  }\n})\nexport class NzDescriptionsComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzColon: BooleanInput;\n\n  @ContentChildren(NzDescriptionsItemComponent) items!: QueryList<NzDescriptionsItemComponent>;\n\n  @Input() @InputBoolean() @WithConfig() nzBordered: boolean = false;\n  @Input() nzLayout: NzDescriptionsLayout = 'horizontal';\n  @Input() @WithConfig() nzColumn: number | { [key in NzBreakpointEnum]: number } = defaultColumnMap;\n  @Input() @WithConfig() nzSize: NzDescriptionsSize = 'default';\n  @Input() nzTitle: string | TemplateRef<void> = '';\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() @WithConfig() @InputBoolean() nzColon: boolean = true;\n\n  itemMatrix: NzDescriptionsItemRenderProps[][] = [];\n  realColumn = 3;\n  dir: Direction = 'ltr';\n\n  private breakpoint: NzBreakpointEnum = NzBreakpointEnum.md;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private breakpointService: NzBreakpointService,\n    @Optional() private directionality: Directionality\n  ) {}\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzColumn) {\n      this.prepareMatrix();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    const contentChange$ = this.items.changes.pipe(startWith(this.items), takeUntil(this.destroy$));\n\n    merge(\n      contentChange$,\n      contentChange$.pipe(switchMap(() => merge(...this.items.map(i => i.inputChange$)).pipe(auditTime(16)))),\n      this.breakpointService.subscribe(gridResponsiveMap).pipe(tap(bp => (this.breakpoint = bp)))\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.prepareMatrix();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Prepare the render matrix according to description items' spans.\n   */\n  private prepareMatrix(): void {\n    if (!this.items) {\n      return;\n    }\n\n    let currentRow: NzDescriptionsItemRenderProps[] = [];\n    let width = 0;\n\n    const column = (this.realColumn = this.getColumn());\n    const items = this.items.toArray();\n    const length = items.length;\n    const matrix: NzDescriptionsItemRenderProps[][] = [];\n    const flushRow = () => {\n      matrix.push(currentRow);\n      currentRow = [];\n      width = 0;\n    };\n\n    for (let i = 0; i < length; i++) {\n      const item = items[i];\n      const { nzTitle: title, content, nzSpan: span } = item;\n\n      width += span;\n\n      // If the last item make the row's length exceeds `nzColumn`, the last\n      // item should take all the space left. This logic is implemented in the template.\n      // Warn user about that.\n      if (width >= column) {\n        if (width > column) {\n          warn(`\"nzColumn\" is ${column} but we have row length ${width}`);\n        }\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else if (i === length - 1) {\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else {\n        currentRow.push({ title, content, span });\n      }\n    }\n\n    this.itemMatrix = matrix;\n  }\n\n  private getColumn(): number {\n    if (typeof this.nzColumn !== 'number') {\n      return this.nzColumn[this.breakpoint];\n    }\n\n    return this.nzColumn;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsComponent } from './descriptions.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzOutletModule, PlatformModule],\n  declarations: [NzDescriptionsComponent, NzDescriptionsItemComponent],\n  exports: [NzDescriptionsComponent, NzDescriptionsItemComponent]\n})\nexport class NzDescriptionsModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nexport type NzDescriptionsSize = 'default' | 'middle' | 'small';\n\nexport type NzDescriptionsLayout = 'horizontal' | 'vertical';\n\nexport interface NzDescriptionsItemRenderProps {\n  title: string | TemplateRef<void>;\n  span: number;\n  content: TemplateRef<void>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport { NzDescriptionsModule } from './descriptions.module';\nexport { NzDescriptionsComponent } from './descriptions.component';\nexport { NzDescriptionsItemComponent } from './descriptions-item.component';\n\nexport * from './typings';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}