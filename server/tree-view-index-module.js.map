{"version":3,"sources":["./site/doc/app/tree-view/module.ts","./publish/components/core/highlight/highlight.pipe.ts","./publish/components/core/highlight/highlight.module.ts","./publish/components/core/highlight/public-api.ts","./publish/components/core/highlight/ng-zorro-antd-core-highlight.ts","./site/doc/app/tree-view/virtual-scroll.ts","./site/doc/app/tree-view/basic.ts","./site/doc/app/tree-view/dynamic.ts","./site/doc/app/tree-view/checkbox.ts","./site/doc/app/tree-view/index.module.ts","./site/doc/app/tree-view/en.component.ts","./site/doc/app/tree-view/en.html","./site/doc/app/tree-view/line.ts","./site/doc/app/tree-view/search.ts","./site/doc/app/tree-view/zh.component.ts","./site/doc/app/tree-view/zh.html","./site/doc/app/tree-view/editable.ts","./site/doc/app/tree-view/directory.ts","./publish/components/tree-view/checkbox.ts","./publish/components/tree-view/tree.ts","./publish/components/tree-view/node.ts","./publish/components/tree-view/utils.ts","./publish/components/tree-view/indent.ts","./publish/components/tree-view/option.ts","./publish/components/tree-view/outlet.ts","./publish/components/tree-view/padding.ts","./publish/components/tree-view/toggle.ts","./publish/components/tree-view/tree-view.ts","./publish/components/tree-view/tree-virtual-scroll-view.ts","./publish/components/tree-view/tree-view.module.ts","./publish/components/tree-view/data-source.ts","./publish/components/tree-view/public-api.ts","./publish/components/tree-view/ng-zorro-antd-tree-view.ts"],"names":[],"mappings":"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","file":"tree-view-index-module.js","sourcesContent":["import { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTreeViewModule } from 'ng-zorro-antd/tree-view';\n\nexport const moduleList = [ NzTreeViewModule, NzIconModule, NzCheckboxModule, NzInputModule, NzSwitchModule, NzButtonModule, NzNoAnimationModule, NzHighlightModule ];","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\nfunction encodeEntities(value: string): string {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(SURROGATE_PAIR_REGEXP, (match: string) => {\n      const hi = match.charCodeAt(0);\n      const low = match.charCodeAt(1);\n      return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n    })\n    .replace(NON_ALPHANUMERIC_REGEXP, (match: string) => `&#${match.charCodeAt(0)};`)\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n\n@Pipe({\n  name: 'nzHighlight',\n  pure: true\n})\nexport class NzHighlightPipe implements PipeTransform {\n  private UNIQUE_WRAPPERS: [string, string] = ['##==-open_tag-==##', '##==-close_tag-==##'];\n\n  transform(value: string, highlightValue: string, flags?: string, klass?: string): string | null {\n    if (!highlightValue) {\n      return value;\n    }\n\n    // Escapes regex keyword to interpret these characters literally\n    const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n    const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n    return encodeEntities(wrapValue)\n      .replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>')\n      .replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightPipe } from './highlight.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzHighlightPipe],\n  declarations: [NzHighlightPipe]\n})\nexport class NzHighlightModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './highlight.pipe';\nexport * from './highlight.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n\nfunction dig(path: string = '0', level: number = 3): FoodNode[] {\n  const list: FoodNode[] = [];\n  for (let i = 0; i < 10; i += 1) {\n    const name = `${path}-${i}`;\n    const treeNode: FoodNode = {\n      name\n    };\n\n    if (level > 0) {\n      treeNode.children = dig(name, level - 1);\n    }\n\n    list.push(treeNode);\n  }\n  return list;\n}\n\nconst TREE_DATA: FoodNode[] = dig();\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-virtual-scroll',\n  template: `\n    <nz-tree-virtual-scroll-view class=\"virtual-scroll-tree\" [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        {{ node.name }}\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        {{ node.name }}\n      </nz-tree-node>\n    </nz-tree-virtual-scroll-view>\n  `,\n  styles: [\n    `\n      .virtual-scroll-tree {\n        height: 200px;\n      }\n    `\n  ]\n})\nexport class NzDemoTreeViewVirtualScrollComponent implements AfterViewInit {\n  private transformer = (node: FoodNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level\n    };\n  };\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n    this.treeControl.expandAll();\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  ngAfterViewInit(): void {}\n\n  getNode(name: string): ExampleFlatNode | null {\n    return this.treeControl.dataNodes.find(n => n.name === name) || null;\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface TreeNode {\n  name: string;\n  disabled?: boolean;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: 'parent 1',\n    children: [\n      {\n        name: 'parent 1-0',\n        disabled: true,\n        children: [{ name: 'leaf' }, { name: 'leaf' }]\n      },\n      {\n        name: 'parent 1-1',\n        children: [{ name: 'leaf' }]\n      }\n    ]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  disabled: boolean;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-basic',\n  template: `\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        <nz-tree-node-option\n          [nzDisabled]=\"node.disabled\"\n          [nzSelected]=\"selectListSelection.isSelected(node)\"\n          (nzClick)=\"selectListSelection.toggle(node)\"\n        >\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option\n          [nzDisabled]=\"node.disabled\"\n          [nzSelected]=\"selectListSelection.isSelected(node)\"\n          (nzClick)=\"selectListSelection.toggle(node)\"\n        >\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewBasicComponent {\n  private transformer = (node: TreeNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n      disabled: !!node.disabled\n    };\n  };\n  selectListSelection = new SelectionModel<FlatNode>(true);\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n    this.treeControl.expandAll();\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n}\n","import { CollectionViewer, DataSource, SelectionChange } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { BehaviorSubject, merge, Observable, of } from 'rxjs';\nimport { delay, map, tap } from 'rxjs/operators';\n\ninterface FlatNode {\n  expandable: boolean;\n  id: number;\n  label: string;\n  level: number;\n  loading?: boolean;\n}\n\nconst TREE_DATA: FlatNode[] = [\n  {\n    id: 0,\n    label: 'Expand to load',\n    level: 0,\n    expandable: true\n  },\n  {\n    id: 1,\n    label: 'Expand to load',\n    level: 0,\n    expandable: true\n  }\n];\n\nfunction getChildren(node: FlatNode): Observable<FlatNode[]> {\n  return of([\n    {\n      id: Date.now(),\n      label: `Child Node (level-${node.level + 1})`,\n      level: node.level + 1,\n      expandable: true\n    },\n    {\n      id: Date.now(),\n      label: `Child Node (level-${node.level + 1})`,\n      level: node.level + 1,\n      expandable: true\n    },\n    {\n      id: Date.now(),\n      label: `Leaf Node (level-${node.level + 1})`,\n      level: node.level + 1,\n      expandable: false\n    }\n  ]).pipe(delay(500));\n}\n\nclass DynamicDatasource implements DataSource<FlatNode> {\n  private flattenedData: BehaviorSubject<FlatNode[]>;\n  private childrenLoadedSet = new Set<FlatNode>();\n\n  constructor(private treeControl: TreeControl<FlatNode>, initData: FlatNode[]) {\n    this.flattenedData = new BehaviorSubject<FlatNode[]>(initData);\n    treeControl.dataNodes = initData;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<FlatNode[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this.treeControl.expansionModel.changed.pipe(tap(change => this.handleExpansionChange(change))),\n      this.flattenedData\n    ];\n    return merge(...changes).pipe(\n      map(() => {\n        return this.expandFlattenedNodes(this.flattenedData.getValue());\n      })\n    );\n  }\n\n  expandFlattenedNodes(nodes: FlatNode[]): FlatNode[] {\n    const treeControl = this.treeControl;\n    const results: FlatNode[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= treeControl.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (treeControl.isExpandable(node)) {\n        currentExpand[treeControl.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n\n  handleExpansionChange(change: SelectionChange<FlatNode>): void {\n    if (change.added) {\n      change.added.forEach(node => this.loadChildren(node));\n    }\n  }\n\n  loadChildren(node: FlatNode): void {\n    if (this.childrenLoadedSet.has(node)) {\n      return;\n    }\n    node.loading = true;\n    getChildren(node).subscribe(children => {\n      node.loading = false;\n      const flattenedData = this.flattenedData.getValue();\n      const index = flattenedData.indexOf(node);\n      if (index !== -1) {\n        flattenedData.splice(index + 1, 0, ...children);\n        this.childrenLoadedSet.add(node);\n      }\n      this.flattenedData.next(flattenedData);\n    });\n  }\n\n  disconnect(): void {\n    this.flattenedData.complete();\n  }\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-dynamic',\n  template: `\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        {{ node.label }}\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle *ngIf=\"!node.loading\">\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-toggle *ngIf=\"node.loading\" nzTreeNodeNoopToggle>\n          <i nz-icon nzType=\"loading\" nzTreeNodeToggleActiveIcon></i>\n        </nz-tree-node-toggle>\n        {{ node.label }}\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewDynamicComponent implements AfterViewInit {\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  dataSource = new DynamicDatasource(this.treeControl, TREE_DATA);\n\n  constructor() {}\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  ngAfterViewInit(): void {}\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface TreeNode {\n  name: string;\n  disabled?: boolean;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: '0-0',\n    disabled: true,\n    children: [{ name: '0-0-0' }, { name: '0-0-1' }, { name: '0-0-2' }]\n  },\n  {\n    name: '0-1',\n    children: [\n      {\n        name: '0-1-0',\n        children: [{ name: '0-1-0-0' }, { name: '0-1-0-1' }]\n      },\n      {\n        name: '0-1-1',\n        children: [{ name: '0-1-1-0' }, { name: '0-1-1-1' }]\n      }\n    ]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  disabled: boolean;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-checkbox',\n  template: `\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        <nz-tree-node-checkbox\n          [nzDisabled]=\"node.disabled\"\n          [nzChecked]=\"checklistSelection.isSelected(node)\"\n          (nzClick)=\"leafItemSelectionToggle(node)\"\n        ></nz-tree-node-checkbox>\n        <nz-tree-node-option [nzDisabled]=\"node.disabled\" (nzClick)=\"leafItemSelectionToggle(node)\">\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-checkbox\n          [nzDisabled]=\"node.disabled\"\n          [nzChecked]=\"descendantsAllSelected(node)\"\n          [nzIndeterminate]=\"descendantsPartiallySelected(node)\"\n          (nzClick)=\"itemSelectionToggle(node)\"\n        ></nz-tree-node-checkbox>\n        <nz-tree-node-option [nzDisabled]=\"node.disabled\" (nzClick)=\"itemSelectionToggle(node)\">\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewCheckboxComponent implements AfterViewInit {\n  private transformer = (node: TreeNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.name === node.name\n        ? existingNode\n        : {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n            disabled: !!node.disabled\n          };\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n  flatNodeMap = new Map<FlatNode, TreeNode>();\n  nestedNodeMap = new Map<TreeNode, FlatNode>();\n  checklistSelection = new SelectionModel<FlatNode>(true);\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  ngAfterViewInit(): void {}\n\n  descendantsAllSelected(node: FlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return (\n      descendants.length > 0 &&\n      descendants.every(child => {\n        return this.checklistSelection.isSelected(child);\n      })\n    );\n  }\n\n  descendantsPartiallySelected(node: FlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  leafItemSelectionToggle(node: FlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  itemSelectionToggle(node: FlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\n    this.checkAllParentsSelection(node);\n  }\n\n  checkAllParentsSelection(node: FlatNode): void {\n    let parent: FlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  checkRootNodeSelection(node: FlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected =\n      descendants.length > 0 &&\n      descendants.every(child => {\n        return this.checklistSelection.isSelected(child);\n      });\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  getParentNode(node: FlatNode): FlatNode | null {\n    const currentLevel = node.level;\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (currentNode.level < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ShareModule } from '../share/share.module';\nimport { moduleList } from './module';\n\nimport { NzDemoTreeViewBasicComponent } from './basic';\nimport { NzDemoTreeViewCheckboxComponent } from './checkbox';\nimport { NzDemoTreeViewDirectoryComponent } from './directory';\nimport { NzDemoTreeViewDynamicComponent } from './dynamic';\nimport { NzDemoTreeViewEditableComponent } from './editable';\nimport { NzDemoTreeViewLineComponent } from './line';\nimport { NzDemoTreeViewSearchComponent } from './search';\nimport { NzDemoTreeViewVirtualScrollComponent } from './virtual-scroll';\nimport { NzDemoTreeViewZhComponent } from './zh.component';\nimport { NzDemoTreeViewEnComponent } from './en.component';\n\n\n@NgModule({\n  imports     : [\n    ShareModule,\n    ...moduleList,\n    RouterModule.forChild([\n      { path: 'en', component: NzDemoTreeViewEnComponent },\n      { path: 'zh', component: NzDemoTreeViewZhComponent }\n    ])\n  ],\n  declarations: [\n\t\tNzDemoTreeViewBasicComponent,\n\t\tNzDemoTreeViewCheckboxComponent,\n\t\tNzDemoTreeViewDirectoryComponent,\n\t\tNzDemoTreeViewDynamicComponent,\n\t\tNzDemoTreeViewEditableComponent,\n\t\tNzDemoTreeViewLineComponent,\n\t\tNzDemoTreeViewSearchComponent,\n\t\tNzDemoTreeViewVirtualScrollComponent,\n\t\tNzDemoTreeViewZhComponent,\n\t\tNzDemoTreeViewEnComponent,\n\n  ],\nentryComponents: [\n  \n]\n})\nexport class NzDemoTreeViewModule {\n\n}\n","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../share/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-tree-view',\n  preserveWhitespaces: false,\n  templateUrl  : './en.html'\n})\nexport class NzDemoTreeViewEnComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes!: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-tree-view-demo-basic\" nzTitle=\"basic\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-checkbox\" nzTitle=\"checkbox\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-directory\" nzTitle=\"Directory\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-dynamic\" nzTitle=\"Load data asynchronously\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-line\" nzTitle=\"Tree with line\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-editable\" nzTitle=\"editable\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-search\" nzTitle=\"search\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-virtual-scroll\" nzTitle=\"Virtual Scroll\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Tree View<span class=\"subtitle\"></span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" aria-label=\"Edit this page on Github\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/doc/index.en-US.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><p>More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.\nWith better performance and customizability.</p>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzTreeViewModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/tree-view'</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>Examples</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"Expand All Code\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"16\">\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"basic\"\n  [nzId]=\"'components-tree-view-demo-basic'\"\n  nzSelector=\"nz-demo-tree-view-basic\"\n  [nzLink]=\"'components-tree-view-demo-basic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-basic <name>\"\n  nzComponentName=\"NzDemoTreeViewBasicComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/basic.md'\">\n\t<nz-demo-tree-view-basic demo></nz-demo-tree-view-basic>\n\t<div intro ngNonBindable>\n\t\t<p>The most basic usage including select, disable and expand features.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Directory\"\n  [nzId]=\"'components-tree-view-demo-directory'\"\n  nzSelector=\"nz-demo-tree-view-directory\"\n  [nzLink]=\"'components-tree-view-demo-directory'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-directory <name>\"\n  nzComponentName=\"NzDemoTreeViewDirectoryComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/directory.md'\">\n\t<nz-demo-tree-view-directory demo></nz-demo-tree-view-directory>\n\t<div intro ngNonBindable>\n\t\t<p>Directory tree.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Tree with line\"\n  [nzId]=\"'components-tree-view-demo-line'\"\n  nzSelector=\"nz-demo-tree-view-line\"\n  [nzLink]=\"'components-tree-view-demo-line'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-line <name>\"\n  nzComponentName=\"NzDemoTreeViewLineComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/line.md'\">\n\t<nz-demo-tree-view-line demo></nz-demo-tree-view-line>\n\t<div intro ngNonBindable>\n\t\t<p>Tree with connected line between nodes.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"search\"\n  [nzId]=\"'components-tree-view-demo-search'\"\n  nzSelector=\"nz-demo-tree-view-search\"\n  [nzLink]=\"'components-tree-view-demo-search'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-search <name>\"\n  nzComponentName=\"NzDemoTreeViewSearchComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/search.md'\">\n\t<nz-demo-tree-view-search demo></nz-demo-tree-view-search>\n\t<div intro ngNonBindable>\n\t\t<p>Searchable Tree.</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"checkbox\"\n  [nzId]=\"'components-tree-view-demo-checkbox'\"\n  nzSelector=\"nz-demo-tree-view-checkbox\"\n  [nzLink]=\"'components-tree-view-demo-checkbox'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-checkbox <name>\"\n  nzComponentName=\"NzDemoTreeViewCheckboxComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/checkbox.md'\">\n\t<nz-demo-tree-view-checkbox demo></nz-demo-tree-view-checkbox>\n\t<div intro ngNonBindable>\n\t\t<p>Tree with checkboxes.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Load data asynchronously\"\n  [nzId]=\"'components-tree-view-demo-dynamic'\"\n  nzSelector=\"nz-demo-tree-view-dynamic\"\n  [nzLink]=\"'components-tree-view-demo-dynamic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-dynamic <name>\"\n  nzComponentName=\"NzDemoTreeViewDynamicComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/dynamic.md'\">\n\t<nz-demo-tree-view-dynamic demo></nz-demo-tree-view-dynamic>\n\t<div intro ngNonBindable>\n\t\t<p>To load data asynchronously when click to expand a treeNode.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"editable\"\n  [nzId]=\"'components-tree-view-demo-editable'\"\n  nzSelector=\"nz-demo-tree-view-editable\"\n  [nzLink]=\"'components-tree-view-demo-editable'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-editable <name>\"\n  nzComponentName=\"NzDemoTreeViewEditableComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/editable.md'\">\n\t<nz-demo-tree-view-editable demo></nz-demo-tree-view-editable>\n\t<div intro ngNonBindable>\n\t\t<p>Tree with add and delete actions.</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"Virtual Scroll\"\n  [nzId]=\"'components-tree-view-demo-virtual-scroll'\"\n  nzSelector=\"nz-demo-tree-view-virtual-scroll\"\n  [nzLink]=\"'components-tree-view-demo-virtual-scroll'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-virtual-scroll <name>\"\n  nzComponentName=\"NzDemoTreeViewVirtualScrollComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/virtual-scroll.md'\">\n\t<nz-demo-tree-view-virtual-scroll demo></nz-demo-tree-view-virtual-scroll>\n\t<div intro ngNonBindable>\n\t\t<p>Use virtual scroll.</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div>\n<section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-tree-view\"><span>nz-tree-view</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-view'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeControl]</td>\n<td>The tree controller</td>\n<td><a href=\"https://material.angular.io/cdk/tree/api#TreeControl\" target=\"_blank\" rel=\"noopener\">TreeControl</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>[nzDataSource]</td>\n<td>The data array to render</td>\n<td><a href=\"https://material.angular.io/cdk/tree/overview#data-source\" target=\"_blank\" rel=\"noopener\">DataSource</a>&lt;T&gt;</td>\n<td>Observable&lt;T[]&gt;</td>\n</tr>\n<tr>\n<td>[nzDirectoryTree]</td>\n<td>Whether nodes are displayed as directory style</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzBlockNode]</td>\n<td>Whether tree nodes fill remaining horizontal space</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-virtual-scroll-view\"><span>nz-tree-virtual-scroll-view</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-virtual-scroll-view'\" class=\"anchor\">#</a></h3><p>The virtual scroll tree view, which can be accessed from\nthe <a href=\"https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport\" target=\"_blank\" rel=\"noopener\">CdkVirtualScrollViewport</a> instance through\nthe <code>virtualScrollViewport</code> member of the component instance.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeControl]</td>\n<td>The tree controller</td>\n<td><a href=\"https://material.angular.io/cdk/tree/api#TreeControl\" target=\"_blank\" rel=\"noopener\">TreeControl</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>[nzDataSource]</td>\n<td>The data array to render</td>\n<td><a href=\"https://material.angular.io/cdk/tree/overview#data-source\" target=\"_blank\" rel=\"noopener\">DataSource</a>&lt;T&gt;</td>\n<td>Observable&lt;T[]&gt;</td>\n</tr>\n<tr>\n<td>[nzDirectoryTree]</td>\n<td>Whether nodes are displayed as directory style</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzBlockNode]</td>\n<td>Whether tree nodes fill remaining horizontal space</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzNodeWidth]</td>\n<td>The width of nodes in the tree (in pixels)</td>\n<td><code>number</code></td>\n<td><code>28</code></td>\n</tr>\n<tr>\n<td>[nzMinBufferPx]</td>\n<td>The minimum amount of buffer rendered allowed outside the viewport (in pixels)</td>\n<td><code>number</code></td>\n<td><code>28 * 5</code></td>\n</tr>\n<tr>\n<td>[nzMaxBufferPx]</td>\n<td>The amount of buffer required for rendering new nodes (in pixels)</td>\n<td><code>number</code></td>\n<td><code>28 * 10</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"[nztreenodedef]\"><span>[nzTreeNodeDef]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nztreenodedef]'\" class=\"anchor\">#</a></h3><p>Directive to define <code>nz-tree-node</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeNodeDefWhen]</td>\n<td>A matching function which indicates whether inputted node should be used. It matches the very first node that makes this function return <code>true</code>. If no nodes that makes this function return <code>true</code>, the node which does not define this function would be matched instead.</td>\n<td><code>(index: number, nodeData: T) =&gt; boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node\"><span>nz-tree-node</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node'\" class=\"anchor\">#</a></h3><p>The tree node container component, which needs to be defined by the <code>nzTreeNodeDef</code> directive.</p>\n<h3 id=\"[nztreenodepadding]\"><span>[nzTreeNodePadding]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nztreenodepadding]'\" class=\"anchor\">#</a></h3><pre class=\"language-html\"><code>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">nzTreeNodePadding</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Show node indentation by adding <code>padding</code> <strong>Best Performance</strong>.</p>\n<h3 id=\"nztreenodeindentline\"><span>nzTreeNodeIndentLine</span><a onclick=\"window.location.hash = 'nztreenodeindentline'\" class=\"anchor\">#</a></h3><pre class=\"language-html\"><code>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">nzTreeNodeIndentLine</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Show node indentation by adding indent lines.</p>\n<h3 id=\"nz-tree-node-toggle\"><span>nz-tree-node-toggle</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-toggle'\" class=\"anchor\">#</a></h3><p>A toggle which is used to expand / collapse the node.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeNodeToggleRecursive]</td>\n<td>Is it recursively expand / collapse</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node-toggle[nztreenodenooptoggle]\"><span>nz-tree-node-toggle[nzTreeNodeNoopToggle]</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-toggle[nztreenodenooptoggle]'\" class=\"anchor\">#</a></h3><p>A toggle that does no actions. This can be used for placeholders or displays icons.</p>\n<h3 id=\"[nz-icon][nztreenodetogglerotateicon]\"><span>[nz-icon][nzTreeNodeToggleRotateIcon]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-icon][nztreenodetogglerotateicon]'\" class=\"anchor\">#</a></h3><p>Define an icon in the toggle, which it will automatically rotate depending on the collapse/expand state.</p>\n<h3 id=\"[nz-icon][nztreenodetoggleactiveicon]\"><span>[nz-icon][nzTreeNodeToggleActiveIcon]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-icon][nztreenodetoggleactiveicon]'\" class=\"anchor\">#</a></h3><p>Define an icon in the toggle for an active style, which it can be used for the loading state.</p>\n<h3 id=\"nz-tree-node-option\"><span>nz-tree-node-option</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-option'\" class=\"anchor\">#</a></h3><p>Define the selectable feature of a node.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzSelected]</td>\n<td>Whether the option is selected</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzDisabled]</td>\n<td>Whether the option is disabled</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>(nzClick)</td>\n<td>Event on click</td>\n<td><code>EventEmitter&lt;MouseEvent&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node-checkbox\"><span>nz-tree-node-checkbox</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-checkbox'\" class=\"anchor\">#</a></h3><p>Define the checkbox feature of a node.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzChecked]</td>\n<td>Whether the checkbox is checked</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzDisabled]</td>\n<td>Whether the checkbox is disabled</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzIndeterminate]</td>\n<td>Whether the checkbox is indeterminate</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>(nzClick)</td>\n<td>Event on click</td>\n<td><code>EventEmitter&lt;MouseEvent&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h2 id=\"classes\"><span>Classes</span><a onclick=\"window.location.hash = 'classes'\" class=\"anchor\">#</a></h2><h3 id=\"<strong>nztreeflatdatasource-extends-datasource</strong>\"><span><strong>NzTreeFlatDataSource extends DataSource</strong></span><a onclick=\"window.location.hash = '<strong>nztreeflatdatasource-extends-datasource</strong>'\" class=\"anchor\">#</a></h3><h3 id=\"construction-parameters\"><span>Construction Parameters</span><a onclick=\"window.location.hash = 'construction-parameters'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>treeControl: FlatTreeControl&lt;F, K&gt;</code></td>\n<td>The tree controller.</td>\n</tr>\n<tr>\n<td><code>treeFlattener: NzTreeFlattener&lt;T, F, K&gt;</code></td>\n<td>Flattener for convert nested nodes <code>T</code> into flattened nodes <code>F</code>.</td>\n</tr>\n<tr>\n<td><code>initialData: T[] = []</code></td>\n<td>Initialized data.</td>\n</tr>\n</tbody></table>\n<h3 id=\"methods\"><span>Methods</span><a onclick=\"window.location.hash = 'methods'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>connect(collectionViewer: CollectionViewer): Observable&lt;F[]&gt;</code></td>\n<td>Call from the TreeView component to listen for data updates.</td>\n</tr>\n<tr>\n<td><code>disconnect(): void</code></td>\n<td>Call when TreeView component is destroyed.</td>\n</tr>\n<tr>\n<td><code>setData(value: T[]): void</code></td>\n<td>Set the origin data</td>\n</tr>\n<tr>\n<td><code>getData(): T[]</code></td>\n<td>Get the origin data</td>\n</tr>\n</tbody></table>\n<h3 id=\"<strong>nztreeflattener</strong>\"><span><strong>NzTreeFlattener</strong></span><a onclick=\"window.location.hash = '<strong>nztreeflattener</strong>'\" class=\"anchor\">#</a></h3><p>Convert nested data with child nodes into node data with level information.</p>\n<h3 id=\"construction-parameters\"><span>Construction Parameters</span><a onclick=\"window.location.hash = 'construction-parameters'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>transformFunction: (node: T, level: number) =&gt; F</code></td>\n<td>Receive a nested node and return a flattened node</td>\n</tr>\n<tr>\n<td><code>getLevel: (node: F) =&gt; number</code></td>\n<td>Define the method to get the <code>level</code> property</td>\n</tr>\n<tr>\n<td><code>isExpandable: (node: F) =&gt; boolean</code></td>\n<td>Methods for defining whether a node is expandable</td>\n</tr>\n<tr>\n<td><code>getChildren: (node: T) =&gt; Observable&lt;T[]&gt; | T[] | undefined | null</code></td>\n<td>Define methods to get children nodes from nested node</td>\n</tr>\n</tbody></table>\n<h3 id=\"methods\"><span>Methods</span><a onclick=\"window.location.hash = 'methods'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>flattenNodes(structuredData: T[]): F[]</code></td>\n<td>Receive nested data and return flattened data</td>\n</tr>\n<tr>\n<td><code>expandFlattenedNodes(nodes: F[], treeControl: TreeControl&lt;F, K&gt;): F[]</code></td>\n<td>Get flattened node data based on expansion status</td>\n</tr>\n</tbody></table>\n</section></article>","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface TreeNode {\n  name: string;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: 'parent 1',\n    children: [\n      {\n        name: 'parent 1-0',\n        children: [{ name: 'leaf' }, { name: 'leaf' }]\n      },\n      {\n        name: 'parent 1-1',\n        children: [\n          { name: 'leaf' },\n          {\n            name: 'parent 1-1-0',\n            children: [{ name: 'leaf' }, { name: 'leaf' }]\n          },\n          { name: 'leaf' }\n        ]\n      }\n    ]\n  },\n  {\n    name: 'parent 2',\n    children: [{ name: 'leaf' }, { name: 'leaf' }]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-line',\n  template: `\n    Show Leaf Icon:\n    <nz-switch [(ngModel)]=\"showLeafIcon\"></nz-switch>\n\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodeIndentLine>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle *ngIf=\"showLeafIcon\">\n          <i nz-icon nzType=\"file\" nzTheme=\"outline\"></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodeIndentLine>\n        <nz-tree-node-toggle>\n          <i nz-icon [nzType]=\"treeControl.isExpanded(node) ? 'minus-square' : 'plus-square'\" nzTheme=\"outline\"></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewLineComponent implements AfterViewInit {\n  private transformer = (node: TreeNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level\n    };\n  };\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  showLeafIcon = false;\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  ngAfterViewInit(): void {\n    this.treeControl.expandAll();\n  }\n\n  getNode(name: string): FlatNode | null {\n    return this.treeControl.dataNodes.find(n => n.name === name) || null;\n  }\n}\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { auditTime, map } from 'rxjs/operators';\n\ninterface TreeNode {\n  name: string;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: '0-0',\n    children: [{ name: '0-0-0' }, { name: '0-0-1' }, { name: '0-0-2' }]\n  },\n  {\n    name: '0-1',\n    children: [\n      {\n        name: '0-1-0',\n        children: [{ name: '0-1-0-0' }, { name: '0-1-0-1' }]\n      },\n      {\n        name: '0-1-1',\n        children: [{ name: '0-1-1-0' }, { name: '0-1-1-1' }]\n      }\n    ]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\nclass FilteredTreeResult {\n  constructor(public treeData: TreeNode[], public needsToExpanded: TreeNode[] = []) {}\n}\n\n/**\n * From https://stackoverflow.com/a/45290208/6851836\n */\nfunction filterTreeData(data: TreeNode[], value: string): FilteredTreeResult {\n  const needsToExpanded = new Set<TreeNode>();\n  const _filter = (node: TreeNode, result: TreeNode[]) => {\n    if (node.name.search(value) !== -1) {\n      result.push(node);\n      return result;\n    }\n    if (Array.isArray(node.children)) {\n      const nodes = node.children.reduce((a, b) => _filter(b, a), [] as TreeNode[]);\n      if (nodes.length) {\n        const parentNode = { ...node, children: nodes };\n        needsToExpanded.add(parentNode);\n        result.push(parentNode);\n      }\n    }\n    return result;\n  };\n  const treeData = data.reduce((a, b) => _filter(b, a), [] as TreeNode[]);\n  return new FilteredTreeResult(treeData, [...needsToExpanded]);\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-search',\n  template: `\n    <nz-input-group [nzSuffix]=\"suffixIcon\">\n      <input type=\"text\" nz-input placeholder=\"Search\" ngModel (ngModelChange)=\"searchValue$.next($event)\" />\n    </nz-input-group>\n    <ng-template #suffixIcon>\n      <i nz-icon nzType=\"search\"></i>\n    </ng-template>\n\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\" nzNoAnimation>\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        <span [innerHTML]=\"node.name | nzHighlight: searchValue:'i':'highlight'\"></span>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        <span [innerHTML]=\"node.name | nzHighlight: searchValue:'i':'highlight'\"></span>\n      </nz-tree-node>\n    </nz-tree-view>\n  `,\n  styles: [\n    `\n      nz-input-group {\n        margin-bottom: 8px;\n      }\n\n      ::ng-deep .highlight {\n        color: red;\n      }\n    `\n  ]\n})\nexport class NzDemoTreeViewSearchComponent {\n  flatNodeMap = new Map<FlatNode, TreeNode>();\n  nestedNodeMap = new Map<TreeNode, FlatNode>();\n  expandedNodes: TreeNode[] = [];\n  searchValue = '';\n  originData$ = new BehaviorSubject(TREE_DATA);\n  searchValue$ = new BehaviorSubject<string>('');\n\n  transformer = (node: TreeNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.name === node.name\n        ? existingNode\n        : {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level\n          };\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n\n  treeControl = new FlatTreeControl<FlatNode, TreeNode>(\n    node => node.level,\n    node => node.expandable,\n    {\n      trackBy: flatNode => this.flatNodeMap.get(flatNode)!\n    }\n  );\n\n  treeFlattener = new NzTreeFlattener<TreeNode, FlatNode, TreeNode>(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  filteredData$ = combineLatest([\n    this.originData$,\n    this.searchValue$.pipe(\n      auditTime(300),\n      map(value => (this.searchValue = value))\n    )\n  ]).pipe(map(([data, value]) => (value ? filterTreeData(data, value) : new FilteredTreeResult(data))));\n\n  constructor() {\n    this.filteredData$.subscribe(result => {\n      this.dataSource.setData(result.treeData);\n\n      const hasSearchValue = !!this.searchValue;\n      if (hasSearchValue) {\n        if (this.expandedNodes.length === 0) {\n          this.expandedNodes = this.treeControl.expansionModel.selected;\n          this.treeControl.expansionModel.clear();\n        }\n        this.treeControl.expansionModel.select(...result.needsToExpanded);\n      } else {\n        if (this.expandedNodes.length) {\n          this.treeControl.expansionModel.clear();\n          this.treeControl.expansionModel.select(...this.expandedNodes);\n          this.expandedNodes = [];\n        }\n      }\n    });\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n}\n","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { NzCodeBoxComponent } from '../share/codebox/codebox.component';\n\n@Component({\n  selector     : 'nz-demo-tree-view',\n  preserveWhitespaces: false,\n  templateUrl  : './zh.html'\n})\nexport class NzDemoTreeViewZhComponent {\n  expanded = false;\n  @ViewChildren(NzCodeBoxComponent) codeBoxes!: QueryList<NzCodeBoxComponent>;\n\n  goLink(link: string): void {\n    if (window) {\n      window.location.hash = link;\n    }\n  }\n\n  expandAllCode(): void {\n    this.expanded = !this.expanded;\n    this.codeBoxes.forEach(code => {\n      code.nzExpanded = this.expanded;\n      code.expandCode(this.expanded);\n      code.check();\n    });\n  }\n\n}\n","<article>\n<nz-affix class=\"toc-affix\" [nzOffsetTop]=\"16\">\n    <nz-anchor [nzAffix]=\"false\" nzShowInkInFixed (nzClick)=\"goLink($event)\">\n        <nz-link nzHref=\"#components-tree-view-demo-basic\" nzTitle=\"基本\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-checkbox\" nzTitle=\"选择框\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-directory\" nzTitle=\"目录\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-dynamic\" nzTitle=\"异步加载数据\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-line\" nzTitle=\"带连接线的树\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-editable\" nzTitle=\"可编辑\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-search\" nzTitle=\"搜索\"></nz-link><nz-link nzHref=\"#components-tree-view-demo-virtual-scroll\" nzTitle=\"虚拟滚动\"></nz-link><nz-link nzHref=\"#api\" nzTitle=\"API\"></nz-link>\n    </nz-anchor>\n</nz-affix><section class=\"markdown\">\n\t<h1>Tree View<span class=\"subtitle\">树视图</span><span class=\"widget\"></span>\n\t<a class=\"edit-button\" aria-label=\"Edit this page on Github\" href=\"https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/doc/index.zh-CN.md\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t<i nz-icon nzType=\"edit\"></i></a>\n</h1>\n\t<section class=\"markdown\" ngNonBindable>\n\t\t<h2 id=\"何时使用\"><span>何时使用</span><a onclick=\"window.location.hash = '何时使用'\" class=\"anchor\">#</a></h2><p>更基础的 Tree 组件，允许在模版中定义每个组成部分，并手动管理状态。相比封装好的 Tree 组件具有更高的定制度和更好的性能。</p>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzTreeViewModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/tree-view'</span><span class=\"token punctuation\">;</span></code></pre>\n\n\t</section>\n\t\n\t<h2>\n\t\t<span>代码演示</span>\n\t\t<i nz-icon nzType=\"appstore\" class=\"code-box-expand-trigger\" nz-tooltip nzTooltipTitle=\"展开全部代码\" (click)=\"expandAllCode()\"></i>\n\t</h2>\n</section><div nz-row [nzGutter]=\"16\">\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"基本\"\n  [nzId]=\"'components-tree-view-demo-basic'\"\n  nzSelector=\"nz-demo-tree-view-basic\"\n  [nzLink]=\"'components-tree-view-demo-basic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-basic <name>\"\n  nzComponentName=\"NzDemoTreeViewBasicComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/basic.md'\">\n\t<nz-demo-tree-view-basic demo></nz-demo-tree-view-basic>\n\t<div intro ngNonBindable>\n\t\t<p>最简单的用法，选中，禁用，展开等功能。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"目录\"\n  [nzId]=\"'components-tree-view-demo-directory'\"\n  nzSelector=\"nz-demo-tree-view-directory\"\n  [nzLink]=\"'components-tree-view-demo-directory'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-directory <name>\"\n  nzComponentName=\"NzDemoTreeViewDirectoryComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/directory.md'\">\n\t<nz-demo-tree-view-directory demo></nz-demo-tree-view-directory>\n\t<div intro ngNonBindable>\n\t\t<p>目录树</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"带连接线的树\"\n  [nzId]=\"'components-tree-view-demo-line'\"\n  nzSelector=\"nz-demo-tree-view-line\"\n  [nzLink]=\"'components-tree-view-demo-line'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-line <name>\"\n  nzComponentName=\"NzDemoTreeViewLineComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/line.md'\">\n\t<nz-demo-tree-view-line demo></nz-demo-tree-view-line>\n\t<div intro ngNonBindable>\n\t\t<p>节点之间带连接线的树，常用于文件目录结构展示。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"搜索\"\n  [nzId]=\"'components-tree-view-demo-search'\"\n  nzSelector=\"nz-demo-tree-view-search\"\n  [nzLink]=\"'components-tree-view-demo-search'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-search <name>\"\n  nzComponentName=\"NzDemoTreeViewSearchComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/search.md'\">\n\t<nz-demo-tree-view-search demo></nz-demo-tree-view-search>\n\t<div intro ngNonBindable>\n\t\t<p>可搜索的树。</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n\t<div nz-col [nzXl]=\"12\" [nzSpan]=\"24\">\n\t\t<nz-code-box\n  nzTitle=\"选择框\"\n  [nzId]=\"'components-tree-view-demo-checkbox'\"\n  nzSelector=\"nz-demo-tree-view-checkbox\"\n  [nzLink]=\"'components-tree-view-demo-checkbox'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-checkbox <name>\"\n  nzComponentName=\"NzDemoTreeViewCheckboxComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/checkbox.md'\">\n\t<nz-demo-tree-view-checkbox demo></nz-demo-tree-view-checkbox>\n\t<div intro ngNonBindable>\n\t\t<p>带选择框的树。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"异步加载数据\"\n  [nzId]=\"'components-tree-view-demo-dynamic'\"\n  nzSelector=\"nz-demo-tree-view-dynamic\"\n  [nzLink]=\"'components-tree-view-demo-dynamic'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-dynamic <name>\"\n  nzComponentName=\"NzDemoTreeViewDynamicComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/dynamic.md'\">\n\t<nz-demo-tree-view-dynamic demo></nz-demo-tree-view-dynamic>\n\t<div intro ngNonBindable>\n\t\t<p>点击展开节点，动态加载数据。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"可编辑\"\n  [nzId]=\"'components-tree-view-demo-editable'\"\n  nzSelector=\"nz-demo-tree-view-editable\"\n  [nzLink]=\"'components-tree-view-demo-editable'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-editable <name>\"\n  nzComponentName=\"NzDemoTreeViewEditableComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/editable.md'\">\n\t<nz-demo-tree-view-editable demo></nz-demo-tree-view-editable>\n\t<div intro ngNonBindable>\n\t\t<p>带添加和删除功能的树。</p>\n\n\t</div>\n</nz-code-box>\n<nz-code-box\n  nzTitle=\"虚拟滚动\"\n  [nzId]=\"'components-tree-view-demo-virtual-scroll'\"\n  nzSelector=\"nz-demo-tree-view-virtual-scroll\"\n  [nzLink]=\"'components-tree-view-demo-virtual-scroll'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:tree-view-virtual-scroll <name>\"\n  nzComponentName=\"NzDemoTreeViewVirtualScrollComponent\"\n  nzIframeSource=\"null\"\n  [nzIframeHeight]=\"null\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/tree-view/demo/virtual-scroll.md'\">\n\t<nz-demo-tree-view-virtual-scroll demo></nz-demo-tree-view-virtual-scroll>\n\t<div intro ngNonBindable>\n\t\t<p>使用虚拟滚动。</p>\n\n\t</div>\n</nz-code-box>\n\n\t</div>\n</div>\n<section class=\"markdown api-container\" ngNonBindable><h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-tree-view\"><span>nz-tree-view</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-view'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeControl]</td>\n<td>树控制器</td>\n<td><a href=\"https://material.angular.io/cdk/tree/api#TreeControl\" target=\"_blank\" rel=\"noopener\">TreeControl</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>[nzDataSource]</td>\n<td>用于渲染树的数组数据</td>\n<td><a href=\"https://material.angular.io/cdk/tree/overview#data-source\" target=\"_blank\" rel=\"noopener\">DataSource</a>&lt;T&gt;</td>\n<td>Observable&lt;T[]&gt;</td>\n</tr>\n<tr>\n<td>[nzDirectoryTree]</td>\n<td>节点是否以文件夹样式显示</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzBlockNode]</td>\n<td>节点是否占据整行</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-virtual-scroll-view\"><span>nz-tree-virtual-scroll-view</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-virtual-scroll-view'\" class=\"anchor\">#</a></h3><p>虚拟滚动的树视图，可以通过组件实例上的 <code>virtualScrollViewport</code> 成员访问 <a href=\"https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport\" target=\"_blank\" rel=\"noopener\">CdkVirtualScrollViewport</a> 实例。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeControl]</td>\n<td>树控制器</td>\n<td><a href=\"https://material.angular.io/cdk/tree/api#TreeControl\" target=\"_blank\" rel=\"noopener\">TreeControl</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>[nzDataSource]</td>\n<td>用于渲染树的数组数据</td>\n<td><a href=\"https://material.angular.io/cdk/tree/overview#data-source\" target=\"_blank\" rel=\"noopener\">DataSource</a>&lt;T&gt;</td>\n<td>Observable&lt;T[]&gt;</td>\n</tr>\n<tr>\n<td>[nzDirectoryTree]</td>\n<td>节点是否以文件夹样式显示</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzBlockNode]</td>\n<td>节点是否占据整行</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzNodeWidth]</td>\n<td>节点的宽度(px)</td>\n<td><code>number</code></td>\n<td><code>28</code></td>\n</tr>\n<tr>\n<td>[nzMinBufferPx]</td>\n<td>超出渲染区的最小缓存区大小(px)</td>\n<td><code>number</code></td>\n<td><code>28 * 5</code></td>\n</tr>\n<tr>\n<td>[nzMaxBufferPx]</td>\n<td>需要渲染新节点时的缓冲区大小(px)</td>\n<td><code>number</code></td>\n<td><code>28 * 10</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"[nztreenodedef]\"><span>[nzTreeNodeDef]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nztreenodedef]'\" class=\"anchor\">#</a></h3><p>用于定义 <code>nz-tree-node</code> 的指令。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeNodeDefWhen]</td>\n<td>用于定义是否使用此节点的方法，优先匹配第一个返回 <code>true</code> 的节点。如果没有返回 <code>true</code> 的节点，则匹配未定义此方法的节点。</td>\n<td><code>(index: number, nodeData: T) =&gt; boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node\"><span>nz-tree-node</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node'\" class=\"anchor\">#</a></h3><p>树节点容器组件，需要通过 <code>nzTreeNodeDef</code> 指令定义。</p>\n<h3 id=\"[nztreenodepadding]\"><span>[nzTreeNodePadding]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nztreenodepadding]'\" class=\"anchor\">#</a></h3><pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">nzTreeNodePadding</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>以添加 <code>padding</code> 的方式显示节点缩进 <strong>性能最好</strong>。</p>\n<h3 id=\"nztreenodeindentline\"><span>nzTreeNodeIndentLine</span><a onclick=\"window.location.hash = 'nztreenodeindentline'\" class=\"anchor\">#</a></h3><pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree-node</span> <span class=\"token attr-name\">nzTreeNodeIndentLine</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree-node</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>以添加缩进线的方式显示节点缩进。</p>\n<h3 id=\"nz-tree-node-toggle\"><span>nz-tree-node-toggle</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-toggle'\" class=\"anchor\">#</a></h3><p>切换部分，用于节点的展开/收起。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzTreeNodeToggleRecursive]</td>\n<td>是否为递归展开/收起</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node-toggle[nztreenodenooptoggle]\"><span>nz-tree-node-toggle[nzTreeNodeNoopToggle]</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-toggle[nztreenodenooptoggle]'\" class=\"anchor\">#</a></h3><p>不做任何操作的切换部分，可用于占位或者显示图标。</p>\n<h3 id=\"[nz-icon][nztreenodetogglerotateicon]\"><span>[nz-icon][nzTreeNodeToggleRotateIcon]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-icon][nztreenodetogglerotateicon]'\" class=\"anchor\">#</a></h3><p>定义切换部分中的图标，会随着展开收起状态自动旋转。</p>\n<h3 id=\"[nz-icon][nztreenodetoggleactiveicon]\"><span>[nz-icon][nzTreeNodeToggleActiveIcon]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-icon][nztreenodetoggleactiveicon]'\" class=\"anchor\">#</a></h3><p>定义切换部分中的图标，使其具有激活状态的样式，可用于 loading 图标。</p>\n<h3 id=\"nz-tree-node-option\"><span>nz-tree-node-option</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-option'\" class=\"anchor\">#</a></h3><p>定义节点中的可选择部分。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzSelected]</td>\n<td>是否选中</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzDisabled]</td>\n<td>是否禁用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>(nzClick)</td>\n<td>点击时的事件</td>\n<td><code>EventEmitter&lt;MouseEvent&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-tree-node-checkbox\"><span>nz-tree-node-checkbox</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-tree-node-checkbox'\" class=\"anchor\">#</a></h3><p>定义节点中的可勾选的部分。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[nzChecked]</td>\n<td>是否勾选</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzIndeterminate]</td>\n<td>是否为半选</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>[nzDisabled]</td>\n<td>是否禁用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>(nzClick)</td>\n<td>点击时的事件</td>\n<td><code>EventEmitter&lt;MouseEvent&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h2 id=\"classes\"><span>Classes</span><a onclick=\"window.location.hash = 'classes'\" class=\"anchor\">#</a></h2><h3 id=\"<strong>nztreeflatdatasource-extends-datasource</strong>\"><span><strong>NzTreeFlatDataSource extends DataSource</strong></span><a onclick=\"window.location.hash = '<strong>nztreeflatdatasource-extends-datasource</strong>'\" class=\"anchor\">#</a></h3><h3 id=\"构造参数\"><span>构造参数</span><a onclick=\"window.location.hash = '构造参数'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>treeControl: FlatTreeControl&lt;F, K&gt;</code></td>\n<td>Tree 控制器</td>\n</tr>\n<tr>\n<td><code>treeFlattener: NzTreeFlattener&lt;T, F, K&gt;</code></td>\n<td>用于将嵌套节点 <code>T</code> 处理为扁平节点 <code>F</code> 的展平器</td>\n</tr>\n<tr>\n<td><code>initialData: T[] = []</code></td>\n<td>初始化数据</td>\n</tr>\n</tbody></table>\n<h3 id=\"方法\"><span>方法</span><a onclick=\"window.location.hash = '方法'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>connect(collectionViewer: CollectionViewer): Observable&lt;F[]&gt;</code></td>\n<td>TreeView 组件中调用，用于获取数据的更新</td>\n</tr>\n<tr>\n<td><code>disconnect(): void</code></td>\n<td>TreeView 组件销毁时调用</td>\n</tr>\n<tr>\n<td><code>setData(value: T[]): void</code></td>\n<td>设置原始数据</td>\n</tr>\n<tr>\n<td><code>getData(): T[]</code></td>\n<td>获取原始数据</td>\n</tr>\n</tbody></table>\n<h3 id=\"<strong>nztreeflattener</strong>\"><span><strong>NzTreeFlattener</strong></span><a onclick=\"window.location.hash = '<strong>nztreeflattener</strong>'\" class=\"anchor\">#</a></h3><p>将具有子节点的嵌套数据转换为具有级别（level）信息的转换器类。</p>\n<h3 id=\"构造参数\"><span>构造参数</span><a onclick=\"window.location.hash = '构造参数'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>transformFunction: (node: T, level: number) =&gt; F</code></td>\n<td>接收一个嵌套节点，返回扁平节点</td>\n</tr>\n<tr>\n<td><code>getLevel: (node: F) =&gt; number</code></td>\n<td>定义获取 <code>level</code> 属性的方法</td>\n</tr>\n<tr>\n<td><code>isExpandable: (node: F) =&gt; boolean</code></td>\n<td>定义是否为可展开节点的方法</td>\n</tr>\n<tr>\n<td><code>getChildren: (node: T) =&gt; Observable&lt;T[]&gt; | T[] | undefined | null</code></td>\n<td>定义从嵌套数据中获取子节点的方法</td>\n</tr>\n</tbody></table>\n<h3 id=\"方法\"><span>方法</span><a onclick=\"window.location.hash = '方法'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>flattenNodes(structuredData: T[]): F[]</code></td>\n<td>接收嵌套数据，返回扁平数据</td>\n</tr>\n<tr>\n<td><code>expandFlattenedNodes(nodes: F[], treeControl: TreeControl&lt;F, K&gt;): F[]</code></td>\n<td>按 TreeControl 中的展开状态获取节点</td>\n</tr>\n</tbody></table>\n</section></article>","import { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface TreeNode {\n  name: string;\n  key: string;\n  children?: TreeNode[];\n}\n\nconst TREE_DATA: TreeNode[] = [\n  {\n    name: 'parent 1',\n    key: '1',\n    children: [\n      {\n        name: 'parent 1-0',\n        key: '1-0',\n        children: [\n          { name: 'leaf', key: '1-0-0' },\n          { name: 'leaf', key: '1-0-1' }\n        ]\n      },\n      {\n        name: 'parent 1-1',\n        key: '1-1',\n        children: [{ name: 'leaf', key: '1-1-0' }]\n      }\n    ]\n  },\n  {\n    key: '2',\n    name: 'parent 2',\n    children: [{ name: 'leaf', key: '2-0' }]\n  }\n];\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  key: string;\n  level: number;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-editable',\n  template: `\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\" [trackBy]=\"trackBy\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodeIndentLine>\n        <nz-tree-node-option\n          [nzDisabled]=\"node.disabled\"\n          [nzSelected]=\"selectListSelection.isSelected(node)\"\n          (nzClick)=\"selectListSelection.toggle(node)\"\n        >\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasNoContent\" nzTreeNodeIndentLine>\n        <input nz-input placeholder=\"Input node name\" nzSize=\"small\" #inputElement />\n        &nbsp;\n        <button nz-button nzSize=\"small\" (click)=\"saveNode(node, inputElement.value)\">Add</button>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodeIndentLine>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        {{ node.name }}\n        <button nz-button nzType=\"text\" nzSize=\"small\" (click)=\"addNewNode(node)\">\n          <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\n        </button>\n      </nz-tree-node>\n    </nz-tree-view>\n  `,\n  styles: [``]\n})\nexport class NzDemoTreeViewEditableComponent {\n  private transformer = (node: TreeNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.key === node.key\n        ? existingNode\n        : {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n            key: node.key\n          };\n    flatNode.name = node.name;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n\n  treeData = TREE_DATA;\n  flatNodeMap = new Map<FlatNode, TreeNode>();\n  nestedNodeMap = new Map<TreeNode, FlatNode>();\n  selectListSelection = new SelectionModel<FlatNode>(true);\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(this.treeData);\n    this.treeControl.expandAll();\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n  hasNoContent = (_: number, node: FlatNode) => node.name === '';\n  trackBy = (_: number, node: FlatNode) => `${node.key}-${node.name}`;\n\n  addNewNode(node: FlatNode): void {\n    const parentNode = this.flatNodeMap.get(node);\n    if (parentNode) {\n      parentNode.children = parentNode.children || [];\n      parentNode.children.push({\n        name: '',\n        key: `${parentNode.key}-${parentNode.children.length}`\n      });\n      this.dataSource.setData(this.treeData);\n      this.treeControl.expand(node);\n    }\n  }\n\n  saveNode(node: FlatNode, value: string): void {\n    const nestedNode = this.flatNodeMap.get(node);\n    if (nestedNode) {\n      nestedNode.name = value;\n      this.dataSource.setData(this.treeData);\n    }\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component } from '@angular/core';\n\nimport { NzTreeFlatDataSource, NzTreeFlattener } from 'ng-zorro-antd/tree-view';\n\ninterface FoodNode {\n  name: string;\n  disabled?: boolean;\n  children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n  {\n    name: 'Fruit',\n    children: [{ name: 'Apple' }, { name: 'Banana', disabled: true }, { name: 'Fruit loops' }]\n  },\n  {\n    name: 'Vegetables',\n    children: [\n      {\n        name: 'Green',\n        children: [{ name: 'Broccoli' }, { name: 'Brussels sprouts' }]\n      },\n      {\n        name: 'Orange',\n        children: [{ name: 'Pumpkins' }, { name: 'Carrots' }]\n      }\n    ]\n  }\n];\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  disabled: boolean;\n}\n\n@Component({\n  selector: 'nz-demo-tree-view-directory',\n  template: `\n    <nz-tree-view [nzTreeControl]=\"treeControl\" [nzDataSource]=\"dataSource\" [nzDirectoryTree]=\"true\">\n      <nz-tree-node *nzTreeNodeDef=\"let node\" nzTreeNodePadding>\n        <nz-tree-node-toggle nzTreeNodeNoopToggle></nz-tree-node-toggle>\n        <nz-tree-node-option\n          [nzDisabled]=\"node.disabled\"\n          [nzSelected]=\"selectListSelection.isSelected(node)\"\n          (nzClick)=\"selectListSelection.toggle(node)\"\n        >\n          <i nz-icon nzType=\"file\" nzTheme=\"outline\"></i>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n\n      <nz-tree-node *nzTreeNodeDef=\"let node; when: hasChild\" nzTreeNodePadding>\n        <nz-tree-node-toggle>\n          <i nz-icon nzType=\"caret-down\" nzTreeNodeToggleRotateIcon></i>\n        </nz-tree-node-toggle>\n        <nz-tree-node-option\n          [nzDisabled]=\"node.disabled\"\n          [nzSelected]=\"selectListSelection.isSelected(node)\"\n          (nzClick)=\"selectListSelection.toggle(node)\"\n        >\n          <i nz-icon [nzType]=\"treeControl.isExpanded(node) ? 'folder-open' : 'folder'\" nzTheme=\"outline\"></i>\n          {{ node.name }}\n        </nz-tree-node-option>\n      </nz-tree-node>\n    </nz-tree-view>\n  `\n})\nexport class NzDemoTreeViewDirectoryComponent implements AfterViewInit {\n  private transformer = (node: FoodNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n      disabled: !!node.disabled\n    };\n  };\n  selectListSelection = new SelectionModel<ExampleFlatNode>();\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  treeFlattener = new NzTreeFlattener(\n    this.transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new NzTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.setData(TREE_DATA);\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.treeControl.expand(this.getNode('Vegetables')!);\n    }, 300);\n  }\n\n  getNode(name: string): ExampleFlatNode | null {\n    return this.treeControl.dataNodes.find(n => n.name === name) || null;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-tree-node-checkbox:not([builtin])',\n  template: `\n    <span class=\"ant-tree-checkbox-inner\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    class: 'ant-tree-checkbox',\n    '[class.ant-tree-checkbox-checked]': `nzChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `nzIndeterminate`,\n    '[class.ant-tree-checkbox-disabled]': `nzDisabled`,\n    '(click)': 'onClick($event)'\n  }\n})\nexport class NzTreeNodeCheckboxComponent {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() nzChecked?: boolean;\n  @Input() nzIndeterminate?: boolean;\n  @Input() @InputBoolean() nzDisabled?: boolean;\n  @Output() readonly nzClick = new EventEmitter<MouseEvent>();\n\n  onClick(e: MouseEvent): void {\n    if (!this.nzDisabled) {\n      this.nzClick.emit(e);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { DataSource } from '@angular/cdk/collections';\nimport { CdkTree, TreeControl } from '@angular/cdk/tree';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Host,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({ template: '' })\n// tslint:disable-next-line: component-class-suffix\nexport class NzTreeView<T> extends CdkTree<T> implements OnInit, OnDestroy {\n  static ngAcceptInputType_nzDirectoryTree: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n\n  private destroy$ = new Subject();\n  dir: Direction = 'ltr';\n  _dataSourceChanged = new Subject<void>();\n  @Input('nzTreeControl') treeControl!: TreeControl<T, NzSafeAny>;\n  @Input('nzDataSource')\n  get dataSource(): DataSource<T> | Observable<T[]> | T[] {\n    return super.dataSource;\n  }\n  set dataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n    super.dataSource = dataSource;\n  }\n  @Input() @InputBoolean() nzDirectoryTree = false;\n  @Input() @InputBoolean() nzBlockNode = false;\n\n  constructor(\n    protected differs: IterableDiffers,\n    protected changeDetectorRef: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective,\n    @Optional() private directionality?: Directionality\n  ) {\n    super(differs, changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    if (this.directionality) {\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n        this.dir = direction;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  renderNodeChanges(data: T[] | ReadonlyArray<T>, dataDiffer?: IterableDiffer<T>, viewContainer?: ViewContainerRef, parentData?: T): void {\n    super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n    this._dataSourceChanged.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzTreeView } from './tree';\n\nexport interface NzTreeVirtualNodeData<T> {\n  data: T;\n  context: CdkTreeNodeOutletContext<T>;\n  nodeDef: CdkTreeNodeDef<T>;\n}\n\n@Component({\n  selector: 'nz-tree-node:not([builtin])',\n  exportAs: 'nzTreeNode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: CdkTreeNode, useExisting: NzTreeNodeComponent }],\n  template: `\n    <nz-tree-node-indents [indents]=\"indents\" *ngIf=\"indents.length\"></nz-tree-node-indents>\n    <ng-content select=\"nz-tree-node-toggle, [nz-tree-node-toggle]\"></ng-content>\n    <nz-tree-node-toggle class=\"nz-tree-leaf-line-icon\" *ngIf=\"indents.length && isLeaf\" nzTreeNodeNoopToggle>\n      <span class=\"ant-tree-switcher-leaf-line\"></span>\n    </nz-tree-node-toggle>\n    <ng-content select=\"nz-tree-node-checkbox\"></ng-content>\n    <ng-content select=\"nz-tree-node-option\"></ng-content>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-tree-treenode-switcher-open]': 'isExpanded',\n    '[class.ant-tree-treenode-switcher-close]': '!isExpanded'\n  }\n})\nexport class NzTreeNodeComponent<T> extends CdkTreeNode<T> implements OnDestroy, OnInit {\n  indents: boolean[] = [];\n  disabled = false;\n  selected = false;\n  isLeaf = false;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected tree: NzTreeView<T>,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {\n    super(elementRef, tree);\n    this._elementRef.nativeElement.classList.add('ant-tree-treenode');\n  }\n\n  ngOnInit(): void {\n    this.isLeaf = !this.tree.treeControl.isExpandable(this.data);\n  }\n\n  disable(): void {\n    this.disabled = true;\n    this.updateDisabledClass();\n  }\n\n  enable(): void {\n    this.disabled = false;\n    this.updateDisabledClass();\n  }\n\n  select(): void {\n    this.selected = true;\n    this.updateSelectedClass();\n  }\n\n  deselect(): void {\n    this.selected = false;\n    this.updateSelectedClass();\n  }\n\n  setIndents(indents: boolean[]): void {\n    this.indents = indents;\n    this.cdr.markForCheck();\n  }\n\n  private updateSelectedClass(): void {\n    if (this.selected) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-treenode-selected');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-tree-treenode-selected');\n    }\n  }\n\n  private updateDisabledClass(): void {\n    if (this.disabled) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-treenode-disabled');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-tree-treenode-disabled');\n    }\n  }\n}\n\n@Directive({\n  selector: '[nzTreeNodeDef]',\n  providers: [{ provide: CdkTreeNodeDef, useExisting: NzTreeNodeDefDirective }]\n})\nexport class NzTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n  @Input('nzTreeNodeDefWhen') when!: (index: number, nodeData: T) => boolean;\n}\n\n@Directive({\n  selector: '[nzTreeVirtualScrollNodeOutlet]'\n})\nexport class NzTreeVirtualScrollNodeOutletDirective<T> implements OnChanges {\n  private _viewRef: EmbeddedViewRef<NzSafeAny> | null = null;\n  @Input() data!: NzTreeVirtualNodeData<T>;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const recreateView = this.shouldRecreateView(changes);\n    if (recreateView) {\n      const viewContainerRef = this._viewContainerRef;\n\n      if (this._viewRef) {\n        viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\n      }\n\n      this._viewRef = this.data ? viewContainerRef.createEmbeddedView(this.data.nodeDef.template, this.data.context) : null;\n\n      if (CdkTreeNode.mostRecentTreeNode && this._viewRef) {\n        CdkTreeNode.mostRecentTreeNode.data = this.data.data;\n      }\n    } else if (this._viewRef && this.data.context) {\n      this.updateExistingContext(this.data.context);\n    }\n  }\n\n  private shouldRecreateView(changes: SimpleChanges): boolean {\n    const ctxChange = changes.data;\n    return !!changes.data || (ctxChange && this.hasContextShapeChanged(ctxChange));\n  }\n\n  private hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (const propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  private updateExistingContext(ctx: NzSafeAny): void {\n    for (const propName of Object.keys(ctx)) {\n      this._viewRef!.context[propName] = (this.data.context as NzSafeAny)[propName];\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport function getParent<T>(nodes: T[], node: T, getLevel: (dataNode: T) => number): T | null {\n  let index = nodes.indexOf(node);\n  if (index < 0) {\n    return null;\n  }\n  const level = getLevel(node);\n  for (index--; index >= 0; index--) {\n    const preLevel = getLevel(nodes[index]);\n    if (preLevel + 1 === level) {\n      return nodes[index];\n    }\n    if (preLevel + 1 < level) {\n      return null;\n    }\n  }\n  return null;\n}\n\nexport function getNextSibling<T>(nodes: T[], node: T, getLevel: (dataNode: T) => number, _index?: number): T | null {\n  let index = typeof _index !== 'undefined' ? _index : nodes.indexOf(node);\n  if (index < 0) {\n    return null;\n  }\n  const level = getLevel(node);\n\n  for (index++; index < nodes.length; index++) {\n    const nextLevel = getLevel(nodes[index]);\n    if (nextLevel < level) {\n      return null;\n    }\n    if (nextLevel === level) {\n      return nodes[index];\n    }\n  }\n  return null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, OnDestroy } from '@angular/core';\nimport { animationFrameScheduler, asapScheduler, merge, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\nimport { NzTreeNodeComponent } from './node';\nimport { NzTreeView } from './tree';\n\nimport { getNextSibling, getParent } from './utils';\n\n/**\n * [true, false, false, true] => 1001\n */\nfunction booleanArrayToString(arr: boolean[]): string {\n  return arr.map(i => (i ? 1 : 0)).join('');\n}\n\nconst BUILD_INDENTS_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n\n@Component({\n  selector: 'nz-tree-node-indents',\n  template: `\n    <span class=\"ant-tree-indent-unit\" [class.ant-tree-indent-unit-end]=\"!isEnd\" *ngFor=\"let isEnd of indents\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-tree-indent'\n  }\n})\nexport class NzTreeNodeIndentsComponent {\n  @Input() indents: boolean[] = [];\n}\n\n@Directive({\n  selector: 'nz-tree-node[nzTreeNodeIndentLine]',\n  host: {\n    class: 'ant-tree-show-line',\n    '[class.ant-tree-treenode-leaf-last]': 'isLast && isLeaf'\n  }\n})\nexport class NzTreeNodeIndentLineDirective<T> implements OnDestroy {\n  isLast: boolean | 'unset' = 'unset';\n  isLeaf = false;\n  private preNodeRef: T | null = null;\n  private nextNodeRef: T | null = null;\n  private currentIndents: string = '';\n  private changeSubscription: Subscription;\n\n  constructor(private treeNode: NzTreeNodeComponent<T>, private tree: NzTreeView<T>) {\n    this.buildIndents();\n    this.checkLast();\n\n    /**\n     * The dependent data (TreeControl.dataNodes) can be set after node instantiation,\n     * and setting the indents can cause frame rate loss if it is set too often.\n     */\n    this.changeSubscription = merge(this.treeNode._dataChanges, tree._dataSourceChanged)\n      .pipe(auditTime(0, BUILD_INDENTS_SCHEDULER))\n      .subscribe(() => {\n        this.buildIndents();\n        this.checkAdjacent();\n      });\n  }\n\n  private getIndents(): boolean[] {\n    const indents = [];\n    const nodes = this.tree.treeControl.dataNodes;\n    const getLevel = this.tree.treeControl.getLevel;\n    let parent = getParent(nodes, this.treeNode.data, getLevel);\n    while (parent) {\n      const parentNextSibling = getNextSibling(nodes, parent, getLevel);\n      if (parentNextSibling) {\n        indents.unshift(true);\n      } else {\n        indents.unshift(false);\n      }\n      parent = getParent(nodes, parent, getLevel);\n    }\n    return indents;\n  }\n\n  private buildIndents(): void {\n    if (this.treeNode.data) {\n      const indents = this.getIndents();\n      const diffString = booleanArrayToString(indents);\n      if (diffString !== this.currentIndents) {\n        this.treeNode.setIndents(this.getIndents());\n        this.currentIndents = diffString;\n      }\n    }\n  }\n\n  /**\n   * We need to add an class name for the last child node,\n   * this result can also be affected when the adjacent nodes are changed.\n   */\n  private checkAdjacent(): void {\n    const nodes = this.tree.treeControl.dataNodes;\n    const index = nodes.indexOf(this.treeNode.data);\n    const preNode = nodes[index - 1] || null;\n    const nextNode = nodes[index + 1] || null;\n    if (this.nextNodeRef !== nextNode || this.preNodeRef !== preNode) {\n      this.checkLast(index);\n    }\n    this.preNodeRef = preNode;\n    this.nextNodeRef = nextNode;\n  }\n\n  private checkLast(index?: number): void {\n    const nodes = this.tree.treeControl.dataNodes;\n    this.isLeaf = this.treeNode.isLeaf;\n    this.isLast = !getNextSibling(nodes, this.treeNode.data, this.tree.treeControl.getLevel, index);\n  }\n\n  ngOnDestroy(): void {\n    this.preNodeRef = null;\n    this.nextNodeRef = null;\n    this.changeSubscription.unsubscribe();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzTreeNodeComponent } from './node';\n\n@Component({\n  selector: 'nz-tree-node-option',\n  template: `\n    <span class=\"ant-tree-title\"><ng-content></ng-content></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-tree-node-content-wrapper',\n    '[class.ant-tree-node-content-wrapper-open]': 'isExpanded',\n    '[class.ant-tree-node-selected]': 'nzSelected',\n    '(click)': 'onClick($event)'\n  }\n})\nexport class NzTreeNodeOptionComponent<T> implements OnChanges {\n  static ngAcceptInputType_nzSelected: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() @InputBoolean() nzSelected = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Output() readonly nzClick = new EventEmitter<MouseEvent>();\n\n  constructor(private treeNode: NzTreeNodeComponent<T>) {}\n\n  get isExpanded(): boolean {\n    return this.treeNode.isExpanded;\n  }\n\n  onClick(e: MouseEvent): void {\n    if (!this.nzDisabled) {\n      this.nzClick.emit(e);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisabled, nzSelected } = changes;\n    if (nzDisabled) {\n      if (nzDisabled.currentValue) {\n        this.treeNode.disable();\n      } else {\n        this.treeNode.enable();\n      }\n    }\n\n    if (nzSelected) {\n      if (nzSelected.currentValue) {\n        this.treeNode.select();\n      } else {\n        this.treeNode.deselect();\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNodeOutlet, CDK_TREE_NODE_OUTLET_NODE } from '@angular/cdk/tree';\nimport { Directive, Inject, Optional, ViewContainerRef } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nzTreeNodeOutlet]',\n  providers: [\n    {\n      provide: CdkTreeNodeOutlet,\n      useExisting: NzTreeNodeOutletDirective\n    }\n  ]\n})\nexport class NzTreeNodeOutletDirective implements CdkTreeNodeOutlet {\n  constructor(public viewContainer: ViewContainerRef, @Inject(CDK_TREE_NODE_OUTLET_NODE) @Optional() public _node?: NzSafeAny) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNodePadding } from '@angular/cdk/tree';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[nzTreeNodePadding]',\n  providers: [{ provide: CdkTreeNodePadding, useExisting: NzTreeNodePaddingDirective }]\n})\nexport class NzTreeNodePaddingDirective<T> extends CdkTreeNodePadding<T> {\n  _indent = 24;\n\n  @Input('nzTreeNodePadding')\n  get level(): number {\n    return this._level;\n  }\n  set level(value: number) {\n    this._setLevelInput(value);\n  }\n\n  @Input('nzTreeNodePaddingIndent')\n  get indent(): number | string {\n    return this._indent;\n  }\n  set indent(indent: number | string) {\n    this._setIndentInput(indent);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkTreeNodeToggle } from '@angular/cdk/tree';\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: 'nz-tree-node-toggle[nzTreeNodeNoopToggle], [nzTreeNodeNoopToggle]',\n  host: {\n    class: 'ant-tree-switcher ant-tree-switcher-noop'\n  }\n})\nexport class NzTreeNodeNoopToggleDirective {}\n\n@Directive({\n  selector: 'nz-tree-node-toggle:not([nzTreeNodeNoopToggle]), [nzTreeNodeToggle]',\n  providers: [{ provide: CdkTreeNodeToggle, useExisting: NzTreeNodeToggleDirective }],\n  host: {\n    class: 'ant-tree-switcher',\n    '[class.ant-tree-switcher_open]': 'isExpanded',\n    '[class.ant-tree-switcher_close]': '!isExpanded'\n  }\n})\nexport class NzTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n  static ngAcceptInputType_recursive: BooleanInput;\n  @Input('nzTreeNodeToggleRecursive')\n  get recursive(): boolean {\n    return this._recursive;\n  }\n  set recursive(value: boolean) {\n    this._recursive = coerceBooleanProperty(value);\n  }\n\n  get isExpanded(): boolean {\n    return this._treeNode.isExpanded;\n  }\n}\n\n@Directive({\n  selector: '[nz-icon][nzTreeNodeToggleRotateIcon]',\n  host: {\n    class: 'ant-tree-switcher-icon'\n  }\n})\nexport class NzTreeNodeToggleRotateIconDirective {}\n\n@Directive({\n  selector: '[nz-icon][nzTreeNodeToggleActiveIcon]',\n  host: {\n    class: 'ant-tree-switcher-loading-icon'\n  }\n})\nexport class NzTreeNodeToggleActiveIconDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTree } from '@angular/cdk/tree';\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzTreeNodeOutletDirective } from './outlet';\nimport { NzTreeView } from './tree';\n\n@Component({\n  selector: 'nz-tree-view',\n  exportAs: 'nzTreeView',\n  template: `\n    <div class=\"ant-tree-list-holder\">\n      <div\n        [@.disabled]=\"!_afterViewInit || noAnimation?.nzNoAnimation\"\n        [@treeCollapseMotion]=\"_nodeOutlet.viewContainer.length\"\n        class=\"ant-tree-list-holder-inner\"\n      >\n        <ng-container nzTreeNodeOutlet></ng-container>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: CdkTree, useExisting: NzTreeViewComponent },\n    { provide: NzTreeView, useExisting: NzTreeViewComponent }\n  ],\n  host: {\n    class: 'ant-tree',\n    '[class.ant-tree-block-node]': 'nzDirectoryTree || nzBlockNode',\n    '[class.ant-tree-directory]': 'nzDirectoryTree',\n    '[class.ant-tree-rtl]': `dir === 'rtl'`\n  },\n  animations: [treeCollapseMotion]\n})\nexport class NzTreeViewComponent<T> extends NzTreeView<T> implements AfterViewInit {\n  @ViewChild(NzTreeNodeOutletDirective, { static: true }) nodeOutlet!: NzTreeNodeOutletDirective;\n  _afterViewInit = false;\n  ngAfterViewInit(): void {\n    Promise.resolve().then(() => {\n      this._afterViewInit = true;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { CdkTree, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { NzTreeVirtualNodeData } from './node';\nimport { NzTreeNodeOutletDirective } from './outlet';\n\nimport { NzTreeView } from './tree';\n\n@Component({\n  selector: 'nz-tree-virtual-scroll-view',\n  exportAs: 'nzTreeVirtualScrollView',\n  template: `\n    <div class=\"ant-tree-list\">\n      <cdk-virtual-scroll-viewport\n        class=\"ant-tree-list-holder\"\n        [itemSize]=\"nzNodeWidth\"\n        [minBufferPx]=\"nzMinBufferPx\"\n        [maxBufferPx]=\"nzMaxBufferPx\"\n      >\n        <ng-container *cdkVirtualFor=\"let item of nodes; let i = index\">\n          <ng-template nzTreeVirtualScrollNodeOutlet [data]=\"item\"></ng-template>\n        </ng-container>\n      </cdk-virtual-scroll-viewport>\n    </div>\n    <ng-container nzTreeNodeOutlet></ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: NzTreeView, useExisting: NzTreeVirtualScrollViewComponent },\n    { provide: CdkTree, useExisting: NzTreeVirtualScrollViewComponent }\n  ],\n  host: {\n    class: 'ant-tree',\n    '[class.ant-tree-block-node]': 'nzDirectoryTree || nzBlockNode',\n    '[class.ant-tree-directory]': 'nzDirectoryTree',\n    '[class.ant-tree-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzTreeVirtualScrollViewComponent<T> extends NzTreeView<T> {\n  @ViewChild(NzTreeNodeOutletDirective, { static: true }) readonly nodeOutlet!: NzTreeNodeOutletDirective;\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) readonly virtualScrollViewport!: CdkVirtualScrollViewport;\n\n  @Input() nzNodeWidth = 28;\n  @Input() nzMinBufferPx = 28 * 5;\n  @Input() nzMaxBufferPx = 28 * 10;\n\n  nodes: Array<NzTreeVirtualNodeData<T>> = [];\n\n  renderNodeChanges(data: T[] | ReadonlyArray<T>): void {\n    this.nodes = new Array(...data).map((n, i) => this.createNode(n, i));\n  }\n\n  private createNode(nodeData: T, index: number): NzTreeVirtualNodeData<T> {\n    const node = this._getNodeDef(nodeData, index);\n    const context = new CdkTreeNodeOutletContext<T>(nodeData);\n    if (this.treeControl.getLevel) {\n      context.level = this.treeControl.getLevel(nodeData);\n    } else {\n      context.level = 0;\n    }\n    return {\n      data: nodeData,\n      context,\n      nodeDef: node\n    };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzTreeNodeCheckboxComponent } from './checkbox';\nimport { NzTreeNodeIndentLineDirective, NzTreeNodeIndentsComponent } from './indent';\nimport { NzTreeNodeComponent, NzTreeNodeDefDirective, NzTreeVirtualScrollNodeOutletDirective } from './node';\nimport { NzTreeNodeOptionComponent } from './option';\nimport { NzTreeNodeOutletDirective } from './outlet';\nimport { NzTreeNodePaddingDirective } from './padding';\nimport {\n  NzTreeNodeNoopToggleDirective,\n  NzTreeNodeToggleActiveIconDirective,\n  NzTreeNodeToggleDirective,\n  NzTreeNodeToggleRotateIconDirective\n} from './toggle';\nimport { NzTreeView } from './tree';\nimport { NzTreeViewComponent } from './tree-view';\nimport { NzTreeVirtualScrollViewComponent } from './tree-virtual-scroll-view';\n\nconst treeWithControlComponents = [\n  NzTreeView,\n  NzTreeNodeOutletDirective,\n  NzTreeViewComponent,\n  NzTreeNodeDefDirective,\n  NzTreeNodeComponent,\n  NzTreeNodeToggleDirective,\n  NzTreeNodePaddingDirective,\n  NzTreeNodeToggleRotateIconDirective,\n  NzTreeNodeToggleActiveIconDirective,\n  NzTreeNodeOptionComponent,\n  NzTreeNodeNoopToggleDirective,\n  NzTreeNodeCheckboxComponent,\n  NzTreeNodeIndentsComponent,\n  NzTreeVirtualScrollViewComponent,\n  NzTreeVirtualScrollNodeOutletDirective,\n  NzTreeNodeIndentLineDirective\n];\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzNoAnimationModule, ScrollingModule],\n  declarations: [treeWithControlComponents],\n  exports: [treeWithControlComponents]\n})\nexport class NzTreeViewModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nexport class NzTreeFlattener<T, F, K = F> {\n  constructor(\n    public transformFunction: (node: T, level: number) => F,\n    public getLevel: (node: F) => number,\n    public isExpandable: (node: F) => boolean,\n    public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n  ) {}\n\n  private flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (childrenNodes) {\n        if (Array.isArray(childrenNodes)) {\n          this.flattenChildren(childrenNodes, level, resultNodes, parentMap);\n        } else {\n          childrenNodes.pipe(take(1)).subscribe(children => {\n            this.flattenChildren(children, level, resultNodes, parentMap);\n          });\n        }\n      }\n    }\n    return resultNodes;\n  }\n\n  private flattenChildren(children: T[], level: number, resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      const childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index !== children.length - 1);\n      this.flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach(node => this.flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F, K>): F[] {\n    const results: F[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\nexport class NzTreeFlatDataSource<T, F, K = F> extends DataSource<F> {\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data: BehaviorSubject<T[]>;\n\n  constructor(private _treeControl: FlatTreeControl<F, K>, private _treeFlattener: NzTreeFlattener<T, F, K>, initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this.flatNodes();\n  }\n\n  setData(value: T[]): void {\n    this._data.next(value);\n    this.flatNodes();\n  }\n\n  getData(): T[] {\n    return this._data.getValue();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData];\n    return merge(...changes).pipe(\n      map(() => {\n        this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n        return this._expandedData.value;\n      })\n    );\n  }\n\n  disconnect(): void {\n    // no op\n  }\n\n  private flatNodes(): void {\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.getData()));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tree-view.module';\nexport * from './checkbox';\nexport * from './utils';\nexport * from './data-source';\nexport * from './indent';\nexport * from './node';\nexport * from './option';\nexport * from './outlet';\nexport * from './padding';\nexport * from './toggle';\nexport * from './tree-view';\nexport * from './tree-virtual-scroll-view';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzTreeView as ɵa} from './tree';"],"sourceRoot":"webpack:///"}