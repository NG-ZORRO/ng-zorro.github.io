{"version":3,"sources":["./publish/__ivy_ngcc__/fesm2015/ng-zorro-antd-input-number.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACE;AACmB;AAC+G;AACnH;AACC;AAClB;AACG;;AAElD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACI;AACC;AACJ;;AAEzC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,0BAA0B,0DAAY;AACtC,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,wEAAQ;AAChD;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,YAAY,wEAAQ;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,WAAW,SAAS,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,wEAAQ;AACrC;AACA,mDAAmD,aAAa;AAChE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,8DAAQ;AAClC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,gEAAU;AACzC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,2DAAK;AACpC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EA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","file":"code-editor-index-module~form-index-module~input-index-module~input-number-index-module~slider-index~89f04a1a.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport { EventEmitter, Component, forwardRef, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Output, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: input-number.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\nimport * as ɵngcc3 from '@angular/forms';\n\nconst _c0 = [\"inputElement\"];\nclass NzInputNumberComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} cdr\n     * @param {?} focusMonitor\n     */\n    constructor(elementRef, cdr, focusMonitor) {\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.isFocused = false;\n        this.disabledUp = false;\n        this.disabledDown = false;\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.nzBlur = new EventEmitter();\n        this.nzFocus = new EventEmitter();\n        this.nzSize = 'default';\n        this.nzMin = -Infinity;\n        this.nzMax = Infinity;\n        this.nzParser = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => value\n            .trim()\n            .replace(/。/g, '.')\n            .replace(/[^\\w\\.-]+/g, ''));\n        this.nzPrecisionMode = 'toFixed';\n        this.nzPlaceHolder = '';\n        this.nzStep = 1;\n        this.nzId = null;\n        this.nzDisabled = false;\n        this.nzAutoFocus = false;\n        this.nzFormatter = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onModelChange(value) {\n        this.parsedValue = this.nzParser(value);\n        this.inputElement.nativeElement.value = `${this.parsedValue}`;\n        /** @type {?} */\n        const validValue = this.getCurrentValidValue(this.parsedValue);\n        this.setValue(validValue);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getCurrentValidValue(value) {\n        /** @type {?} */\n        let val = value;\n        if (val === '') {\n            val = '';\n        }\n        else if (!this.isNotCompleteNumber(val)) {\n            val = `${this.getValidValue(val)}`;\n        }\n        else {\n            val = this.value;\n        }\n        return this.toNumber(val);\n    }\n    // '1.' '1x' 'xx' '' => are not complete numbers\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    isNotCompleteNumber(num) {\n        return isNaN((/** @type {?} */ (num))) || num === '' || num === null || !!(num && num.toString().indexOf('.') === num.toString().length - 1);\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    getValidValue(value) {\n        /** @type {?} */\n        let val = parseFloat((/** @type {?} */ (value)));\n        // https://github.com/ant-design/ant-design/issues/7358\n        if (isNaN(val)) {\n            return value;\n        }\n        if (val < this.nzMin) {\n            val = this.nzMin;\n        }\n        if (val > this.nzMax) {\n            val = this.nzMax;\n        }\n        return val;\n    }\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    toNumber(num) {\n        if (this.isNotCompleteNumber(num)) {\n            return (/** @type {?} */ (num));\n        }\n        /** @type {?} */\n        const numStr = String(num);\n        if (numStr.indexOf('.') >= 0 && isNotNil(this.nzPrecision)) {\n            if (typeof this.nzPrecisionMode === 'function') {\n                return this.nzPrecisionMode(num, this.nzPrecision);\n            }\n            else if (this.nzPrecisionMode === 'cut') {\n                /** @type {?} */\n                const numSplit = numStr.split('.');\n                numSplit[1] = numSplit[1].slice(0, this.nzPrecision);\n                return Number(numSplit.join('.'));\n            }\n            return Number(Number(num).toFixed(this.nzPrecision));\n        }\n        return Number(num);\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    getRatio(e) {\n        /** @type {?} */\n        let ratio = 1;\n        if (e.metaKey || e.ctrlKey) {\n            ratio = 0.1;\n        }\n        else if (e.shiftKey) {\n            ratio = 10;\n        }\n        return ratio;\n    }\n    /**\n     * @param {?} e\n     * @param {?=} ratio\n     * @return {?}\n     */\n    down(e, ratio) {\n        if (!this.isFocused) {\n            this.focus();\n        }\n        this.step('down', e, ratio);\n    }\n    /**\n     * @param {?} e\n     * @param {?=} ratio\n     * @return {?}\n     */\n    up(e, ratio) {\n        if (!this.isFocused) {\n            this.focus();\n        }\n        this.step('up', e, ratio);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getPrecision(value) {\n        /** @type {?} */\n        const valueString = value.toString();\n        if (valueString.indexOf('e-') >= 0) {\n            return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n        }\n        /** @type {?} */\n        let precision = 0;\n        if (valueString.indexOf('.') >= 0) {\n            precision = valueString.length - valueString.indexOf('.') - 1;\n        }\n        return precision;\n    }\n    // step={1.0} value={1.51}\n    // press +\n    // then value should be 2.51, rather than 2.5\n    // if this.props.precision is undefined\n    // https://github.com/react-component/input-number/issues/39\n    /**\n     * @param {?} currentValue\n     * @param {?} ratio\n     * @return {?}\n     */\n    getMaxPrecision(currentValue, ratio) {\n        if (isNotNil(this.nzPrecision)) {\n            return this.nzPrecision;\n        }\n        /** @type {?} */\n        const ratioPrecision = this.getPrecision(ratio);\n        /** @type {?} */\n        const stepPrecision = this.getPrecision(this.nzStep);\n        /** @type {?} */\n        const currentValuePrecision = this.getPrecision((/** @type {?} */ (currentValue)));\n        if (!currentValue) {\n            return ratioPrecision + stepPrecision;\n        }\n        return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    }\n    /**\n     * @param {?} currentValue\n     * @param {?} ratio\n     * @return {?}\n     */\n    getPrecisionFactor(currentValue, ratio) {\n        /** @type {?} */\n        const precision = this.getMaxPrecision(currentValue, ratio);\n        return Math.pow(10, precision);\n    }\n    /**\n     * @param {?} val\n     * @param {?} rat\n     * @return {?}\n     */\n    upStep(val, rat) {\n        /** @type {?} */\n        const precisionFactor = this.getPrecisionFactor(val, rat);\n        /** @type {?} */\n        const precision = Math.abs(this.getMaxPrecision(val, rat));\n        /** @type {?} */\n        let result;\n        if (typeof val === 'number') {\n            result = ((precisionFactor * val + precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n        }\n        else {\n            result = this.nzMin === -Infinity ? this.nzStep : this.nzMin;\n        }\n        return this.toNumber(result);\n    }\n    /**\n     * @param {?} val\n     * @param {?} rat\n     * @return {?}\n     */\n    downStep(val, rat) {\n        /** @type {?} */\n        const precisionFactor = this.getPrecisionFactor(val, rat);\n        /** @type {?} */\n        const precision = Math.abs(this.getMaxPrecision(val, rat));\n        /** @type {?} */\n        let result;\n        if (typeof val === 'number') {\n            result = ((precisionFactor * val - precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n        }\n        else {\n            result = this.nzMin === -Infinity ? -this.nzStep : this.nzMin;\n        }\n        return this.toNumber(result);\n    }\n    /**\n     * @template T\n     * @param {?} type\n     * @param {?} e\n     * @param {?=} ratio\n     * @return {?}\n     */\n    step(type, e, ratio = 1) {\n        this.stop();\n        e.preventDefault();\n        if (this.nzDisabled) {\n            return;\n        }\n        /** @type {?} */\n        const value = this.getCurrentValidValue(this.parsedValue) || 0;\n        /** @type {?} */\n        let val = 0;\n        if (type === 'up') {\n            val = this.upStep(value, ratio);\n        }\n        else if (type === 'down') {\n            val = this.downStep(value, ratio);\n        }\n        /** @type {?} */\n        const outOfRange = val > this.nzMax || val < this.nzMin;\n        if (val > this.nzMax) {\n            val = this.nzMax;\n        }\n        else if (val < this.nzMin) {\n            val = this.nzMin;\n        }\n        this.setValue(val);\n        this.updateDisplayValue(val);\n        this.isFocused = true;\n        if (outOfRange) {\n            return;\n        }\n        this.autoStepTimer = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (this[type])))(e, ratio);\n        }), 300);\n    }\n    /**\n     * @return {?}\n     */\n    stop() {\n        if (this.autoStepTimer) {\n            clearTimeout(this.autoStepTimer);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(value) {\n        if (`${this.value}` !== `${value}`) {\n            this.onChange(value);\n        }\n        this.value = value;\n        this.parsedValue = value;\n        this.disabledUp = this.disabledDown = false;\n        if (value || value === 0) {\n            /** @type {?} */\n            const val = Number(value);\n            if (val >= this.nzMax) {\n                this.disabledUp = true;\n            }\n            if (val <= this.nzMin) {\n                this.disabledDown = true;\n            }\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    updateDisplayValue(value) {\n        /** @type {?} */\n        const displayValue = isNotNil(this.nzFormatter(value)) ? this.nzFormatter(value) : '';\n        this.displayValue = displayValue;\n        this.inputElement.nativeElement.value = `${displayValue}`;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onKeyDown(e) {\n        if (e.keyCode === UP_ARROW) {\n            /** @type {?} */\n            const ratio = this.getRatio(e);\n            this.up(e, ratio);\n            this.stop();\n        }\n        else if (e.keyCode === DOWN_ARROW) {\n            /** @type {?} */\n            const ratio = this.getRatio(e);\n            this.down(e, ratio);\n            this.stop();\n        }\n        else if (e.keyCode === ENTER) {\n            this.updateDisplayValue(this.value);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this.setValue(value);\n        this.updateDisplayValue(value);\n        this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    /**\n     * @return {?}\n     */\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.focusMonitor.monitor(this.elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                this.isFocused = false;\n                this.updateDisplayValue(this.value);\n                this.nzBlur.emit();\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this.onTouched()));\n            }\n            else {\n                this.isFocused = true;\n                this.nzFocus.emit();\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.nzFormatter && !changes.nzFormatter.isFirstChange()) {\n            /** @type {?} */\n            const validValue = this.getCurrentValidValue(this.parsedValue);\n            this.setValue(validValue);\n            this.updateDisplayValue(validValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\nNzInputNumberComponent.ɵfac = function NzInputNumberComponent_Factory(t) { return new (t || NzInputNumberComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nNzInputNumberComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzInputNumberComponent, selectors: [[\"nz-input-number\"]], viewQuery: function NzInputNumberComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    } }, hostVars: 10, hostBindings: function NzInputNumberComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-input-number\", true)(\"ant-input-number-focused\", ctx.isFocused)(\"ant-input-number-lg\", ctx.nzSize === \"large\")(\"ant-input-number-sm\", ctx.nzSize === \"small\")(\"ant-input-number-disabled\", ctx.nzDisabled);\n    } }, inputs: { nzSize: \"nzSize\", nzMin: \"nzMin\", nzMax: \"nzMax\", nzParser: \"nzParser\", nzPrecisionMode: \"nzPrecisionMode\", nzPlaceHolder: \"nzPlaceHolder\", nzStep: \"nzStep\", nzId: \"nzId\", nzDisabled: \"nzDisabled\", nzAutoFocus: \"nzAutoFocus\", nzFormatter: \"nzFormatter\", nzPrecision: \"nzPrecision\" }, outputs: { nzBlur: \"nzBlur\", nzFocus: \"nzFocus\" }, exportAs: [\"nzInputNumber\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(( /**\n                 * @return {?}\n                 */() => NzInputNumberComponent)),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 8, vars: 12, consts: [[1, \"ant-input-number-handler-wrap\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-up\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"up\", 1, \"ant-input-number-handler-up-inner\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-down\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 1, \"ant-input-number-handler-down-inner\"], [1, \"ant-input-number-input-wrap\"], [\"autocomplete\", \"off\", 1, \"ant-input-number-input\", 3, \"disabled\", \"placeholder\", \"ngModel\", \"keydown\", \"keyup\", \"ngModelChange\"], [\"inputElement\", \"\"]], template: function NzInputNumberComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_1_listener($event) { return ctx.up($event); })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_1_listener() { return ctx.stop(); })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_1_listener() { return ctx.stop(); });\n        ɵngcc0.ɵɵelement(2, \"i\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_3_listener($event) { return ctx.down($event); })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_3_listener() { return ctx.stop(); })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_3_listener() { return ctx.stop(); });\n        ɵngcc0.ɵɵelement(4, \"i\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(6, \"input\", 6, 7);\n        ɵngcc0.ɵɵlistener(\"keydown\", function NzInputNumberComponent_Template_input_keydown_6_listener($event) { return ctx.onKeyDown($event); })(\"keyup\", function NzInputNumberComponent_Template_input_keyup_6_listener() { return ctx.stop(); })(\"ngModelChange\", function NzInputNumberComponent_Template_input_ngModelChange_6_listener($event) { return ctx.onModelChange($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"ant-input-number-handler-up-disabled\", ctx.disabledUp);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"ant-input-number-handler-down-disabled\", ctx.disabledDown);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"placeholder\", ctx.nzPlaceHolder)(\"ngModel\", ctx.displayValue);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.nzId)(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"min\", ctx.nzMin)(\"max\", ctx.nzMax)(\"step\", ctx.nzStep);\n    } }, directives: [ɵngcc2.NzIconDirective, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNzInputNumberComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nNzInputNumberComponent.propDecorators = {\n    nzBlur: [{ type: Output }],\n    nzFocus: [{ type: Output }],\n    inputElement: [{ type: ViewChild, args: ['inputElement', { static: true },] }],\n    nzSize: [{ type: Input }],\n    nzMin: [{ type: Input }],\n    nzMax: [{ type: Input }],\n    nzParser: [{ type: Input }],\n    nzPrecision: [{ type: Input }],\n    nzPrecisionMode: [{ type: Input }],\n    nzPlaceHolder: [{ type: Input }],\n    nzStep: [{ type: Input }],\n    nzId: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzAutoFocus: [{ type: Input }],\n    nzFormatter: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzInputNumberComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzInputNumberComponent.prototype, \"nzAutoFocus\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzInputNumberComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-input-number',\n                exportAs: 'nzInputNumber',\n                template: `\n    <div class=\"ant-input-number-handler-wrap\">\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-up\"\n        (mousedown)=\"up($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-up-disabled]=\"disabledUp\"\n      >\n        <i nz-icon nzType=\"up\" class=\"ant-input-number-handler-up-inner\"></i>\n      </span>\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        (mousedown)=\"down($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-down-disabled]=\"disabledDown\"\n      >\n        <i nz-icon nzType=\"down\" class=\"ant-input-number-handler-down-inner\"></i>\n      </span>\n    </div>\n    <div class=\"ant-input-number-input-wrap\">\n      <input\n        #inputElement\n        autocomplete=\"off\"\n        class=\"ant-input-number-input\"\n        [attr.id]=\"nzId\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [disabled]=\"nzDisabled\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [placeholder]=\"nzPlaceHolder\"\n        [attr.step]=\"nzStep\"\n        (keydown)=\"onKeyDown($event)\"\n        (keyup)=\"stop()\"\n        [ngModel]=\"displayValue\"\n        (ngModelChange)=\"onModelChange($event)\"\n      />\n    </div>\n  `,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(( /**\n                         * @return {?}\n                         */() => NzInputNumberComponent)),\n                        multi: true\n                    }\n                ],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[class.ant-input-number]': 'true',\n                    '[class.ant-input-number-focused]': 'isFocused',\n                    '[class.ant-input-number-lg]': `nzSize === 'large'`,\n                    '[class.ant-input-number-sm]': `nzSize === 'small'`,\n                    '[class.ant-input-number-disabled]': 'nzDisabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }]; }, { nzBlur: [{\n            type: Output\n        }], nzFocus: [{\n            type: Output\n        }], nzSize: [{\n            type: Input\n        }], nzMin: [{\n            type: Input\n        }], nzMax: [{\n            type: Input\n        }], nzParser: [{\n            type: Input\n        }], nzPrecisionMode: [{\n            type: Input\n        }], nzPlaceHolder: [{\n            type: Input\n        }], nzStep: [{\n            type: Input\n        }], nzId: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzAutoFocus: [{\n            type: Input\n        }], nzFormatter: [{\n            type: Input\n        }], inputElement: [{\n            type: ViewChild,\n            args: ['inputElement', { static: true }]\n        }], nzPrecision: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NzInputNumberComponent.ngAcceptInputType_nzDisabled;\n    /** @type {?} */\n    NzInputNumberComponent.ngAcceptInputType_nzAutoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.autoStepTimer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.parsedValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.value;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.displayValue;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.isFocused;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.disabledUp;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.disabledDown;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.onChange;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.onTouched;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzBlur;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzFocus;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.inputElement;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzSize;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzMin;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzMax;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzParser;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzPrecision;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzPrecisionMode;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzPlaceHolder;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzStep;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzId;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzDisabled;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzAutoFocus;\n    /** @type {?} */\n    NzInputNumberComponent.prototype.nzFormatter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.cdr;\n    /**\n     * @type {?}\n     * @private\n     */\n    NzInputNumberComponent.prototype.focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: input-number.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NzInputNumberModule {\n}\nNzInputNumberModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzInputNumberModule });\nNzInputNumberModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzInputNumberModule_Factory(t) { return new (t || NzInputNumberModule)(); }, imports: [[CommonModule, FormsModule, NzIconModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzInputNumberModule, { declarations: function () { return [NzInputNumberComponent]; }, imports: function () { return [CommonModule, FormsModule, NzIconModule]; }, exports: function () { return [NzInputNumberComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzInputNumberModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule, NzIconModule],\n                declarations: [NzInputNumberComponent],\n                exports: [NzInputNumberComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-input-number.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NzInputNumberComponent, NzInputNumberModule };\n\n//# sourceMappingURL=ng-zorro-antd-input-number.js.map"],"sourceRoot":"webpack:///"}