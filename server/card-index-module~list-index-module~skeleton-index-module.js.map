{"version":3,"sources":["./publish/components/skeleton/skeleton.component.ts","./publish/components/skeleton/skeleton-element.component.ts","./publish/components/skeleton/skeleton.module.ts","./publish/components/skeleton/skeleton.type.ts","./publish/components/skeleton/public-api.ts","./publish/components/skeleton/ng-zorro-antd-skeleton.ts"],"names":[],"mappings":"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","file":"card-index-module~list-index-module~skeleton-index-module.js","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { NzSkeletonAvatar, NzSkeletonAvatarShape, NzSkeletonAvatarSize, NzSkeletonParagraph, NzSkeletonTitle } from './skeleton.type';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-skeleton',\n  exportAs: 'nzSkeleton',\n  host: {\n    '[class.ant-skeleton-with-avatar]': '!!nzAvatar',\n    '[class.ant-skeleton-active]': 'nzActive',\n    '[class.ant-skeleton-round]': '!!nzRound'\n  },\n  template: `\n    <ng-container *ngIf=\"nzLoading\">\n      <div class=\"ant-skeleton-header\" *ngIf=\"!!nzAvatar\">\n        <nz-skeleton-element nzType=\"avatar\" [nzSize]=\"avatar.size || 'default'\" [nzShape]=\"avatar.shape || 'circle'\"></nz-skeleton-element>\n      </div>\n      <div class=\"ant-skeleton-content\">\n        <h3 *ngIf=\"!!nzTitle\" class=\"ant-skeleton-title\" [style.width]=\"toCSSUnit(title.width)\"></h3>\n        <ul *ngIf=\"!!nzParagraph\" class=\"ant-skeleton-paragraph\">\n          <li *ngFor=\"let row of rowsList; let i = index\" [style.width]=\"toCSSUnit(widthList[i])\"></li>\n        </ul>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!nzLoading\">\n      <ng-content></ng-content>\n    </ng-container>\n  `\n})\nexport class NzSkeletonComponent implements OnInit, OnChanges {\n  @Input() nzActive = false;\n  @Input() nzLoading = true;\n  @Input() nzRound = false;\n  @Input() nzTitle: NzSkeletonTitle | boolean = true;\n  @Input() nzAvatar: NzSkeletonAvatar | boolean = false;\n  @Input() nzParagraph: NzSkeletonParagraph | boolean = true;\n\n  title!: NzSkeletonTitle;\n  avatar!: NzSkeletonAvatar;\n  paragraph!: NzSkeletonParagraph;\n  rowsList: number[] = [];\n  widthList: Array<number | string> = [];\n\n  constructor(private cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-skeleton');\n  }\n\n  toCSSUnit(value: number | string = ''): string {\n    return toCssPixel(value);\n  }\n\n  private getTitleProps(): NzSkeletonTitle {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasParagraph: boolean = !!this.nzParagraph;\n    let width = '';\n    if (!hasAvatar && hasParagraph) {\n      width = '38%';\n    } else if (hasAvatar && hasParagraph) {\n      width = '50%';\n    }\n    return { width, ...this.getProps(this.nzTitle) };\n  }\n\n  private getAvatarProps(): NzSkeletonAvatar {\n    const shape: NzSkeletonAvatarShape = !!this.nzTitle && !this.nzParagraph ? 'square' : 'circle';\n    const size: NzSkeletonAvatarSize = 'large';\n    return { shape, size, ...this.getProps(this.nzAvatar) };\n  }\n\n  private getParagraphProps(): NzSkeletonParagraph {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasTitle: boolean = !!this.nzTitle;\n    const basicProps: NzSkeletonParagraph = {};\n    // Width\n    if (!hasAvatar || !hasTitle) {\n      basicProps.width = '61%';\n    }\n    // Rows\n    if (!hasAvatar && hasTitle) {\n      basicProps.rows = 3;\n    } else {\n      basicProps.rows = 2;\n    }\n    return { ...basicProps, ...this.getProps(this.nzParagraph) };\n  }\n\n  private getProps<T>(prop: T | boolean | undefined): T | {} {\n    return prop && typeof prop === 'object' ? prop : {};\n  }\n\n  private getWidthList(): Array<number | string> {\n    const { width, rows } = this.paragraph;\n    let widthList: Array<string | number> = [];\n    if (width && Array.isArray(width)) {\n      widthList = width;\n    } else if (width && !Array.isArray(width)) {\n      widthList = [];\n      widthList[rows! - 1] = width;\n    }\n    return widthList;\n  }\n\n  private updateProps(): void {\n    this.title = this.getTitleProps();\n    this.avatar = this.getAvatarProps();\n    this.paragraph = this.getParagraphProps();\n    this.rowsList = [...Array(this.paragraph.rows)];\n    this.widthList = this.getWidthList();\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    this.updateProps();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzTitle || changes.nzAvatar || changes.nzParagraph) {\n      this.updateProps();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport {\n  NzSkeletonAvatarShape,\n  NzSkeletonAvatarSize,\n  NzSkeletonButtonShape,\n  NzSkeletonButtonSize,\n  NzSkeletonInputSize\n} from './skeleton.type';\n\n@Directive({\n  selector: 'nz-skeleton-element',\n  host: {\n    '[class.ant-skeleton-active]': 'nzActive'\n  }\n})\nexport class NzSkeletonElementDirective {\n  @Input() nzActive: boolean = false;\n  @Input() nzType!: 'button' | 'input' | 'avatar' | 'image';\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-skeleton', 'ant-skeleton-element');\n  }\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"button\"]',\n  template: `\n    <span\n      class=\"ant-skeleton-button\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n})\nexport class NzSkeletonElementButtonComponent {\n  @Input() nzShape: NzSkeletonButtonShape = 'default';\n  @Input() nzSize: NzSkeletonButtonSize = 'default';\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"avatar\"]',\n  template: `\n    <span\n      class=\"ant-skeleton-avatar\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [ngStyle]=\"styleMap\"\n    ></span>\n  `\n})\nexport class NzSkeletonElementAvatarComponent implements OnChanges {\n  @Input() nzShape: NzSkeletonAvatarShape = 'circle';\n  @Input() nzSize: NzSkeletonAvatarSize = 'default';\n\n  styleMap = {};\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzSize && typeof this.nzSize === 'number') {\n      const sideLength = `${this.nzSize}px`;\n      this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };\n    } else {\n      this.styleMap = {};\n    }\n  }\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"input\"]',\n  template: `\n    <span\n      class=\"ant-skeleton-input\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n})\nexport class NzSkeletonElementInputComponent {\n  @Input() nzSize: NzSkeletonInputSize = 'default';\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"image\"]',\n  template: `\n    <span class=\"ant-skeleton-image\">\n      <svg class=\"ant-skeleton-image-svg\" viewBox=\"0 0 1098 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z\"\n          class=\"ant-skeleton-image-path\"\n        />\n      </svg>\n    </span>\n  `\n})\nexport class NzSkeletonElementImageComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  NzSkeletonElementAvatarComponent,\n  NzSkeletonElementButtonComponent,\n  NzSkeletonElementDirective,\n  NzSkeletonElementImageComponent,\n  NzSkeletonElementInputComponent\n} from './skeleton-element.component';\nimport { NzSkeletonComponent } from './skeleton.component';\n\n@NgModule({\n  declarations: [\n    NzSkeletonComponent,\n    NzSkeletonElementDirective,\n    NzSkeletonElementButtonComponent,\n    NzSkeletonElementAvatarComponent,\n    NzSkeletonElementImageComponent,\n    NzSkeletonElementInputComponent\n  ],\n  imports: [BidiModule, CommonModule],\n  exports: [\n    NzSkeletonComponent,\n    NzSkeletonElementDirective,\n    NzSkeletonElementButtonComponent,\n    NzSkeletonElementAvatarComponent,\n    NzSkeletonElementImageComponent,\n    NzSkeletonElementInputComponent\n  ]\n})\nexport class NzSkeletonModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type NzSkeletonParagraphWidth = number | string | Array<number | string>;\nexport type NzSkeletonButtonShape = 'circle' | 'round' | 'default';\nexport type NzSkeletonAvatarShape = 'square' | 'circle';\nexport type NzSkeletonInputSize = 'large' | 'small' | 'default';\nexport type NzSkeletonButtonSize = NzSkeletonInputSize;\nexport type NzSkeletonAvatarSize = NzSkeletonInputSize | number;\n\nexport interface NzSkeletonAvatar {\n  size?: NzSkeletonAvatarSize;\n  shape?: NzSkeletonAvatarShape;\n}\n\nexport interface NzSkeletonTitle {\n  width?: number | string;\n}\n\nexport interface NzSkeletonParagraph {\n  rows?: number;\n  width?: NzSkeletonParagraphWidth;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './skeleton.component';\nexport * from './skeleton.module';\nexport * from './skeleton.type';\nexport * from './skeleton-element.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}