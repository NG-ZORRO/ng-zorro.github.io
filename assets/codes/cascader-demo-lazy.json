{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzCascaderOption <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/cascader'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> provinces <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token string\">'zhejiang'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zhejiang'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token string\">'jiangsu'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jiangsu'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cities<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> label<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> isLeaf<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  zhejiang<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">:</span> <span class=\"token string\">'hangzhou'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hangzhou'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ningbo'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Ningbo'</span><span class=\"token punctuation\">,</span>\n      isLeaf<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  jiangsu<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">:</span> <span class=\"token string\">'nanjing'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Nanjing'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scenicspots<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> label<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> isLeaf<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  hangzhou<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">:</span> <span class=\"token string\">'xihu'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'West Lake'</span><span class=\"token punctuation\">,</span>\n      isLeaf<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  nanjing<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">:</span> <span class=\"token string\">'zhonghuamen'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zhong Hua Men'</span><span class=\"token punctuation\">,</span>\n      isLeaf<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-cascader-lazy'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-cascader</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>values<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzLoadData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>loadData<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(ngModelChange)</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>onChanges($event)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-cascader</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoCascaderLazyComponent</span> <span class=\"token punctuation\">{</span>\n  values<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onChanges</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/** load data async execute by `nzLoadData` method */</span>\n  <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">:</span> NzCascaderOption<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> PromiseLike<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span>resolve <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\" spellcheck=\"true\">// if index less than 0 it is root node</span>\n          node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> provinces<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> cities<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> scenicspots<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\n\nconst provinces = [\n  {\n    value: 'zhejiang',\n    label: 'Zhejiang'\n  },\n  {\n    value: 'jiangsu',\n    label: 'Jiangsu'\n  }\n];\n\nconst cities: { [key: string]: Array<{ value: string; label: string; isLeaf?: boolean }> } = {\n  zhejiang: [\n    {\n      value: 'hangzhou',\n      label: 'Hangzhou'\n    },\n    {\n      value: 'ningbo',\n      label: 'Ningbo',\n      isLeaf: true\n    }\n  ],\n  jiangsu: [\n    {\n      value: 'nanjing',\n      label: 'Nanjing'\n    }\n  ]\n};\n\nconst scenicspots: { [key: string]: Array<{ value: string; label: string; isLeaf?: boolean }> } = {\n  hangzhou: [\n    {\n      value: 'xihu',\n      label: 'West Lake',\n      isLeaf: true\n    }\n  ],\n  nanjing: [\n    {\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men',\n      isLeaf: true\n    }\n  ]\n};\n\n@Component({\n  selector: 'nz-demo-cascader-lazy',\n  template: `\n    <nz-cascader [(ngModel)]=\"values\" [nzLoadData]=\"loadData\" (ngModelChange)=\"onChanges($event)\"> </nz-cascader>\n  `\n})\nexport class NzDemoCascaderLazyComponent {\n  values: string[] | null = null;\n\n  onChanges(values: string[]): void {\n    console.log(values);\n  }\n\n  /** load data async execute by `nzLoadData` method */\n  loadData(node: NzCascaderOption, index: number): PromiseLike<void> {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (index < 0) {\n          // if index less than 0 it is root node\n          node.children = provinces;\n        } else if (index === 0) {\n          node.children = cities[node.value];\n        } else {\n          node.children = scenicspots[node.value];\n        }\n        resolve();\n      }, 1000);\n    });\n  }\n}\n"}
