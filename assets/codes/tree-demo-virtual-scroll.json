{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTreeModule<span class=\"token punctuation\">,</span> NzTreeNodeOptions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/tree'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> level <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> NzTreeNodeOptions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> list<span class=\"token punctuation\">:</span> NzTreeNodeOptions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> `$<span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> treeNode<span class=\"token punctuation\">:</span> NzTreeNodeOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">,</span>\n      key<span class=\"token punctuation\">,</span>\n      expanded<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n      children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      isLeaf<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      treeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> level <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      treeNode<span class=\"token punctuation\">.</span>isLeaf <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-tree-virtual-scroll'</span><span class=\"token punctuation\">,</span>\n  standalone<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>NzTreeModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tree</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>nodes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzBlockNode</span> <span class=\"token attr-name\">nzVirtualHeight</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>300px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tree</span><span class=\"token punctuation\">></span></span>`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoTreeVirtualScrollComponent</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> NzTreeNodeOptions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">dig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component } from '@angular/core';\n\nimport { NzTreeModule, NzTreeNodeOptions } from 'ng-zorro-antd/tree';\n\nfunction dig(path = '0', level = 3): NzTreeNodeOptions[] {\n  const list: NzTreeNodeOptions[] = [];\n  for (let i = 0; i < 10; i += 1) {\n    const key = `${path}-${i}`;\n    const treeNode: NzTreeNodeOptions = {\n      title: key,\n      key,\n      expanded: true,\n      children: [],\n      isLeaf: false\n    };\n\n    if (level > 0) {\n      treeNode.children = dig(key, level - 1);\n    } else {\n      treeNode.isLeaf = true;\n    }\n\n    list.push(treeNode);\n  }\n  return list;\n}\n\n@Component({\n  selector: 'nz-demo-tree-virtual-scroll',\n  standalone: true,\n  imports: [NzTreeModule],\n  template: `<nz-tree [nzData]=\"nodes\" nzBlockNode nzVirtualHeight=\"300px\"></nz-tree>`\n})\nexport class NzDemoTreeVirtualScrollComponent {\n  nodes: NzTreeNodeOptions[] = dig();\n}\n"}
