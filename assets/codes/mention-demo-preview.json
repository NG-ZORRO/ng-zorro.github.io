{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DomSanitizer<span class=\"token punctuation\">,</span> SafeHtml <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/platform-browser'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-mention-preview'</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token punctuation\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tabset</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tab</span> <span class=\"token attr-name\">nzTitle</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Write<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-mention</span> <span class=\"token attr-name\">[nzSuggestions]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>suggestions<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span>\n            <span class=\"token attr-name\">nz-input</span>\n            <span class=\"token attr-name\">[nzAutosize]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{ minRows: 4, maxRows: 4 }<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>inputValue<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">(ngModelChange)</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>renderPreView()<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">nzMentionTrigger</span>\n          <span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-mention</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tab</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-tab</span> <span class=\"token attr-name\">nzTitle</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Preview<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">[innerHTML]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preview<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tab</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-tabset</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoMentionPreviewComponent</span> <span class=\"token punctuation\">{</span>\n  inputValue<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Switch tab view preview @NG-ZORRO '</span><span class=\"token punctuation\">;</span>\n  preview<span class=\"token punctuation\">:</span> SafeHtml<span class=\"token punctuation\">;</span>\n  suggestions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'NG-ZORRO'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'angular'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Reactive-Extensions'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> sanitizer<span class=\"token punctuation\">:</span> DomSanitizer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderPreView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> RegExp <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> prefixArray <span class=\"token operator\">=</span> <span class=\"token keyword\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> prefix <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>prefix<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> prefixToken <span class=\"token operator\">=</span> prefixArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/(\\$|\\^)/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prefixArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prefixToken <span class=\"token operator\">=</span> `<span class=\"token punctuation\">[</span>$<span class=\"token punctuation\">{</span>prefixToken<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>`<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>`<span class=\"token punctuation\">(</span>\\\\s<span class=\"token operator\">|</span><span class=\"token operator\">^</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">{</span>prefixToken<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">^</span>\\\\s<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>`<span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">renderPreView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> regex <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> previewValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>\n        regex<span class=\"token punctuation\">,</span>\n        match <span class=\"token operator\">=</span><span class=\"token operator\">></span> `<span class=\"token operator\">&lt;</span>a target<span class=\"token operator\">=</span><span class=\"token string\">\"_blank\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://github.com/${match.trim().substring(1)}\"</span><span class=\"token operator\">></span>$<span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>`\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>preview <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sanitizer<span class=\"token punctuation\">.</span><span class=\"token function\">bypassSecurityTrustHtml</span><span class=\"token punctuation\">(</span>previewValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n@Component({\n  selector: 'nz-demo-mention-preview',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-tabset>\n      <nz-tab nzTitle=\"Write\">\n        <nz-mention [nzSuggestions]=\"suggestions\">\n          <textarea\n            nz-input\n            [nzAutosize]=\"{ minRows: 4, maxRows: 4 }\"\n            [(ngModel)]=\"inputValue\"\n            (ngModelChange)=\"renderPreView()\"\n            nzMentionTrigger\n          >\n          </textarea>\n        </nz-mention>\n      </nz-tab>\n      <nz-tab nzTitle=\"Preview\">\n        <pre [innerHTML]=\"preview\"></pre>\n      </nz-tab>\n    </nz-tabset>\n  `\n})\nexport class NzDemoMentionPreviewComponent {\n  inputValue: string = 'Switch tab view preview @NG-ZORRO ';\n  preview: SafeHtml;\n  suggestions = ['NG-ZORRO', 'angular', 'Reactive-Extensions'];\n\n  constructor(private sanitizer: DomSanitizer) {\n    this.renderPreView();\n  }\n\n  getRegExp(prefix: string | string[]): RegExp {\n    const prefixArray = Array.isArray(prefix) ? prefix : [prefix];\n    let prefixToken = prefixArray.join('').replace(/(\\$|\\^)/g, '\\\\$1');\n\n    if (prefixArray.length > 1) {\n      prefixToken = `[${prefixToken}]`;\n    }\n\n    return new RegExp(`(\\\\s|^)(${prefixToken})[^\\\\s]*`, 'g');\n  }\n\n  renderPreView(): void {\n    if (this.inputValue) {\n      const regex = this.getRegExp('@');\n      const previewValue = this.inputValue.replace(\n        regex,\n        match => `<a target=\"_blank\" href=\"https://github.com/${match.trim().substring(1)}\">${match}</a>`\n      );\n      this.preview = this.sanitizer.bypassSecurityTrustHtml(previewValue);\n    }\n  }\n}\n"}
